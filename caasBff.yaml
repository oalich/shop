openapi: 3.0.3
info:
  title: DiCoS CaaS-BFF API
  version: 1.0.0
  contact:
    email: o.alich@deutschepost.de
    name: Deutsche Post, Oliver Alich
  license:
    name: Copyright Deutsche Post
  description:  >-
    DiCoS Checkout as a Service Backend for Frontend API
    # Introduction
    
    This version is derived from the DiCoS CaaS Backend API V3 (draft from 2022-10-31)
    DiCoS is the migration of the eFiliale monolith to micro service approach and is replacing some legacy technologies like Oracle ATP Web Commerce.

    ## Overview
    
    This is the specification of the DiCoS REST API for the usage by backend systems. 
    
    ## Pre-conditions
    
    The service can only be reached via `HTTPS` only. 
    The web service is a REST interface, that only corresponds with `application/json` only.
    The access is available with DP DHL network only.
    
        Please note, that DiCoS application runs in a session context and that DiCoS cannot provide stateless REST services.
    
    
    ## Versioning
    
    Any updates to this API specification that introduce breaking changes will result in an additional major version of the API. The versioning is done via URL (/api/backend/v2/...). There is no version v1 of this service, we start with v2 to be in sync with the according widget services.
    
    
    ## Security
    
    The service isn't public available. ACL on Akamai and DiCoS ensure it's only reached by DP DHL internal clients.
    Authentication is needed.
    
    ### Backend Integration Services
    
    Third party backend services must use a secret to access these services. The backend services do not rely on a session context ... even knowing,that the DiCoS server will spawn and use internally a session for each request. The  partner backend system must NOT send a session cookie.
    
    ## Error handling

    All error responses (4xx and 5xx) have the `Content-Type` header set to `application/problem+json`. The response content must also contain the HTTP return code as well as the reason for the error. For example
    
    ```
      { "code" : "ERR_1234", "detail" : "Product not available." }
    ```
    
    Note that the error code given here is a business-level error code, not the HTTP error code.
    
    The most common HTTP codes to expect from this service are:

    >400: Bad Request. A client error that can denote a syntax or semantic error. Error details can be found in the return `Error` object. Do not repeat the request without changing it.


    >401: Unauthorized. A client has no valid authorization.

servers:
  - url: 'https://int.caas-bff/api/v1'
    description: >
      **The DiCoS production server.**
      !!Not setup yet!!
      !!E.g. for a description: The access to the production system is available within DP DHL network only.!!
  - url: 'https://int.uat.caas-bff/api/v1'
    description: >
      **The DiCoS UAT server.**
      !!Not setup yet!!
      !!E.g. for a description: The access to the UAT system is available within DP DHL network only.!!
tags:
  - name: caas
    description: DiCoS CaaS BFF
security:
  - ApiKeyAuth: []

paths:

#
#  CaaS-Backend-API
#
  /health:
    get:
      tags:
        - caas
      summary: "To get a status report"
      description: "API is used to get current health status"
      operationId: "getStatus"
      responses:
        "200":
          description: "Status ok"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
              example: {
                "status": "ok"
              }
        "500":
          description: "Status nok"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
              example: {
                "status": "nok"
              }
      x-codegen-request-body-name: body

  /ping/:
    get:
      tags:
        - 'Default'
      summary: Checks if the server is running
      operationId: ping
      security: []   # No security
      responses:
        '200':
          description: Server is up and running.
        '418':
          $ref: '#/components/responses/418'
        default:
          description: Something is wrong.

  /channel/{channelId}/productconfiguration/validate/nsa/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    post:
      tags:
        - 'Product Configurations: API to validate product configurations'
      summary: Product Configuration Validation
      operationId: validate-product-configuration-nsa
      security:
        - ApiKeyAuth: []
      description: >
        Validates new products configuration.
        
            Note: This is only a validation call. No persistence happens.
      requestBody:
        description: Products configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductValidationDetailsNSARequest'
            examples:
              ProductValidationValidNSARequest:
                $ref: '#/components/examples/ProductValidationValidNSARequest'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductValidationDetailsNSAResponse'
              examples:
                ProductValidationValidNSAResponse:
                  $ref: '#/components/examples/ProductValidationValidNSAResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/order/settle/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    post:
      tags:
        - 'Orders: API for CaaS order settlement'
      summary: Order Settlement
      operationId: settle-order
      security:
        - ApiKeyAuth: []
      description: Creates a new order where only the settlement is needed. Payment and Fulfillment are already done. Order is always in state finalized.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/OrderSettleRequest'
            examples:
              OrderSettleWithBusinessCustomerRequest:
                $ref: '#/components/examples/OrderSettleWithBusinessCustomerRequest'
              OrderSettleWithPrivateCustomerRequest:
                $ref: '#/components/examples/OrderSettleWithPrivateCustomerRequest'
              OrderSettleWithGroupedItemsRequest:
                $ref: '#/components/examples/OrderSettleWithGroupedItemsRequest'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSettleResponse'
              examples:
                OrderSettled:
                  $ref: '#/components/examples/OrderSettled'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/order/settle/poststation/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    post:
      tags:
        - 'Orders: API for CaaS order settlement'
      summary: Order Settlement for Poststation
      operationId: settle-order-pst
      security:
        - ApiKeyAuth: []
      description: Creates a new order where only the settlement is needed. Payment and Fulfillment are already done. Order is always in state finalized.Special version for Poststation.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/OrderSettleRequestPoststation'
            examples:
              OrderSettlePoststationIM:
                $ref: '#/components/examples/OrderSettlePoststationIM'
              OrderSettlePoststationIMAddress:
                $ref: '#/components/examples/OrderSettlePoststationIMAddress'
              OrderSettlePoststationDHLOFWithPickup:
                $ref: '#/components/examples/OrderSettlePoststationDHLOFWithPickup'
              OrderSettlePoststationNSA:
                $ref: '#/components/examples/OrderSettlePoststationNSA'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSettleResponse'
              examples:
                OrderSettledPoststation:
                  $ref: '#/components/examples/OrderSettledPoststation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/orders/{caasOrderId}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The identifier of the order to be created.
        schema:
          type: string
          minLength: 10
          maxLength: 100
        required: true
    get:
      tags:
        - 'Orders: API for CaaS orders'
      summary: Order Details Read
      operationId: get-order-backend
      security:
        - ApiKeyAuth: []
      description: Gets the order.
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/orders/{caasOrderId}/state/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The identifier of the order.
        schema:
          type: string
          minLength: 10
          maxLength: 100
        required: true
    get:
      tags:
        - 'Orders: API for CaaS orders'
      summary: Order State
      operationId: get-order-state
      security:
        - ApiKeyAuth: []
      description: Gets the order state.
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderState'
              examples:
                OrderStateResponseAfterCreation:
                  $ref: '#/components/examples/OrderStateResponseAfterCreation'
                OrderStateResponseAfterPayment:
                  $ref: '#/components/examples/OrderStateResponseAfterPayment'
                OrderStateResponseAfterFinalization:
                  $ref: '#/components/examples/OrderStateResponseAfterFinalization'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/orders/{caasOrderId}/payment/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The identifier of the order.
        schema:
          type: string
          minLength: 10
          maxLength: 100
        required: true
    get:
      tags:
        - 'Orders: API for CaaS orders'
      summary: Order Payment Details
      # Bugfix merge: changed from 'get-order-payment' to 'get-order-payment-backend'
      operationId: get-order-payment-backend
      security:
        - ApiKeyAuth: []
      description: Gets the order payment details.
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPayment'
              examples:
                OrderPaymentResponseSDD:
                  $ref: '#/components/examples/OrderPaymentResponseSDD'
                OrderPaymentResponsePayPal:
                  $ref: '#/components/examples/OrderPaymentResponsePayPal'
                OrderPaymentResponseApplePay:
                  $ref: '#/components/examples/OrderPaymentResponseApplePay'
                OrderPaymentResponseGiropay:
                  $ref: '#/components/examples/OrderPaymentResponseGiropay'
                OrderPaymentResponseGooglePay:
                  $ref: '#/components/examples/OrderPaymentResponseGooglePay'
                OrderPaymentResponseBraintreeCreditCard:
                  $ref: '#/components/examples/OrderPaymentResponseBraintreeCreditCard'
                OrderPaymentResponseOPP:
                  $ref: '#/components/examples/OrderPaymentResponseOPP'
        '204':
          description: >
            No Content. Means that the order has not yet any payment details, e.g. because the order is just created. 
            
            Only relevant for orders in payment state `unknown`.
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/orders/{caasOrderId}/refund/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The identifier of the order to be refunded.
        schema:
          type: string
          minLength: 10
          maxLength: 100
        required: true
    post:
      tags:
        - 'Orders: API for CaaS orders'
      summary: (Partial) Order Refund
      operationId: create-order-refund
      security:
        - ApiKeyAuth: []
      description: Creates a full or partial refund for an order.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/OrderRefundRequest'
      responses:
        '200':
          description: >
            OK. Responds with the created refund CaaS order id.
            
                Note: To get the detail information about the refund order created, the order needs to be loaded as CaaS order with the refund order id as resource identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRefundResponse'
              examples:
                RefundCreated:
                  $ref: '#/components/examples/RefundCreatedResponse'
        '202':
          description: >
            Refund is already creted, but processing is not finished. Responds with the created refund CaaS order id.
            
                Note: To get the detail information about the refund order created, the order needs to be loaded as CaaS order with the refund order id as resource identifier.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderRefundResponse'
              examples:
                RefundCreated:
                  $ref: '#/components/examples/RefundCreatedResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/order/{caasOrderId}/address/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The identifier of the order to be upated.
        schema:
          type: string
          minLength: 10
          maxLength: 100
        required: true
    put:
      tags:
        - 'Orders: API for CaaS invoice handling'
      summary: Order Billing Address Update
      operationId: update-order-address
      security:
        - ApiKeyAuth: []
      description: Updates the order billing address to be able to create a new or updated invoice.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/OrderAddressRequest'
      responses:
        '200':
          description: OK. Responds with the current order resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetails'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/order/{caasOrderId}/invoice/{style}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The identifier of the order.
        schema:
          type: string
          minLength: 10
          maxLength: 100
        required: true
      - name: style
        in: path
        description: The identifier of the order.
        schema:
          type: string
          minLength: 1
          maxLength: 10
          enum:
            - url
            - base64
        required: true
    get:
      tags:
        - 'Orders: API for CaaS invoice handling'
      summary: Order Invoice Download
      operationId: order-invoice-download
      security:
        - ApiKeyAuth: []
      description: >
        Returns the invoice for the given CaaS oder id. Two response types are supported
        
        
        - url - the url of the pdf location is returned
        
        - base64 - the PDF is returned base64 encoded in JSON response
      responses:
        '200':
          description: OK. Responds with the current order resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInvoiceDetails'
              examples:
                OrderInvoiceUrl:
                  $ref: '#/components/examples/OrderInvoiceUrl'
                OrderInvoiceBase64:
                  $ref: '#/components/examples/OrderInvoiceBase64'
        '400':
          $ref: '#/components/responses/400'
          # TODO: missing content, that may cause problems
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'
#
# CaaS-Widget-API
#

  /channel/{channelId}/ping/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    get:
      tags:
        - 'Health Check'
      summary: Checks if the server is running
#      operationId: ping
# Bugfix merge:
      operationId: ping-widget
      responses:
        '204':
          description: Server is up and running.
        '418':
          $ref: '#/components/responses/418'
        default:
          description: Something is wrong.

  /channel/{channelId}/categories/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    get:
      tags:
        - 'Catalogs: API for fetching catalog data'
      summary: Available Categories Read
      operationId: list-categories
      description: >
        Fetch categories for product grouping. Response contains data of all categories available for the widget.
      responses:
        '200':
          description: The list of available categories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailsListResult'
              examples:
                SuccessfullCategoriesList:
                  $ref: '#/components/examples/CategoryDetailsList'
                SuccessfullCategoriesListMulitple:
                  $ref: '#/components/examples/CategoryDetailsListMultipleLevels'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/categories/{categoryId}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: categoryId
        in: path
        description: The id of the category.
        schema:
          type: string
          minLength: 1
          maxLength: 20
        required: true
    get:
      tags:
        - 'Catalogs: API for fetching catalog data'
      summary: Category Details Read
      operationId: get-category-by-id
      description: Fetch details of a specific category.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryType'
              examples:
                CategoryExample:
                  $ref: '#/components/examples/CategoryDetails'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/products/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    get:
      tags:
        - 'Catalogs: API for fetching catalog data'
      summary: Available Products Read.
      operationId: list-products
      description: >
        Fetch products that can be configured. Response contains data of all products available for the widget.
      responses:
        '200':
          description: The list of available products.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailsListResult'
              examples:
                SuccessfullProductsList:
                  $ref: '#/components/examples/ProductDetailsList'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/products/{productId}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: productId
        in: path
        description: The product identifier (PPL or EKP) of the product (depends on channel configuration).
        schema:
          type: integer
          minLength: 1
          maxLength: 50
        required: true
    get:
      tags:
        - 'Catalogs: API for fetching catalog data'
      summary: Product Details Read
      operationId: get-product-by-id
      description: Fetch details of a specific product.
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
              examples:
                ProductDetail:
                  $ref: '#/components/examples/ProductDetail'
                ProductServiceDetail:
                  $ref: '#/components/examples/ProductServiceDetail'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/productlimitations/{type}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: type
        in: path
        description: The id id of the product type.
        schema:
          type: string
          enum:
            - "im"
            - "of"
        required: true
    get:
      tags:
        - 'Catalogs: API for fetching catalog data'
      summary: Product Limitations Read
      operationId: list-product-limitations
      description: Product Limitation list.
      responses:
        '200':
          description: The list of all product limitations of the given product type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductTypeLimitations'
              examples:
                ProductTypeLimitationsIM:
                  $ref: '#/components/examples/ProductTypeLimitationsIM'
                ProductTypeLimitationsOF:
                  $ref: '#/components/examples/ProductTypeLimitationsOF'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/countries/{type}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: type
        in: path
        description: The id of the product type.
        schema:
          type: string
          enum:
            - "im"
            - "of"
        required: true
    get:
      tags:
        - 'Catalogs: API for fetching catalog data'
      summary: Countries Read
      operationId: list-countries
      description: Country list.
      responses:
        '200':
          description: The list of all content elements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryList'
              examples:
                CountryListIM:
                  $ref: '#/components/examples/CountryListIM'
                CountryListOF:
                  $ref: '#/components/examples/CountryListOF'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/regions/{type}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: type
        in: path
        description: The id of the product type.
        schema:
          type: string
          enum:
            - "im"
            - "of"
        required: true
    get:
      tags:
        - 'Catalogs: API for fetching catalog data'
      summary: Regions Read
      operationId: list-regions
      description: Regions list.
      responses:
        '200':
          description: The list of all content elements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryRegionList'
              examples:
                CountryListOF:
                  $ref: '#/components/examples/CountryRegionListOF'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/content/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    get:
      tags:
        - 'Content: API for fetching text content elements'
      summary: Content Read
      operationId: list-content
      description: >
        Fetch text content elements for the user interface. Response contains all text content for the widget.
        
            Please note, that
            - content text elements might contain HTML.
            - content text elements might contains placeholders like {caasOrderId}. The frontend must replace them with current content.
      responses:
        '200':
          description: The list of all content elements.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTextElementsResult'
              examples:
                ContentList:
                  $ref: '#/components/examples/ContentTextElements'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/payments/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    post:
      tags:
        - 'Payments: API for fetching available payment options'
      summary: Available Payments Read
      operationId: get-payment-options
      description: >
        Fetches payment options of the channel.
        
            Note: This operation is specified to be able to deliver device specific payment options. But for the DPDHL app widget, it won't deliver any device specific information, as it's a business requirement to have this logic implemented in the widget itself.
      requestBody:
        description: Device information.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInformationType'
            examples:
              Android:
                summary: Example to fetch available payment options for Android
                value:
                  osType: "android"
                  osVersion: "0815"
                  deviceId: ""
              iOS:
                summary: Example to fetch available payment options for Apple
                value:
                  osType: "ios"
                  osVersion: "4711"
                  deviceId: ""
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOptionsListResult'
              examples:
                PaymentsOneSingle:
                  $ref: '#/components/examples/PaymentsOneSingle'
                PaymentsAndroidOnly:
                  $ref: '#/components/examples/PaymentsAndroidOnly'
                PaymentsiOSOnly:
                  $ref: '#/components/examples/PaymentsiOSOnly'
                PaymentsMultiple:
                  $ref: '#/components/examples/PaymentsMultiple'
                PaymentsMultipleWithCollision:
                  $ref: '#/components/examples/PaymentsMultipleWithCollision'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/payments/btinittoken/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    get:
      tags:
        - payments
      summary: "GET Braintree init token"
      operationId: "btinittoken"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BraintreeTokenResponse"
        '500':
          description: "INTERNAL SERVER ERROR"
          $ref: '#/components/responses/500'

  /channel/{channelId}/productconfigurations/{configId}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: configId
        schema:
          type: string
          minLength: 30
          maxLength: 50
        description: >
          The unique configuration identifier of the configured product.
          
          
          _The configuration identifier is a UUID generated by the client. It is only valid within the current session context. The backend system is not validating the id._

        in: path
        required: true
    get:
      tags:
        - 'Product Configurations: API for configuring products'
      summary: Product Configuration Read
      operationId: get-product-configuration
      security:
        - ApiKeyAuth: []
      description: Fetches a products configuration.
      responses:
        '200':
          description:  OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductConfigurationDetails'
              examples:
                ProductConfigurationValid:
                  $ref: '#/components/examples/ProductConfigurationValidResponseIM'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'
    post:
      tags:
        - 'Product Configurations: API for configuring products'
      summary: Product Configuration Creation
      operationId: add-product-configuration
      security:
        - ApiKeyAuth: []
      description: Configures a new products configuration.
      requestBody:
        description: Products configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductConfigurationDetails'
            examples:
              ValidProductIM:
                $ref: '#/components/examples/ProductConfigurationValidIM'
              ProductConfigurationValidNSA:
                $ref: '#/components/examples/ProductConfigurationValidNSA'
              InValidProduct:
                $ref: '#/components/examples/ProductConfigurationInValid'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductConfiguration'
              examples:
                OrderCreated:
                  $ref: '#/components/examples/ProductConfigurationValidResponseIM'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'
    put:
      tags:
        - 'Product Configurations: API for configuring products'
      summary: Product Configuration Update
      operationId: update-product-configuration
      security:
        - ApiKeyAuth: []
      description: Updates a product configuration with all of it's products.
      requestBody:
        description: Product configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductConfigurationDetails'
            examples:
              ValidProduct:
                $ref: '#/components/examples/ProductConfigurationValidIM'
              ProductConfigurationValidNSA:
                $ref: '#/components/examples/ProductConfigurationValidNSA'
              InValidProduct:
                $ref: '#/components/examples/ProductConfigurationInValid'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductConfigurationDetails'
              examples:
                OrderCreated:
                  $ref: '#/components/examples/ProductConfigurationValidResponseIM'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'
    delete:
      tags:
        - 'Product Configurations: API for configuring products'
      summary: Product Configuration Removal
      operationId: remove-product-configuration
      security:
        - ApiKeyAuth: []
      description: Removes a product configuration.
      responses:
        '200':
          $ref: '#/components/responses/200'
          # Bugfix merge: original
          # description: OK.
          # content:
          #   application/problem:
          #     schema:
          #       $ref: '#/components/responses/200'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'

  /channel/{channelId}/productconfigurations/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    get:
      tags:
        - 'Product Configurations Sets: API for configuring sets of products'
      summary: Multiple Product Configuration Read
      operationId: get-product-configuration-set
      security:
        - ApiKeyAuth: []
      description: Fetches set of product configurations. These are all product configurations within the current session, as no resource identifier exists.
      responses:
        '200':
          description:  OK. Responds with the current resources representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductConfigurationSetDetails'
              examples:
                ProductConfigurationSetValid:
                  $ref: '#/components/examples/ProductConfigurationSetValid'
                ProductConfigurationSetIMBundle:
                  $ref: '#/components/examples/ProductConfigurationSetIMBundle'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'
    post:
      tags:
        - 'Product Configurations Sets: API for configuring sets of products'
      summary: Multiple Product Configuration Creation
      operationId: add-product-configuration-set
      security:
        - ApiKeyAuth: []
      description: Configures a set of new products. A set are all product configurations within the current session, as no resource identifier exists.
      requestBody:
        description: Batch products configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductConfigurationSetDetails'
            examples:
              ProductConfigurationSetValid:
                $ref: '#/components/examples/ProductConfigurationSetValid'
              ProductConfigurationSetIMBundle:
                $ref: '#/components/examples/ProductConfigurationSetIMBundle'
              ProductConfigurationValidPST:
                $ref: '#/components/examples/ProductConfigurationValidPST'
              ProductConfigurationSetFailureBundleWithDifferentQuantities:
                $ref: '#/components/examples/ProductConfigurationSetFailureBundleWithDifferentQuantities'
      responses:
        '200':
          description: OK. Responds with the current resources representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductConfigurationSetDetails'
              examples:
                ProductConfigurationSetValid:
                  $ref: '#/components/examples/ProductConfigurationSetValid'
                ProductConfigurationSetIMBundle:
                  $ref: '#/components/examples/ProductConfigurationSetIMBundle'
                ProductConfigurationValidPST:
                  $ref: '#/components/examples/ProductConfigurationValidPST'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'
    put:
      tags:
        - 'Product Configurations Sets: API for configuring sets of products'
      summary: Multiple Product Configuration Update
      operationId: update-product-configuration-set
      security:
        - ApiKeyAuth: []
      description: Updates a set of products configurations. These are all product configurations within the current session, as no resource identifier exists.
      requestBody:
        description: Batch products configuration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductConfigurationSetDetails'
            examples:
              ProductConfigurationSetValid:
                $ref: '#/components/examples/ProductConfigurationSetValid'
              ProductConfigurationSetIMBundle:
                $ref: '#/components/examples/ProductConfigurationSetIMBundle'
              ProductConfigurationSetFailureBundleWithDifferentQuantities:
                $ref: '#/components/examples/ProductConfigurationSetFailureBundleWithDifferentQuantities'
      responses:
        '200':
          description: OK. Responds with the current resources representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductConfigurationSetDetails'
              examples:
                ProductConfigurationSetValid:
                  $ref: '#/components/examples/ProductConfigurationSetValid'
                ProductConfigurationSetIMBundle:
                  $ref: '#/components/examples/ProductConfigurationSetIMBundle'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'
    patch:
      tags:
        - 'Product Configurations Sets: API for configuring sets of products'
      summary: Multiple Product Configuration Update (fails always)
      operationId: patch-product-configuration-set
      security:
        - ApiKeyAuth: []
      description: It is not possible to patch a set of products. It's only possible to update a complete set via method PUT.
      responses:
        '400':
          $ref: '#/components/responses/400'
    delete:
      tags:
        - 'Product Configurations Sets: API for configuring sets of products'
      summary: Multiple Product Configuration Delete
      operationId: delete-product-configuration-set
      security:
        - ApiKeyAuth: []
      description: Deletes a set of product configurations. These are all product configurations within the current session, as no resource identifier exists.
      responses:
        '200':
          $ref: '#/components/responses/200'
          # Bugfix merge: original
          # description: OK.
          # content:
          #   application/problem:
          #     schema:
          #       $ref: '#/components/responses/200'
        '401':
          $ref: '#/components/responses/401'

  /channel/{channelId}/carts/{cartId}/productconfigurations/{configId}/checkout/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: cartId
        schema:
          type: string
          minLength: 30
          maxLength: 50
        description: >
          The id of the cart.
          
          
          _The cart id is a UUID generated by the client. It is only valid within the current session context. The backend system is not validating the id._
        in: path
        required: true
      - name: configId
        schema:
          type: string
          minLength: 30
          maxLength: 50
        description: >
          The config id of the configured product.
        in: path
        required: true
    post:
      tags:
        - 'Carts: API for creating a cart and initiating the checkout'
      summary: Cart Creation and Checkout Initiation
      operationId: create-cart-and-initiate-checkout
      security:
        - ApiKeyAuth: []
      description: >
        Creates a new cart. Result will be the generated caasOrderId.
        
        
            Please note: In case an order is already created within the current session, the existing order will be abandoned and a new order gets created. The REST client cannot access the abandoned order anymore.
      requestBody:
        description: Optional existing CaaS order id.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartCheckoutToOrder'
            examples:
              caasOrderIdGiven:
                summary: Example request including the optional caasOrderId
                value:
                  caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              examples:
                CartCheckoutToOrder:
                  $ref: '#/components/examples/CartCheckoutToOrder'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'
        '500':
          $ref: '#/components/responses/500'
          # Bugfix merge: original
          # description: Error - The given caasOrderId is not suitable/available for using it.
          # content:
          #   application/problem+json:
          #     schema:
          #       $ref: '#/components/responses/500'
          #     examples:
          #       CartCheckoutToOrderInvalidCaasOrderId:
          #         $ref: '#/components/examples/CartCheckoutToOrderInvalidCaasOrderIdError'
    get:
      tags:
        - 'Carts: API for creating a cart and initiating the checkout'
      summary: Get Cart Details
      operationId: get-cart-details
      security:
        - ApiKeyAuth: []
      description: Creates a cart with one product configuration and directly initiates the checkout of the cart.
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              examples:
                CartCheckoutInitialized:
                  $ref: '#/components/examples/CartCheckoutToOrder'
                CartCheckoutNotInitialized:
                  $ref: '#/components/examples/CartCheckoutNotInitialized'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/carts/{cartId}/productconfigurations/checkout/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: cartId
        schema:
          type: string
          minLength: 30
          maxLength: 50
        description: >
          The id of the cart.
          
          
          _The cart id is a UUID generated by the client. It is only valid within the current session context. The backend system is not validating the id._
        in: path
        required: true
    post:
      tags:
        - 'Carts: API for creating a cart and initiating the checkout'
      summary: Cart Creation for a set of product configurations and Checkout Initiation
      operationId: create-cart-and-initiate-checkout-of-product-sets
      security:
        - ApiKeyAuth: []
      description: >
        Creates a new cart. Result will be the generated caasOrderId.
        
        
            Please note: In case an order is already created within the current session, the existing order will be abandoned and a new order gets created. The REST client cannot access the abandoned order anymore.
      requestBody:
        description: Products configurations list.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductConfigurationsSet'
            examples:
              CartCheckoutProductConfigurationsSetRequestMultiple:
                $ref: '#/components/examples/CartCheckoutProductConfigurationsSetRequestMultiple'
              CartCheckoutProductConfigurationsSetRequestSingle:
                $ref: '#/components/examples/CartCheckoutProductConfigurationsSetRequestSingle'
      responses:
        '200':
          description: OK. Responds with the current resources representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
              examples:
                CartCheckoutToOrderMultipleProductConfigurations:
                  $ref: '#/components/examples/CartCheckoutToOrderMultipleProductConfigurations'

  /channel/{channelId}/thirdpartyorderupdate/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    put:
      tags:
        - 'ThirdPartyOrder: API for updating an order'
      summary: Order Update
      operationId: update-order-encrypted
      security:
        - ApiKeyAuth: []
      description: >
        Updates an order with all details. The payload is a encrypted JSON structure. It contains a reference to an existing CaaS order. Encryption via JWE with algorithm `A256CBC-HS512`.
        
        
            Note: This is a real PUT operation, the content of the order positions basket will be replaced with the new third party basket data from the payload.

            Structure of the JSON after decryption.
        
            {
              caasOrderId: "<CaaS order id>",
              totp: "<CaaS TOTP>,
              clientCartId: "<third party (e.g. OFI) shopping cart id>",
              clientCartVersionId: "<shopping cart version>",
              orderItems: [
                  {
                      productID: "<EKP | PPL>",
                      productType: "<product|coupon (optional)>",
                      quantity: "<number of items>",
                      amount: "<gross amount per item (optional)>",
                      settlementFlag: "<true|false - defines whether the item is relevant for the settlement, default = true>",
                      invoiceReference: "<in case of coupons the information about the redeemed coupon to be printed on the invoice>",
                      printPosition: 
                          {
                            groupPosition: "<The position of this item or item group on invoice>",
                            groupItemPosition: "<The position of this item within the group on invoice>"
                          },
                      destinationCountry: "<ISO Alpha3 code of the destination country>"
                  }
              ],
              paymentOption: "<all|secure>",
              transportConditionsRequired: "<true|false>",
              paymentDetailsSDD: 
                  {
                      name: "<Last name or company name of the bank account holder>"
                      firstName: "<First name of the bank account holder (optional)>"
                      additionalInfo: "<An additional address information of the bank account holder (optional)>"
                      street: "<Street of the bank account holder>"
                      houseNo: "<House number of the bank account holder (optional)>"
                      zipCode: "<Zip code of the bank account holder>"
                      city: "<City of the bank account holder>"
                      country: "<Country of the bank account holder. Only 'DE' is allowed>"
                  }
            }
      requestBody:
        description: Updates an order with details - including order positions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailsJWE'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
              examples:
                OrderInStateOpenPayPal:
                  $ref: '#/components/examples/OrderInStateOpenPayPal'
                OrderInStateOpenSDD:
                  $ref: '#/components/examples/OrderInStateOpenSDD'

  /channel/{channelId}/encryptthirdpartyorderdata/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    post:
      tags:
        - 'TestAPI : Encrypt ThirdPartyOrder payload '
      summary: Encrypt ThirdPartyOrder payload
      operationId: encrypt-order-update-data
      requestBody:
        description: Updates an order with details - including order positions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThirdPartyOrderUpdateRequest'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            text/plain:
              schema:
                type: string
  #
  # Bugfix merge: both APIs have this endpoint (Widget only with a GET and Backend has a POST)
  #
  /channel/{channelId}/order/init/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    get:
      tags:
        - 'Order: API for initializing an order'
      summary: Order Init
      # Bugfix merge: renamed operationId from init-order to init-order-get
      operationId: init-order-get
      security:
        - ApiKeyAuth: []
      description: >
        Creates a new CaaS order.
        
            When this service it called multiple times, it will create a new CaaS order every time. Any previously exiting CaaS order in the session won't be accessible anymore!
      responses:
        '200':
          description: OK. Responds with the CaaS order id.
          content:
            application/json:
              schema:
                # Bugfix merge: renamed from OrderInitResponse to OrderInitResponseFe
                $ref: '#/components/schemas/OrderInitResponseFe'
              examples:
                OrderInitialized:
                  $ref: '#/components/examples/OrderInitializedResponse'
    #
    # Bugfix merge: post is coming from the backend API
    #
    post:
      tags:
        - 'Orders: API for CaaS order initialization'
      summary: Order Initialization
      operationId: init-order
      security:
        - ApiKeyAuth: []
      description: Initializes a new order.
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/OrderInitRequest'
            examples:
              KnownCustomer:
                $ref: '#/components/examples/OrderInitWithoutItemsKnownCustomerRequest'
              UnknownCustomer:
                $ref: '#/components/examples/OrderInitWithoutItemsUnknownCustomerRequest'
              KnownCustomerWithItems:
                $ref: '#/components/examples/OrderInitWithItemsKnownCustomerRequest'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderInitResponse'
              examples:
                OrderInitialized:
                  $ref: '#/components/examples/OrderInitialized'
        '400':
          $ref: '#/components/responses/400'
          # Bugfix merge: changed from description/content/schema as below
          # description: Bad Request
          # content:
          #   application/problem+json:
          #     schema:
          #       $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '418':
          $ref: '#/components/responses/418'

  #
  # Bugfix merge: added prefix 'fe' to the endpoint
  #
  #  original: /channel/{channelId}/orders/{caasOrderId}/:
  /fe/channel/{channelId}/orders/{caasOrderId}/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The id of the CasS order, that was returned by the product configuration service.
        schema:
          type: string
          minLength: 1
          maxLength: 50
        required: true
    get:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Details Read
      operationId: get-order
      security:
        - ApiKeyAuth: []
      description: >
        Fetches order details

            Please note: It is only possible to fetch the content of the current and the previous order of a session. So in case an order is rejected during finalization, the REST client is able to read the data of the previous order to e.g. write some of the data to the new order to try finalization again.
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
              examples:
                OrderInStateFulfilledMobile:
                  $ref: '#/components/examples/OrderInStateFulfilledMobile'
                OrderInStateCreatedWithoutProducts:
                  $ref: '#/components/examples/OrderInStateCreatedWithoutProducts'
                OrderInStateCreated:
                  $ref: '#/components/examples/OrderInStateCreated'
                OrderInStateOpenPayPal:
                  $ref: '#/components/examples/OrderInStateOpenPayPal'
                OrderInStateOpenSDD:
                  $ref: '#/components/examples/OrderInStateOpenSDD'
                OrderInStateAcceptedSDD:
                  $ref: '#/components/examples/OrderInStateAcceptedSDD'
                OrderInStatePayedGooglePay:
                  $ref: '#/components/examples/OrderInStatePayedGooglePay'
                OrderInStateFulfilledPdf:
                  $ref: '#/components/examples/OrderInStateFulfilledPdf'
                OrderInStateFulfilledPdfWithSDD:
                  $ref: '#/components/examples/OrderInStateFulfilledPdfWithSDD'
                OrderInStateFulfilledPdfWithZVT:
                  $ref: '#/components/examples/OrderInStateFulfilledPdfWithZVT'
                OrderInStateFulfilledPdfAndMobile:
                  $ref: '#/components/examples/OrderInStateFulfilledPdfAndMobile'
        '400':
          $ref: '#/components/responses/400'
          # TODO: examples
        '401':
          $ref: '#/components/responses/401'
          # TODO: examples
        '404':
          $ref: '#/components/responses/404'
          # TODO: examples
        '418':
          $ref: '#/components/responses/418'
          # TODO: examples
    post:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Creation (will always fail)
      operationId: add-order
      security:
        - ApiKeyAuth: []
      description: It is not possible to create a new order. This happens implicit via product configuration creation.
      responses:
        '400':
          $ref: '#/components/responses/400'
          # TODO: examples
        '401':
          $ref: '#/components/responses/401'
          # TODO: examples
    put:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Update
      operationId: update-order
      security:
        - ApiKeyAuth: []
      description: >
        Updates an order with all details.

            Please note: This is only possible, if the order is not yet finalized or the payment results are not yet stored.


            Please note: Updates of the order are only checked for plausibility and  correctness. It's possible to e.g. not accept the terms of trade in update order. But when the order shall get finalized or the payment results shall be stored, that might fail because of incomplete or incorrect order data.


            Please note: In case a set of product configurations is given in the request, this behaves as a strong PUT operations and not as a path. It will result in a complete update of all order items.


            Please note: In case products are given in the request ... it is only possible to update existing product configurations. It isn't possible to create new product configuration via PUT order!
      requestBody:
        description: Updates an order with details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDetailsRequest'
            examples:
              OrderUpdateComplete:
                $ref: '#/components/examples/OrderUpdateComplete'
              OrderUpdateIMBundle:
                $ref: '#/components/examples/OrderUpdateIMBundle'
              OrderUpdateValidationFailureMissingEmail:
                $ref: '#/components/examples/OrderUpdateValidationFailureMissingEmail'
              OrderUpdateValidationFailureInvoiceType:
                $ref: '#/components/examples/OrderUpdateValidationFailureInvoiceType'
              OrderUpdateValidationFailureTermsOfTrade:
                $ref: '#/components/examples/OrderUpdateValidationFailureTermsOfTrade'
              OrderUpdateValidationFailureMissingPaymentType:
                $ref: '#/components/examples/OrderUpdateValidationFailureMissingPaymentType'
              OrderUpdateValidationFailureTermsOfTradeRequirement:
                $ref: '#/components/examples/OrderUpdateValidationFailureTermsOfTradeRequirement'
              OrderUpdateValidationFailureInvalidPaymentType:
                $ref: '#/components/examples/OrderUpdateValidationFailureInvalidPaymentType'
              OrderUpdateValidationFailureDifferentProductTypes:
                $ref: '#/components/examples/OrderUpdateValidationFailureDifferentProductTypes'
              OrderUpdateValidationAddDeviceEmail:
                $ref: '#/components/examples/OrderUpdateValidationAddDeviceEmail'
              OrderUpdateValidationAddDeviceId:
                $ref: '#/components/examples/OrderUpdateValidationAddDeviceId'
              OrderUpdateValidationFailureclientPriceUpdate:
                $ref: '#/components/examples/OrderUpdateValidationFailureclientPriceUpdate'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
              examples:
                OrderInStateOpenPayPal:
                  $ref: '#/components/examples/OrderInStateOpenPayPal'
                OrderInStateOpenSDD:
                  $ref: '#/components/examples/OrderInStateOpenSDD'
                OrderInStateCreated:
                  $ref: '#/components/examples/OrderInStateCreated'
        '400':
          $ref: '#/components/responses/400'
          # TODO: examples
        '401':
          $ref: '#/components/responses/401'
          # TODO: examples
        '404':
          $ref: '#/components/responses/404'
          # TODO: examples
        '403':
          $ref: '#/components/responses/403'
          # TODO: examples
        '418':
          $ref: '#/components/responses/418'
          # TODO: examples
    delete:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Delete
      operationId: remove-order
      security:
        - ApiKeyAuth: []
      description: Deletes an order with all details. Only possible if the order is not yet finalized.
      responses:
        '200':
          $ref: '#/components/responses/200'
          # Bugfix merge: original
          # description: OK.
          # content:
          #   application/problem:
          #     schema:
          #       $ref: '#/components/responses/200'
          # TODO: examples
        '400':
          $ref: '#/components/responses/400'
          # TODO: examples
        '401':
          $ref: '#/components/responses/401'
          # TODO: examples
        '404':
          $ref: '#/components/responses/404'
          # TODO: examples
        '403':
          $ref: '#/components/responses/403'
          # TODO: examples
        '418':
          $ref: '#/components/responses/418'
          # TODO: examples

  /channel/{channelId}/orders/{caasOrderId}/payments/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The id of the CaaS order, that was returned by the product configuration service.
        schema:
          type: string
          minLength: 1
          maxLength: 50
        required: true
    post:
      tags:
        - 'Orders: API for checking out an order'
      summary: Available Order Payments Read
      operationId: get-order-payment-options
      security:
        - ApiKeyAuth: []
      description: >
        Fetches order payment options. This service is very similar to the generic service "Available Payments Read" with the difference that in this service the payments result list might be reduced as not every payment will be available for every product within an order.
        
            This service method must not be used for the first widget implementation DHLMobileApp as the available order specific payments won't be different than the payment methods form the generic service.
        
            This operation is specified to be able to deliver device specific payment options. But for the DPDHL app widget, it won't deliver any device specific information, as it's a business requirement to have this logic implemented in the widget itself.
      requestBody:
        description: Gives.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceInformationType'
            examples:
              Android:
                summary: Example to fetch available payment options for Android
                value:
                  osType: "android"
                  osVersion: "0815"
                  deviceId: ""
              iOS:
                summary: Example to fetch available payment options for Apple
                value:
                  osType: "ios"
                  osVersion: "4711"
                  deviceId: ""
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentOptionsListResult'
              examples:
                OrderPaymentsSingle:
                  $ref: '#/components/examples/OrderPaymentsSingle'
                OrderPaymentsMultiple:
                  $ref: '#/components/examples/OrderPaymentsMultiple'
                OrderPaymentsMultipleWithCollision:
                  $ref: '#/components/examples/OrderPaymentsMultipleWithCollision'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'

  #
  # Bugfix merge: added prefix 'fe' to the endpoint
  #
  #  original /channel/{channelId}/orders/{caasOrderId}/payment/:
  /fe/channel/{channelId}/orders/{caasOrderId}/payment/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The id of the CaaS order, that was returned by the product configuration service.
        schema:
          type: string
          minLength: 1
          maxLength: 50
        required: true
    post:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Payment Creation (will always fail)
      operationId: add-order-payment
      security:
        - ApiKeyAuth: []
      description: It is not possible to create a new payment. This happens implicit via order finalization.
      responses:
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    get:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Payment Details Read
      operationId: get-order-payment
      security:
        - ApiKeyAuth: []
      description: "Fetches order details"
      responses:
        '200':
          description: Returns the complete payment information data. The result of the payment capturing state is implicitly reported via order status only.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInformationType'
              examples:
                OrderPaymentInitializedWithPSP:
                  $ref: '#/components/examples/OrderPaymentInitializedWithPSP'
                OrderPaymentFinalizedWithPayPal:
                  $ref: '#/components/examples/OrderPaymentFinalizedWithPayPal'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '418':
          $ref: '#/components/responses/418'
    put:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Payment Details Update
      operationId: update-order-payment
      security:
        - ApiKeyAuth: []
      description: Updates an order with all details of payment provider after payment.
      requestBody:
        description: Updates an order with payment details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInformationType'
            examples:
              OrderPaymentDoneInformation:
                $ref: '#/components/examples/OrderPaymentDoneInformation'
              OrderPaymentDoneSDD:
                $ref: '#/components/examples/OrderPaymentDoneSDD'
              OrderPaymentFullSDD:
                $ref: '#/components/examples/OrderPaymentFullSDD'
              OrderPaymentDoneZVT:
                $ref: '#/components/examples/OrderPaymentDoneZVT'
              OrderPaymentFailureBeauseTokenSet:
                $ref: '#/components/examples/OrderPaymentFailureBeauseTokenSet'
              OrderPaymentFailureBeauseTokenSet2:
                $ref: '#/components/examples/OrderPaymentFailureBeauseTokenSet2'
              OrderPaymentFailureBecauseMandateReferenceGiven:
                $ref: '#/components/examples/OrderPaymentFailureBecauseMandateReferenceGiven'
              OrderPaymentFailureSDDNoAccountHolderData:
                $ref: '#/components/examples/OrderPaymentFailureSDDNoAccountHolderData'
      responses:
        '200':
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInformationType'
              examples:
                OrderPaymentFinalizedWithPayPal:
                  $ref: '#/components/examples/OrderPaymentFinalizedWithPayPal'
                OrderPaymentSDDStored:
                  $ref: '#/components/examples/OrderPaymentSDDStored'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '403':
          $ref: '#/components/responses/403'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/orders/{caasOrderId}/validate/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The id of the CaaS order, that was returned by the product configuration service.
        schema:
          type: string
          minLength: 1
          maxLength: 50
        required: true
    get:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Validation
      operationId: validate-order
      security:
        - ApiKeyAuth: []
      description: >
        Validates an order and returns whether it's ready for finalization or not.
        
            Note: This method is only useful, after an order is updated with payment details. Otherwiese the response will always report an incomplte order.
      responses:
        '200':
          description: >
            OK. Cancellation request is received and accepted.
            
                Please note: It's only the confirmation of the acceptance of the cancellation request. 
                There is not service to query if the request is successfully accepted!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderValidationType'
              examples:
                OrderValidationSuccess:
                  $ref: '#/components/examples/OrderValidationSuccess'
                OrderValidationFailurePayment:
                  $ref: '#/components/examples/OrderValidationFailurePayment'
                OrderValidationFailureMultiple:
                  $ref: '#/components/examples/OrderValidationFailureMultiple'
                OrderValidationFailureInconsistent:
                  $ref: '#/components/examples/OrderValidationFailureInconsistent'
        '400':
          $ref: '#/components/responses/400'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/orders/{caasOrderId}/finalize/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The id of the CaaS order, that was returned by the product configuration service.
        schema:
          type: string
          minLength: 1
          maxLength: 50
        required: true
    post:
      tags:
        - 'Orders: API for checking out an order'
      summary: Order Finalization
      operationId: finalize-order
      security:
        - ApiKeyAuth: []
      description: >
        Finalizes an order ... means the configured order gets ordered/payed by the customer. 
        Initiates the payment process validation on server backend.
        
            Note: The process time of this service can be multiple seconds due to external payment provider calls. In case of a network issue on client side, it's possible to execute the call a second time. The service will either responds with the current order state or waits until a still ongoing processing is finalized and then responds with the order state.
      requestBody:
        description: Updates an order with payment details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInformationType'
            examples:
              OrderPaymentDoneInformation:
                $ref: '#/components/examples/OrderPaymentDoneInformation'
              OrderPaymentDoneSDD:
                $ref: '#/components/examples/OrderPaymentDoneSDD'
              OrderPaymentDoneZVT:
                $ref: '#/components/examples/OrderPaymentDoneZVT'
              OrderPaymentFailureBeauseTokenSet:
                $ref: '#/components/examples/OrderPaymentFailureBeauseTokenSet'
              OrderPaymentFailureBeauseTokenSet2:
                $ref: '#/components/examples/OrderPaymentFailureBeauseTokenSet2'
              OrderPaymentFailureBecauseMandateReferenceGiven:
                $ref: '#/components/examples/OrderPaymentFailureBecauseMandateReferenceGiven'
      responses:
        '200':
          description: OK. Responds with the current resource representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailsResponse'
              examples:
                OrderInStatePayedGooglePay:
                  $ref: '#/components/examples/OrderInStatePayedGooglePay'
        '400':
          $ref: '#/components/responses/400'
          # TODO: examples
        '401':
          $ref: '#/components/responses/401'
          # TODO: examples
        '404':
          $ref: '#/components/responses/404'
          # TODO: examples
        '403':
          $ref: '#/components/responses/403'
          # TODO: examples
        '418':
          $ref: '#/components/responses/418'
          # TODO: examples

  /channel/{channelId}/orders/{caasOrderId}/cancel/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The id of the CaaS order, that was returned by the product configuration service.
        schema:
          type: string
          minLength: 1
          maxLength: 50
        required: true
    post:
      tags:
        - 'Cancellation: API for cancellation / refunds of orders'
      summary: Order Cancel Request Creation
      operationId: place-order-cancellation-request
      security:
        - ApiKeyAuth: []
      description: Creates order cancellation request.
      requestBody:
        description: Cancels an order with details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCancellationDetails'
            examples:
              OrderCancellationFullRequest:
                $ref: '#/components/examples/OrderCancellationFullRequest'
              OrderCancellationMandatoryRequest:
                $ref: '#/components/examples/OrderCancellationMandatoryRequest'
              OrderCancellationMissingDataFailure:
                $ref: '#/components/examples/OrderCancellationMissingDataFailure'
              OrderCancellationWrongOrderIdFailure:
                $ref: '#/components/examples/OrderCancellationWrongOrderIdFailure'
      responses:
        '200':
          description: >
            OK. Cancellation request is received and accepted.
            
                Please note: It's only the confirmation of the acceptance of the cancellation request. 
                There is not service to query if the request is successfully accepted!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCancellationType'
              examples:
                OrderCancellationSuccess:
                  $ref: '#/components/examples/OrderCancellationSuccess'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
          # Bugfix merge: original
          # description: Error - The given caasOrderId is not suitable/available for using it.
          # content:
          #   application/problem+json:
          #     schema:
          #       $ref: '#/components/responses/500'
          #     examples:
          #       CartCheckoutToOrderInvalidCaasOrderId:
          #         $ref: '#/components/examples/CartCheckoutToOrderInvalidCaasOrderIdError'
        '418':
          $ref: '#/components/responses/418'

  /channel/{channelId}/orders/{caasOrderId}/fulfillment/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
      - name: caasOrderId
        in: path
        description: The id of the CaaS order, that was returned by the product configuration service.
        schema:
          type: string
          minLength: 1
          maxLength: 50
        required: true
    get:
      tags:
        - 'Fulfillment: API for get fulfillment status of an order'
      summary: Order Fulfillment Read
      operationId: get-order-fulfillment
      security:
        - ApiKeyAuth: []
      description: Fetches order fulfillment details.
      responses:
        '200':
          description: >
            OK
            
                Please note. As multiple products can be ordered, the fulfillment return structure must be read in different ways for the different product types.
                - In case multiple mobile stamps are ordered, the fulfillment consist of multiple results. For each stamp one productId and one result are returned.
                - In case of multiple pdf stamps .. one pdf contains all delivered stamps, so only one fulfillment result is returned with a singe result entry and multiple productIds.
                - In case a mix of mobile stamps (single or multiple) and pdf stamps (single or multiple) is ordered via products sets, the response array may contains both cases mentioned above
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentTypeItems'
              examples:
                OrderFulfillmentSingleMobileDone:
                  $ref: '#/components/examples/OrderFulfillmentSingleMobileDone'
                OrderFulfillmentNotYetFinalized:
                  $ref: '#/components/examples/OrderFulfillmentNotYetFinalized'
                OrderFulfillmentSinglePdfDone:
                  $ref: '#/components/examples/OrderFulfillmentSinglePdfDone'
                OrderFulfillmentMultiplePdfDone:
                  $ref: '#/components/examples/OrderFulfillmentMultiplePdfDone'
                OrderFulfillmentMultipleMobileDone:
                  $ref: '#/components/examples/OrderFulfillmentMultipleMobileDone'
                OrderFulfillmentMultipleProductSetsMixedDone:
                  $ref: '#/components/examples/OrderFulfillmentMultipleProductSetsMixedDone'
                OrderFulfillmentNSADone:
                  $ref: '#/components/examples/OrderFulfillmentNSADone'
                OrderFulfillmentGenericDone:
                  $ref: '#/components/examples/OrderFulfillmentGenericDone'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
          # Bugfix merge: original
          # description: Error - The given caasOrderId is not suitable/available for using it.
          # content:
          #   application/problem+json:
          #     schema:
          #       $ref: '#/components/responses/500'
          #     examples:
          #       CartCheckoutToOrderInvalidCaasOrderId:
          #         $ref: '#/components/examples/CartCheckoutToOrderInvalidCaasOrderIdError'
        '418':
          $ref: '#/components/responses/418'


  /channel/{channelId}/services/validateiban/:
    parameters:
      - name: channelId
        in: path
        description: The id of the sales channel.
        schema:
          type: string
          minLength: 1
          maxLength: 8
        required: true
    post:
      tags:
        - 'Services: Supporting API'
      summary: IBAN validation
      operationId: validate-iban
      description: IBAN validation or conversion request.
      requestBody:
        description: Validate an IBAN or create it from bank details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IbanValidateRequest'
            examples:
              ServiceIbanValidateCompleteRequest:
                $ref: '#/components/examples/ServiceIbanValidateCompleteRequest'
              ServiceIbanValidateIbanOnlyRequest:
                $ref: '#/components/examples/ServiceIbanValidateIbanOnlyRequest'
              ServiceIbanValidateAccountAndBankCodeRequest:
                $ref: '#/components/examples/ServiceIbanValidateAccountAndBankCodeRequest'
      responses:
        '200':
          description: >
            OK. Cancellation request is received and accepted.
            
                Please note: It's only the confirmation of the acceptance of the cancellation request. 
                There is not service to query if the request is successfully accepted!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbanValidate'
              examples:
                ServiceIbanValidateCompleteResponse:
                  $ref: '#/components/examples/ServiceIbanValidateCompleteResponse'
                ServiceIbanValidateTransformationFailedResponse:
                  $ref: '#/components/examples/ServiceIbanValidateTransformationFailedResponse'
                ServiceIbanValidateFailedResponse:
                  $ref: '#/components/examples/ServiceIbanValidateFailedResponse'
        '400':
          $ref: '#/components/responses/400'
        '418':
          $ref: '#/components/responses/418'


components:

  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY  # name of the header, query parameter or cookie


  schemas:
#
#    CaaS-Backend-API
#
    Object:
      type: object
      properties: { }

    BillingAddressBusinessCustomer:
      type: object
      description: The business customer's company billing address
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        companyName:
          $ref: '#/components/schemas/TypeAddressCompanyName'
        supplement:
          $ref: "#/components/schemas/TypeAddressSupplement"
        street:
          $ref: '#/components/schemas/TypeAddressStreet'
        houseNo:
          $ref: '#/components/schemas/TypeAddressHouseNo'
        zipCode:
          $ref: '#/components/schemas/TypeAddressZipCode'
        city:
          $ref: '#/components/schemas/TypeAddressCity'
        country:
          $ref: '#/components/schemas/TypeAddressCountry'
      discriminator:
        propertyName: type
      required:
        - companyName
        - street
        - zipCode
        - city
        - country

    BillingAddressPrivateCustomer:
      type: object
      description: The private customer's billing address. Either a first or last name are mandatory.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        firstName:
          $ref: '#/components/schemas/TypeAddressFirstName'
        lastName:
          $ref: '#/components/schemas/TypeAddressLastName'
        supplement:
          $ref: "#/components/schemas/TypeAddressSupplement"
        street:
          $ref: '#/components/schemas/TypeAddressStreet'
        houseNo:
          $ref: '#/components/schemas/TypeAddressHouseNo'
        zipCode:
          $ref: '#/components/schemas/TypeAddressZipCode'
        city:
          $ref: '#/components/schemas/TypeAddressCity'
        country:
          $ref: '#/components/schemas/TypeAddressCountry'
      discriminator:
        propertyName: type
      required:
        - firstName
        - lastName
        - street
        - zipCode
        - city
        - country

    Error:
      type: object
      description: The error response with error details
      properties:
        code:
          type: string
          description: The business-level error code
        detail:
          type: string
          description: The reason why the error occurred. This string is provided for user-friendliness and might change in the future. Use the error code for client-side workflow. (Note':' This is a business cause, not the HTTP error.)
      required:
        - code
        - detail

    OrderAddressRequest:
      type: object
      description: Request details to initialize a new order.
      properties:
        billingAddress:
          oneOf:
            - $ref: '#/components/schemas/BillingAddressBusinessCustomer'
            - $ref: '#/components/schemas/BillingAddressPrivateCustomer'
          discriminator:
            propertyName: type
            mapping:
              Business: '#/components/schemas/BillingAddressBusinessCustomer'
              Private: '#/components/schemas/BillingAddressPrivateCustomer'

    #
    # Bugfix merge: OrderDetails is Backend.yaml response for Order. OrderItems in this case is referring to OrderItems and have OrderItem in it.
    # OrderDetails -> OrderItems -> OrderItem
    #
    OrderDetails:
      type: object
      description: Details of an order.
      properties:
        caasOrderId:
          allOf:
            - $ref: '#/components/schemas/TypeCaasOrderId'
            - description: The id of the order.
        clientCartId:
          $ref: '#/components/schemas/TypeClientCartId'
        clientCartVersionId:
          $ref: '#/components/schemas/TypeClientCartIdVersionId'
        email:
          $ref: '#/components/schemas/TypeEmail'
        billingAddress:
          oneOf:
            - $ref: '#/components/schemas/BillingAddressBusinessCustomer'
            - $ref: '#/components/schemas/BillingAddressPrivateCustomer'
          discriminator:
            propertyName: type
            mapping:
              Business: '#/components/schemas/BillingAddressBusinessCustomer'
              Private: '#/components/schemas/BillingAddressPrivateCustomer'
        orderItems:
          $ref: '#/components/schemas/OrderItems'
        orderAmount:
          type: integer
          minimum: 1
          maximum: 10000
          description: The gross price of the order in cent.
        paymentState:
          $ref: '#/components/schemas/PaymentStateType'
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        orderState:
          $ref: '#/components/schemas/OrderStateType'
        creationDate:
          $ref: '#/components/schemas/TypeCreationDate'
        shopOrderId:
          $ref: '#/components/schemas/TypeShopOrderId'
        legal:
          type: object
          properties:
            termsOfTradeAccepted:
              type: boolean
              description: Client's acceptance of the terms of trade is given.
            transportConditionsAccepted:
              type: boolean
              description: Client's acceptance of the general transport conditions is given.
      required:
        - caasOrderId
        - clientCartId
        - orderItems
        - orderState
        - orderAmount
        - creationDate

    OrderInitRequest:
      type: object
      description: Request details to initialize a new order.
      properties:
        clientCartId:
          $ref: '#/components/schemas/TypeClientCartId'
        callbackUrlSuccess:
          $ref: '#/components/schemas/TypeUrl'
        callbackUrlError:
          $ref: '#/components/schemas/TypeUrl'
        paymentOption:
          $ref: '#/components/schemas/PaymentOptionType'
        email:
          $ref: '#/components/schemas/TypeEmail'
        billingAddress:
          oneOf:
            - $ref: '#/components/schemas/BillingAddressBusinessCustomer'
            - $ref: '#/components/schemas/BillingAddressPrivateCustomer'
          discriminator:
            propertyName: type
            mapping:
              Business: '#/components/schemas/BillingAddressBusinessCustomer'
              Private: '#/components/schemas/BillingAddressPrivateCustomer'
        termsOfTradeAccepted:
          type: boolean
          description: Client's acceptance of the terms of trade is given.
      required:
        - clientCartId
        - callbackUrlSuccess
        - callbackUrlError
        - paymentOption

    OrderInitResponse:
      type: object
      description: Request details to initialize a new order.
      properties:
        caasOrderId:
          allOf:
            - $ref: '#/components/schemas/TypeCaasOrderId'
            - description: The CaaS order Id that has been created.
        clientCartId:
          $ref: '#/components/schemas/TypeClientCartId'
        totp:
          allOf:
            - $ref: '#/components/schemas/TypeTOTP'
            - description: >
                The time-based one-time password (TOTP) to allow the creation of a frontend session for the order
                
                  Validity: 5 Minutes
      required:
        - caasOrderId
        - clientCartId
        - totp

    OrderInvoiceDetails:
      type: object
      description: Detailsof an oder invoice.
      properties:
        url:
          allOf:
            - $ref: '#/components/schemas/TypeUrl'
            - description: The url of the invoice PDF to be downloaded - via internet.
        urlTotp:
          allOf:
            - $ref: '#/components/schemas/TypeTOTP'
            - description: A one time token to allow the download of the PDF via internet without additional authentication.
        content:
          type: string
          minLength: 1
          description: The base64 encoded PDF invoice.

    OrderItems:
      type: array
      description: The product items of the order.
      items:
        $ref: '#/components/schemas/OrderItem'

    OrderItem:
      type: object
      properties:
        productId:
          $ref: '#/components/schemas/TypeProductId'
        productType:
          $ref: '#/components/schemas/OrderItemType'
        quantity:
          type: string
          minLength: 1
          maxLength: 8
          description: The number of items.
        amount:
          type: string
          minLength: 1
          maxLength: 100000
          description: The gross amount per item in cent.
        printPosition:
          type: object
          description: Defines the position, where the item shall be printed on invoice and how items shall be grouped.
          properties:
            groupPosition:
              type: integer
              minimum: 1
              maximum: 99
              description: The position of this item or item group on invoice.
            groupItemPosition:
              type: integer
              minimum: 1
              maximum: 99
              description: The position of this item within the group on invoice.
          required:
            - groupPosition
            - groupItemPosition
      required:
        - productId
        - productType
        - printPosition
        - quantity

    OrderItemType:
      type: string
      description: >
        The type of the order item.
        
        * `product` - the items is a product to be checkout out
        
        * `coupon`  - the item is a coupon, only added as information item for the invoice
      enum:
        - product
        - coupon

    OrderItemsWithConfiguration:
      type: array
      description: Array with list of configured items of the order.
      items:
        $ref: '#/components/schemas/OrderItemWithConfiguration'

    OrderItemWithConfiguration:
      type: object
      description: Details of the configured order item.
      properties:
        product:
          $ref: '#/components/schemas/ProductSalesType'
        configuration:
          $ref: '#/components/schemas/ProductFulfillerInformationType'
      required:
        - product

    OrderPayment:
      type: object
      description: Payment details of an order.
      properties:
        paymentState:
          $ref: '#/components/schemas/PaymentStateType'
        payment:
          $ref: '#/components/schemas/PaymentInformationType'
      required:
        - paymentState
        - payment

    OrderRefundRequest:
      type: object
      description: >
        Request details to create a refund order.
        
        
        In case a partial refund is requested and in case the original order conatined coupon products and a recalculation of the original order is executed for the refund creation, the complete recalculated original order items must get added to the request.
      properties:
        refundItems:
          $ref: '#/components/schemas/OrderItems'
        refundScope:
          $ref: '#/components/schemas/RefundType'
        clientRefundReference:
          $ref: '#/components/schemas/TypeClientRefundReference'
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformationType'
        originOrderItems:
          $ref: '#/components/schemas/OrderItems'
      required:
        - refundItems
        - refundScope
        - clientRefundReference

    OrderRefundResponse:
      type: object
      description: Response details on requesting a refund order.
      properties:
        caasOrderId:
          allOf:
            - $ref: '#/components/schemas/TypeCaasOrderId'
            - description: The CaaS order id of the refund order created.
        clientRefundReference:
          type: string
          description: The client refund reference number.
        originReference:
          $ref: '#/components/schemas/OriginOrderReference'
      required:
        - caasOrderId
        - originReference

    OrderSettleRequest:
      type: object
      description: Request details to initialize a new order.
      properties:
        clientCartId:
          $ref: '#/components/schemas/TypeClientCartId'
        email:
          $ref: '#/components/schemas/TypeEmail'
        billingAddress:
          oneOf:
            - $ref: '#/components/schemas/BillingAddressBusinessCustomer'
            - $ref: '#/components/schemas/BillingAddressPrivateCustomer'
          discriminator:
            propertyName: type
            mapping:
              Business: '#/components/schemas/BillingAddressBusinessCustomer'
              Private: '#/components/schemas/BillingAddressPrivateCustomer'
        noInvoiceRequired:
          type: boolean
          description: The flag that indicates, that the customer requests not to get an invoice for the order. Any value other than 'true' won't be accepted by business processes.
        legal:
          type: object
          properties:
            termsOfTradeRequired:
              type: boolean
              description: For this order, the widget is encouraged to enforce the acceptance from the customer.
            termsOfTradeAccepted:
              type: boolean
              description: The acceptance flag of the terms of trade. Any value other than 'true' won't be accepted by business processes in the flag termsOfTradeRequired is 'true'.
            transportConditionsRequired:
              type: boolean
              description: For this order, the widget is encouraged to enforce the acceptance from the customer.
            transportConditionsAccepted:
              type: boolean
              description: Client's acceptance of the general transport conditions is given. Any value other than 'true' won't be accepted by business processes in the flag transportConditionsRequired is 'true'.
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformationType'
        termsOfTradeVersion:
          $ref: '#/components/schemas/TypeTermsOfTradeVersion'
        orderItems:
          $ref: '#/components/schemas/OrderItems'
      required:
        - clientCartId
        - email
        - billingAddress
        - legal
        - paymentInformation
        - termsOfTradeVersion
        - orderItems

    OrderSettleRequestPoststation:
      type: object
      description: Request details to initialize a new order.
      properties:
        billingAddress:
          oneOf:
            - $ref: '#/components/schemas/BillingAddressBusinessCustomer'
            - $ref: '#/components/schemas/BillingAddressPrivateCustomer'
          discriminator:
            propertyName: type
            mapping:
              Business: '#/components/schemas/BillingAddressBusinessCustomer'
              Private: '#/components/schemas/BillingAddressPrivateCustomer'
        paymentInformation:
          $ref: '#/components/schemas/PaymentInformationType'
        orderItems:
          $ref: '#/components/schemas/OrderItemsWithConfiguration'
      required:
        - paymentInformation
        - orderItems

    OrderSettleResponse:
      type: object
      description: Request details to initialize a new order.
      properties:
        caasOrderId:
          allOf:
            - $ref: '#/components/schemas/TypeCaasOrderId'
            - description: The CaaS order identifier that has been created.
        clientCartId:
          $ref: '#/components/schemas/TypeClientCartId'
      required:
        - caasOrderId

    OrderState:
      type: object
      description: Details of an order.
      properties:
        caasOrderId:
          allOf:
            - $ref: '#/components/schemas/TypeCaasOrderId'
            - description: The id of the order.
        clientCartId:
          $ref: '#/components/schemas/TypeClientCartId'
        clientCartVersionId:
          $ref: '#/components/schemas/TypeClientCartIdVersionId'
        paymentState:
          $ref: '#/components/schemas/PaymentStateType'
        orderState:
          $ref: '#/components/schemas/OrderStateType'

#
# Bugfix: Create new merged OrderStateType
#
#    OrderStateType:
#      type: string
#      description: >
#        The state of the order.
#
#        * `open`        - order is created
#
#        * `done     `   - order is finalized (mapped to internal shop order states "Sammelrechnung Offen" and "Ausgeführt")
#
#        * `failed`      - order creation or payment is failed, the order can no longer be processed (mapped to internal shop order states "Abgelehnt", "Storniert", "Stornierung angenommen", "Stornierung abgelehnt", "Stornierung fehlgeschlagen" or "Technischer Fehler")
#
#        * `unknown`     - error case, unknown state (mapped to internal shop order state "Unbekannter Status")
#      enum:
#        - unknown
#        - open
#        - done
#        - failed

    OriginOrderReference:
      type: object
      description: Reference object to the origin order in case of refund generation.
      properties:
        clientCartId:
          $ref: '#/components/schemas/TypeClientCartId'
        caasOrderId:
          allOf:
            - $ref: '#/components/schemas/TypeCaasOrderId'
            - description: The id of the original CaaS order.
      required:
        - clientCartId
        - caasOrderId

    PaymentDetailsApplePay:
      type: object
      description: >
        The payment information to initialize and finalize the Apple Pay payment process with Braintree.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        initToken:
          type: string
          description: Braintree token for Apple Pay payment.
        paymentCode:
          type: string
          description: Nounce for Apple Pay payment.
        payerId:
          type: string
          description: The payer's id at Apple Pay.
        payerEmail:
          type: string
          description: The payer's email id at Apple Pay.
      discriminator:
        propertyName: type
      required:
        - paymentCode
        - payerId
        - payerEmail

    PaymentDetailsBraintreeCreditCard:
      type: object
      description: >
        The payment information to initialize and finalize the Credit Card payment process with Braintree.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        initToken:
          type: string
          description: Braintree token for Credit Card payment.
        paymentCode:
          type: string
          description: Nounce for Credit Card payment.
        payerId:
          type: string
          description: The payer's id at Credit Card.
        payerEmail:
          type: string
          description: The payer's email id at Credit Card.
      discriminator:
        propertyName: type
      required:
        - paymentCode

    PaymentDetailsGiropay:
      type: object
      description: >
        No payment details are needed to initialize and finalize the Giropay payment process with EVOPayments.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        initUrl:
          type: string
          description: URL to call the eFiliale server to initialize the Giropay payment. When the initUrl is called, eFiliale will create the needed request data for Giropay and redirect the user to the Giropay system.
      discriminator:
        propertyName: type

    PaymentDetailsGooglePay:
      type: object
      description: >
        The payment information to initialize and finalize the Google Pay payment process with Braintree.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        initToken:
          type: string
          description: Braintree token for Google Pay payment.
        paymentCode:
          type: string
          description: Nounce for Google Pay payment.
        payerId:
          type: string
          description: The payer's id at Google Pay.
        payerEmail:
          type: string
          description: The payer's email id at Google Pay.
      discriminator:
        propertyName: type
      required:
        - paymentCode
        - payerId
        - payerEmail

    PaymentDetailsC2C:
      type: object
      description: >
        The payment information of the external DHL OF C2C payment provider.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        paymentReference:
          type: string
          minLength: 4
          maxLength: 16
          description: Reference of the external payment transaction which will be used in reconcilation file from C2C partner.
      discriminator:
        propertyName: type
      required:
        - paymentReference

    PaymentDetailsPayPal:
      type: object
      description: >
        The payment information to initialize and finalize the PayPal payment process.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        initToken:
          type: string
          description: PayPal token for PayPal payment.
        paymentCode:
          type: string
          description: Nounce for PayPal payment.
        payerId:
          type: string
          description: The payer's id at PayPal.
        payerEmail:
          type: string
          description: The payer's email id at PayPal.
      discriminator:
        propertyName: type
      required:
        - paymentCode
        - payerId
        - payerEmail

    PaymentDetailsSDD:
      type: object
      description: >
        The payment information for the SEPA Direct Debit (SDD) payment process.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        iban:
          type: string
          description: The bank account number (IBAN). This data is given by the customer. Currently, only bank accounts of German banks are accepted.
        bic:
          type: string
          description: The bank identifier (BIC). This data is given by the customer or determined via the SEAP REST endpoint.
        accountHolder:
          type:  object
          description: Name and address of the bank account holder. This is needed to create a mandate.
          properties:
            name:
              $ref: "#/components/schemas/TypeAddressName"
            firstName:
              $ref: "#/components/schemas/TypeAddressFirstName"
            street:
              $ref: "#/components/schemas/TypeAddressStreet"
            houseNo:
              $ref: "#/components/schemas/TypeAddressHouseNo"
            zipCode:
              $ref: "#/components/schemas/TypeAddressZipCode"
            city:
              $ref: "#/components/schemas/TypeAddressCity"
            country:
              $ref: "#/components/schemas/TypeAddressCountryDE"
          required:
            - name
            - street
            - houseNo
            - zipCode
            - city
            - country
        mandateId:
          type: string
          description: The mandate reference number. This element cannot be given via interface. It's created in backend, when the SEPA SDD is created.
      discriminator:
        propertyName: type
      required:
        - iban
        - owner

    PaymentDetailsZVT:
      type: object
      description: >
        The payment information for the external payment process ZVT.
      properties:
        type:
          type: string
          description: The object name of the payment details class. Needed for code generation purposes, no functional usage in CaaS.
        podId:
          type: string
          description: The identifier of the Poststation machine (POD = point of delivery).
        terminalId:
          type: string
          minLength: 6
          maxLength: 6
          pattern: "^\\d{6}$"
          description: The identifier of the payment terminal (ZVT).
        transactionId:
          type: string
          pattern: "^\\d{1,16}$"
          description: The transaction identifier of payment terminal. This will be used later by payment provider PayOne for reconciliation with system FP2.
        cardType:
          type: string
          description: >
            Defines which card type was used.
            
                Note that this is a case sensitive value
          enum:
            - Girocard
            - Mastercard
            - Visa
            - Vpay
            - Maestro
        amount:
          type: integer
          description: The amount in cent.
        timestamp:
          type: string
          description: The date and time when the payment was executed at ZVT. Timezone UST.
          format: date-time
        invoiceText:
          type: string
          description: >
            ZVT related payment information to be printed in payment section on the invoice.
            
                Note: The payment information usually is a multiline text. Per defintion, the invoiceText in this API must not contain any line breaks. They have to be replaced with "|||".
          minLength: 0
          maxLength: 4000
        signature:
          type: string
          description: The signature of the above values to safeguard the payment details given. How the signature is calculated, won't be described in this API specification.
        poststationInfo:
          type: object
          description: Information about the Poststation location and service.
          properties:
            streetHouseNo:
              $ref: "#/components/schemas/TypeAddressStreetHouseNo"
            zipCode:
              $ref: "#/components/schemas/TypeAddressZipCode"
            city:
              $ref: "#/components/schemas/TypeAddressCity"
            servicePhone:
              type: string
              minLength: 2
              maxLength: 20
              description: The Poststation service phone number.
          required:
            - streetHouseNo
            - zipCode
            - city
            - servicePhone
        traceNo:
          type: string
          minLength: 6
          maxLength: 6
          pattern: "^\\d{6}$"
          description: A trace number for analysis activities.
      discriminator:
        propertyName: type
      required:
        - podId
        - terminalId
        - transactionId
        - cardType
        - amount
        - timestamp
        - signature
        - poststationInfo
        - traceNo

    PaymentInformationType:
      type: object
      description: >
        The payment information to settle the order.
      properties:
        paymentType:
          $ref: '#/components/schemas/PaymentType'
        paymentDetails:
          oneOf:
            - $ref: '#/components/schemas/PaymentDetailsApplePay'
            - $ref: '#/components/schemas/PaymentDetailsBraintreeCreditCard'
            - $ref: '#/components/schemas/PaymentDetailsGiropay'
            - $ref: '#/components/schemas/PaymentDetailsGooglePay'
            - $ref: '#/components/schemas/PaymentDetailsC2C'
            - $ref: '#/components/schemas/PaymentDetailsPayPal'
            - $ref: '#/components/schemas/PaymentDetailsSDD'
            - $ref: '#/components/schemas/PaymentDetailsZVT'
          discriminator:
            propertyName: type
            mapping:
              ApplePay: '#/components/schemas/PaymentDetailsApplePay'
              BraintreeCreditCard:  '#/components/schemas/PaymentDetailsBraintreeCreditCard'
              Giropay:  '#/components/schemas/PaymentDetailsGiropay'
              GooglePay: '#/components/schemas/PaymentDetailsGooglePay'
              C2C: '#/components/schemas/PaymentDetailsC2C'
              PayPal: '#/components/schemas/PaymentDetailsPayPal'
              SDD:  '#/components/schemas/PaymentDetailsSDD'
              ZVT: '#/components/schemas/PaymentDetailsZVT'
      required:
        - paymentType

    PaymentOptionType:
      description: >
        The payment option to be offered to the client for the particular order.
        
        * `all`    - all payment typescan be offered
        
        * `secure` - only secure payment types shall be offered
      enum:
        - all
        - secure

    PaymentStateType:
      type: string
      description: >
        The payment state of the order.
        
        * `open`    - payment is initiated, but not confirmed yet
        
        * `done`    - payment executed
        
        * `failed`  - payment failed
        
        * `unknown` - order is created, but customer has not started the checkout yet and has not selected any payment
      enum:
        - unknown
        - open
        - done
        - failed

    PaymentType:
      type: string
      description: >
        The payment method.
        
            Note: The payment types listed here are not available in all methods in the same way. 
        
            The list of the configured payment methods is currently as follows:
              * applepay
              * ccardbt
              * giropay
              * googlepay
              * opp
              * ebaypay
              * paypal
              * sdd
              * zvt

    ProductDeliveryType:
      type: string
      description: >
        The product delivery type.
        
          | Type | Description |
          | --- | --- |
          | `pdf` | Only relevant for IM products, the delivery happens as a pdf file. |
          | `mobile` |  Only relevant for IM products, the delivery happens as a text code. |
          | `nsa` | Only relevant for redirection or storage products.  |
          | `none` |  Relevant for all generic products, where no fulfillment happens in CaaS. |
      enum:
        - "pdf"
        - "mobile"
        - "nsa"
        - "none"

    ProductFulfillerInformationType:
      type: object
      description: >
        The product fulfiller information details to allow fulfillment after payment.
      properties:
        productFulfillerType:
          $ref: '#/components/schemas/ProductFulfillerType'
        productFulfillerDetails:
          type: array
          description: List of product fulfiller information details.
          items:
            oneOf:
              - $ref: '#/components/schemas/ProductFulfillerNone'
              - $ref: '#/components/schemas/ProductFulfillerNSA'
              - $ref: '#/components/schemas/ProductFulfillerIM'
              - $ref: '#/components/schemas/ProductFulfillerPOP'
      required:
        - productFulfillerType
        - productFulfillerDetails

    ProductFulfillerIM:
      type: object
      description: >
        Fulfiller information for IM products.
        
            Please note, that this IM configuration is currently only for the usage of the channel OFB specified.
      properties:
        deliveryType:
          type: string
          description: Product delivery types which are supported for the product.
          items:
            $ref: '#/components/schemas/ProductDeliveryType'
      required:
        - deliveryType

    ProductFulfillerNSA:
      type: object
      description: >
        Fulfiller information for redirection (NSA) and storage (LSA) products.
      properties:
        reason:
          $ref: '#/components/schemas/ProductFulfillerNSAReasonType'
        startDate:
          type: string
          format: date
          description: Start date of the NSA/LSA.
          example: "2021.06.25"
        endDate:
          type: string
          format: date
          description: End date of the NSA/LSA - only for reason "abwesend".
          example: "2021.08.01"
        duration:
          type: integer
          description: Duration in month of the NSA/LSA.
        persons:
          type: array
          description: Array with list persons of the NSA/LSA - including the orderer.
          items:
            $ref: '#/components/schemas/ProductFulfillerNSAReasonPerson'
        address1:
          $ref: '#/components/schemas/ProductFulfillerNSAAddress'
        address2:
          $ref: '#/components/schemas/ProductFulfillerNSAAddress'
        email:
          allOf:
            - $ref: '#/components/schemas/TypeEmail'
            - description: If filled, a reminder of the upcoming end of an NSA will be sent to the customer.
        phone:
          type: string
          description: Contact details of the purchaser. Might be used for storage services.
        addtlServiceDHL:
          type: boolean
          description: If set to true, the customer accepts the redirection of DHL parcels and packages at extra costs.
        addtlServiceDialogpost:
          type: boolean
          description: If set to true, the customer accepts the redirection of large Dialogpost items at extra costs.
        fulfillmentId:
          type: string
          description: >
            In case a fulfillment identifier is generated previously, in must be given here, otherwise a new identifier will be created.
            
                Note: In case the given fulfillment identifier exists for another order created, the response will be an error message.

      required:
        - reason
        - startDate
        - duration
        - persons
        - address1
        - address2

    ProductFulfillerNSAAddress:
      type: object
      description: >
        Address information for redirection (NSA) and storage (LSA) orders.
      properties:
        country:
          $ref: "#/components/schemas/TypeAddressCountryName"
        street:
          $ref: "#/components/schemas/TypeAddressStreet"
        houseNo:
          $ref: "#/components/schemas/TypeAddressHouseNo"
        zipCode:
          $ref: "#/components/schemas/TypeAddressZipCode"
        city:
          $ref: "#/components/schemas/TypeAddressCity"
        supplement:
          $ref: "#/components/schemas/TypeAddressSupplement"
        poBoxNumber:
          $ref: "#/components/schemas/TypeAddressPOBoxNumber"
        poBoxZipCode:
          $ref: "#/components/schemas/TypeAddressPOBoxZipCode"
        poBoxCity:
          $ref: "#/components/schemas/TypeAddressPOBoxCity"
      required:
        - country
        - street
        - houseNo
        - zipCode
        - city

    ProductFulfillerNSAReasonPerson:
      type: object
      description: >
        Person information for redirection (NSA) and storage (LSA) orders.
      properties:
        name1:
          type: string
          description: >
            Either the first name of a person or the company name.
            
            
            A Company name is accepted for the order only.
        name:
          type: string
          description: >
            Either the last name of a person or the company name 2.
            
            
            A Company name is accepted for the order only.
        purchaser:
          type: boolean
          description: >
            Set to true if this is the person who orders the NSA/LSA.
            
            
            Only one person can be purchaser.
        announcement:
          type: boolean
          description: Flag whether a moving announcement is wanted for this person.
      required:
        - name1
        - name2
        - purchaser
        - announcement

    ProductFulfillerNSAReasonType:
      type: string
      description: The redirection fulfiller reason type.
      enum:
        - "umzug"
        - "abwesend"
        - "tot"
        - "sonstiges"

    ProductFulfillerNone:
      type: object
      description: >
        No product configuration for fulfillment as no fulfillment will be done in CaaS. The fulfillment is executed by the channel user himself.
        
            But the request might already contain information about the fulfillment happend in an external system. This information will be copied to the FulfillmentTypeItems of the order.
      properties:
        fulfillmentId:
          type: string
          description: An identifier of the already fulfilled product. This can be the actual stamp id or label id of the product.
        trackingId:
          type: string
          description: If the fulfilled product supports tracking, the tracking identifier can be given here.
        fulfillmentResult:
          type: string
          description: A general result information of the fulfilled product.

    ProductFulfillerPOP:
      type: object
      description: >
        Fulfiller information for "DHL Online Frankierung" products.
        
            Currently only a placeholder ...

    ProductFulfillerType:
      type: string
      description: The fulfiller method.
      enum:
        - "none"
        - "im"
        - "pop"
        - "nsa"

    ProductSalesType:
      type: object
      description: Details of the sales related product information.
      properties:
        configId:
          type: string
          description: The unique identifier for this product configuration.
        bundleReferenceConfigId:
          type: string
          description: Reference to an other existing product configuration, which is a master of a product bundle. Usually used for an additional service which shall be linked to the base sales product and printed together in invoice.
        salesProduct:
          $ref: '#/components/schemas/ProductSalesTypeSAP'
        invoiceReferenceText:
          type: string
          description: A product related information to be printed on the invoice
      required:
        - configId
        - salesProduct

    ProductSalesTypeSAP:
      type: object
      description: Details of the product configuration, how the product or service shall be configured.
      properties:
        productId:
          type: integer
          description: The product identifier (PPL or EKP) of the product (depends on channel configuration).
        quantity:
          type: number
          description: Number of products to be added with this configuration.
        grossPrice:
          type: number
          description: The gross price of a single product unit in cents.
      required:
        - productId
        - quantity

    ProductValidationDetailsNSARequest:
      type: object
      description: Details of the product configuration request parameters.
      properties:
        product:
          $ref: '#/components/schemas/ProductSalesType'
        configuration:
          type: object
          description: A clone of the ProductFulfillerInformationType limited to product type "nsa".
          properties:
            productFulfillerType:
              type: string
              description: The fulfiller method of the product type "nsa".
              enum:
                - "nsa"
            productFulfillerDetails:
              type: array
              description: List of product fulfiller information details.
              items:
                oneOf:
                  - $ref: '#/components/schemas/ProductFulfillerNSA'
          required:
            - productFulfillerType
            - productFulfillerDetails
      required:
        - product
        - configuration

    ProductValidationDetailsNSAResponse:
      type: object
      description: Details of the product configuration request parameters.
      properties:
        product:
          $ref: '#/components/schemas/ProductSalesType'
        configuration:
          type: object
          description: A clone of the ProductFulfillerInformationType limited to product type "nsa".
          properties:
            productFulfillerType:
              type: string
              description: The fulfiller method of the product type "nsa".
              enum:
                - "nsa"
            productFulfillerDetails:
              type: array
              description: List of product fulfiller information details.
              items:
                oneOf:
                  - $ref: '#/components/schemas/ProductFulfillerNSA'
          required:
            - productFulfillerType
            - productFulfillerDetails
        fulfillmentId:
          type: string
          description: The fulfillment identifier reserved for a fulfillment of the product type "nsa".
      required:
        - product
        - configuration
        - fulfillmentId

    RefundType:
      type: string
      description: >
        The refund type of the refund order.
        
        * `full`    - the complete order shall be refunded
        
        * `partial` - only some items of the original order shall be refunded
      enum:
        - full
        - partial

    TypeCaasOrderId:
      type: string
      minLength: 10
      maxLength: 100
      description: The customer's city name.

    TypeClientCartId:
      type: string
      pattern: "^.{6,40}$"
      minLength: 6
      maxLength: 40
      description: The id of the original client order.

    TypeClientCartIdVersionId:
      type: string
      minLength: 1
      maxLength: 250
      description: Client's internal identifier of a specific version of the order items.

    TypeClientRefundReference:
      type: string
      minLength: 0
      maxLength: 100
      description: The client refund reference number.

    TypeAddressCity:
      type: string
      minLength: 2
      maxLength: 30
      description: The city name.

    TypeAddressCompanyName:
      type: string
      minLength: 3
      maxLength: 100
      description: The company name.

    TypeAddressCountry:
      type: string
      minLength: 2
      maxLength: 2
      description: >
        The customer's ISO 3166-2 country code.
        
            Please note, that currently, addresses with country codes other then 'DE' will be ignored for the order object of CaaS service.

    TypeAddressCountryDE:
      type: string
      minLength: 2
      maxLength: 2
      description: The german ISO 3166-2 country code.
      enum:
        - DE

    TypeAddressCountryName:
      type: string
      minLength: 2
      maxLength: 40
      description: The name of the country.
      enum:
        - DE

    TypeAddressFirstName:
      type: string
      minLength: 2
      maxLength: 30
      description: The first name.

    TypeAddressHouseNo:
      type: string
      minLength: 0
      maxLength: 10
      description: The house number.

    TypeAddressLastName:
      type: string
      minLength: 2
      maxLength: 30
      description: The last name.

    TypeAddressName:
      type: string
      minLength: 2
      maxLength: 30
      description: The last name or company name.

    TypeAddressPOBoxCity:
      type: string
      minLength: 2
      maxLength: 30
      description: The post office box city name.

    TypeAddressPOBoxNumber:
      type: string
      minLength: 2
      description: The post office box number.

    TypeAddressPOBoxZipCode:
      type: string
      minLength: 5
      maxLength: 5
      description: The post office box zip code.

    TypeAddressStreet:
      type: string
      minLength: 2
      maxLength: 30
      description: The street name.

    TypeAddressStreetHouseNo:
      type: string
      minLength: 2
      maxLength: 40
      description: The street name and house number.

    TypeAddressSupplement:
      type: string
      minLength: 2
      maxLength: 50
      description: The address supplement.

    TypeAddressZipCode:
      type: string
      minLength: 5
      maxLength: 5
      description: The zip code.

    TypeCreationDate:
      type: string
      format: "YYYY-MM-DD"
      minLength: 10
      maxLength: 10
      description: The order date.

    TypeEmail:
      type: string
      pattern: "\\b[_A-Za-z0-9-\\+.!#$%&'*/=?\\\\^`{|}~]+@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})\\b"
      minLength: 1
      maxLength: 70
      example: "x@ab.cd"
      description: Customer's email address.

    TypeShopOrderId:
      type: string
      minLength: 10
      maxLength: 10
      description: The invoice number of the order.

    TypeProductId:
      type: string
      minLength: 2
      maxLength: 10
      description: Either der EKP number or PPL-ID of the product. In channel configuration the type of the product id is defined.

    TypeTermsOfTradeVersion:
      type: string
      minLength: 1
      maxLength: 256
      description: Version of the terms of trade accepted.

    TypeTOTP:
      type: string
      minLength: 1
      maxLength: 40

    TypeUrl:
      type: string
      pattern: "^https:(\\/?\\/?)[^\\s]+"
      minLength: 1
      maxLength: 200

    #
    #  CaaS-Widget-API
    #
    BraintreeTokenResponse:
      type: "object"
      properties:
        initToken:
          type: "string"
          example: "sanbox_tvgn8533_fs4wwmjpcv33kyd"

    Cart:
      type: object
      description: Details of the cart to be checkout out.
      properties:
        cartId:
          type: string
          description: The id of the cart.
        cartStatus:
          type: string
          description: >
            The status of the cart. Only one cart status is allowed ... but that status "checkout" must be declared.
          enum:
            - "checkout"
        caasOrderId:
          type: string
          description: The id of the CaaS order. The CaaS order id is generated on backend when a checkout of a cart is initiated. And cart with an initiated checkout process is `immutable`.
      required:
        - cartId
        - cartStatus

    CartCheckoutToOrder:
      type: object
      description: Details of an existing caasOrderId to be used for the cart update.
      properties:
        caasOrderId:
          type: string
          description: The id of the CaaS order.  The order id was generated previously from backend and can be reused here.

    CategoryDetailsListResult:
      type: object
      description: List of Category details.
      properties:
        categoryList:
          type: array
          description: Array with list of category details.
          items:
            $ref: '#/components/schemas/CategoryType'

    CategoryType:
      type: object
      description: Details of a single category.
      properties:
        categoryId:
          type: string
          description: The identifier of the category. This is the internal ATG object id.
        categoryName:
          type: string
          description: The category display name.
        categoryDescriptionShort:
          type: string
          description: The category short description.
        categoryDescriptionLong:
          type: string
          description: The Long category description (e.g. for a popup layer).
        categoryPrice:
          type: integer
          description: The category gross price in cent.
        categoryImageReferenceType:
          $ref: '#/components/schemas/ImageReferenceType'
        categoryImageReferenceSmall:
          type: string
          description: The reference to the small category image.
        categoryImageReferenceLarge:
          type: string
          description: The reference to the large category image.
        displayOrder:
          type: integer
          description: >
            Defines the order in which the categories shall get displayed. In case it's missing or in case the same value is defined multiple times, the appearance within the JSON defines the order.
        isVisible:
          type: boolean
          description: >
            Whether the category shall be displayed or not. Invisible categories are used to allow grouping of e.g. additional services, which are anyway not displayed in the same way like regular products.
        subCategoryList:
          type: array
          description: Array with list of sub categories.
          items:
            $ref: "#/components/schemas/CategoryType"
      required:
        - categoryId
        - categoryName
        - categoryDescriptionShort
        - categoryPrice
        - categoryImageReferenceType
        - categoryImageReferenceSmall
        - isVisible

    ContentTextElementsResult:
      type: object
      description: >
        Details of all content text elements to be used in the user interface.
      properties:
        elements:
          type: array
          description: Array with all content text elements.
          items:
            $ref: "#/components/schemas/ContentType"
      required:
        - elements

    ContentType:
      type: object
      description: >
        Details of one content text element.
      properties:
        contentId:
          type: string
          description: The identifier of the content text element.
        contentText:
          type: string
          description: The content text to be displayed in user interface.
      required:
        - contentId
        - contentText

    CountryList:
      type: object
      description: >
        Details of all countries available for a product type.
      properties:
        id:
          type: string
          description: The country identifier.
        alpha3:
          type: string
          description: The ISO 3166-alpha3 country code.
        name:
          type: string
          description: The country name.
        customsDeclarationFlag:
          type: boolean
          description: Defines whether a customs declaration is mandatory or not.
        maxWeight:
          type: number
          description: Defines the maximum product weight for the country.
        info:
          type: string
          description: Generic country information. This string main contain HTML.
        addtlInfo:
          type: string
          description: Additional country information. This string main contain HTML.
        addtlInfoLink:
          type: string
          description: Link to a web page with additional country information.
        forbiddenProducts:
          type: array
          description: Only relevant for DHL OF. List of DHL product identifiers that are not allowed to be purchased for that country. The attribute "addtlInfo" gives information about the reason, e.g. because of embargo list.
          items:
            type: string
        mandatoryProducts:
          type: array
          description: Only relevant for DHL OF. List of DHL product identifiers (additional services) that are enforced for every purchased (e.g. service Premium for country Brasilien).
          items:
            type: string
        language:
          type: string
          description: Information about the official languages to be used for the customs declaration form.
        provinces:
          type: array
          description: Information about provinces available in that country.
          items:
            type: object
            description: A region.
            properties:
              alpha2:
                type: string
                description: The ISO-2 region code of the province.
              name:
                type: string
                description: The display name of the province.
            required:
              - alpha2
              - name
      required:
        - id
        - alpha3
        - name

    CountryRegionList:
      type: object
      description: >
        Details of all country regions available for DHL Online Franking.
      properties:
        regions:
          type: array
          description: The list of regions for which countries are mapped.
          items:
            type: object
            description: A region.
            properties:
              regionId:
                type: string
                description: The region identifier.
              countries:
                type: array
                description: The non-empty ISO-3166-alpha3 country codes of the countries in the region.
                items:
                  type: string
#                  example:
#                    - "GBR"
#                    - "IMN"
            required:
              - region
              - countries
      required:
        - regions

    DeviceInformationType:
      type: object
      description: >
        Details of the device to allow the backend to make device specific decisions about e.g. payment options or to store the information as a proof "who" has placed the order.
      properties:
        osType:
          type: string
          description: The operation system type of the current device.
          enum:
            - "android"
            - "ios"
        osVersion:
          type: string
          description: The operation system version of the current device.
        deviceId:
          type: string
          description: The device id of the current device.

#    Error:
#      type: object
#      description: The error response with error details.
#      properties:
#        code:
#          type: string
#          description: The business-level error code.
#        detail:
#          type: string
#          description: The reason why the error occurred. This string is provided for user-friendliness and might change in the future. Use the error code for client-side workflow. (Note':' This is a business cause, not the HTTP error.)
#      required:
#        - code
#        - detail

    FulfillmentResults:
      type: array
      description: Array with list of fulfillment results.
      items:
        type: object
        description: Details of a single fulfillment result.
        properties:
          productIds:
            type: array
            description: List of product identifiers (PPL or EKP) of the product (depends on channel configuration).
            items:
              type: object
              description: List of product identifiers (PPL or EKP) of the product (depends on channel configuration).
              properties:
                productId:
                  type: integer
                  description: The product identifier (PPL or EKP) of the product (depends on channel configuration).
                fulfillmentId:
                  type: string
                  description: >
                    Only relevant for Internetmarke, where multiple products can be part of a single item delivery. This is the actual stamp id (A=...) of the product.
                trackingId:
                  type: string
                  description: In case it's a traceable product, the tracking id of the product.
              required:
                - productId
          result:
            type: string
            description: >
              After successful fulfillment, the fulfillment information about the product set purchased will be given to the customer. This is in case of fulfiller:
              
              - Internetmarke (`im`), the printset (of stamp(s)) (either code or URL of pdf)
              
              - DHL Online Frankierung (`pop`), the label URL
              
              - Redirection/Storage (`nsa`), the AZLN order identifier
              
              - Generic products (`none`), always empty, as no fulfillment happens in CaaS
        required:
          - productIds
          - result

    FulfillmentTypeItems:
      type: object
      description: Fulfilled products.
      properties:
        fulfillment:
          type: array
          description: Array with list of fulfillment items (=fulfilled products).
          items:
            $ref: '#/components/schemas/FulfillmentType'

    FulfillmentType:
      type: object
      description: Details about the fulfillment of the ordered products.
      properties:
        fulfillmentType:
          $ref: '#/components/schemas/ProductDeliveryType'
        fulfillmentResults:
          $ref: '#/components/schemas/FulfillmentResults'
      required:
        - fulfillmentType
        - fulfillmentResults

    IbanValidate:
      type: object
      description: IBAN and BIC validation data.
      properties:
        iban:
          type: string
          description: The bank account number (IBAN).
        bic:
          type: string
          description: The bank identifier (BIC).
        status:
          type: boolean
          description: The the validation result.
      required:
        - iban
        - status

    IbanValidateRequest:
      type: object
      description: IBAN and BIC validation data.
      properties:
        iban:
          type: string
          description: The bank account number (IBAN).
        bic:
          type: string
          description: The bank identifier (BIC).
        transformFormat:
          type: object
          description: The bank data how it was used before SEPA got introduced. This element is used as optional service request data only. On service responses, it's always empty.
          properties:
            accountNumber:
              type: string
              description: The bank account number used before SEPA was introdduced.
            bankCode:
              type: string
              description: The bank code used before SEPA was introduced.
          required:
            - accountNumber
            - bankCode
      required:
        - iban

    ImageReferenceType:
      type: string
      description: The type of the image reference in catalog objects.
      enum:
        - "url"
        - "file"
        - "classname"

    OrderCancellationDetails:
      type: object
      description: Details of an order cancellation request.
      properties:
        caasOrderId:
          type: string
          description: The id of the CaaS order.
        customerEmail:
          type: string
          description: The email id of the customer used for the order. This is used as validation criteria and for information to the customer about cancellation success.
        cancellationReason:
          type: string
          description: A description of the reason, why the refund is requested.
      required:
        - caasOrderId
        - customerEmail

    OrderCancellationType:
      type: object
      description: Details of the results of the order cancellation request
      properties:
        caasOrderId:
          type: string
          description: The id of the CaaS order.
      required:
        - caasOrderId

    OrderDetailsRequest:
      type: object
      description: Details of an order.
      properties:
        caasOrderId:
          type: string
          description: The id of the CaaS order (read only element).
        products:
          $ref: '#/components/schemas/OrderItems'
        email:
          allOf:
            - $ref: '#/components/schemas/TypeEmail'
            - description: The email id of the customer. The shops sends the fulfillment response to this email address.
        noInvoiceRequired:
          type: boolean
          description: The flag that indicates, that the customer requests not to get an invoice for the order. Any value other than 'true' won't be accepted by business processes.
        legal:
          type: object
          properties:
            termsOfTradeRequired:
              type: boolean
              description: For this order, the widget is encouraged to enforce the acceptance from the customer.
            termsOfTradeAccepted:
              type: boolean
              description: The acceptance flag of the terms of trade. Any value other than 'true' won't be accepted by business processes in the flag termsOfTradeRequired is 'true'.
            transportConditionsRequired:
              type: boolean
              description: For this order, the widget is encouraged to enforce the acceptance from the customer.
            transportConditionsAccepted:
              type: boolean
              description: Client's acceptance of the general transport conditions is given. Any value other than 'true' won't be accepted by business processes in the flag transportConditionsRequired is 'true'.
        payment:
          $ref: '#/components/schemas/PaymentInformationType'
      required:
        - caasOrderId

    #
    # Bugfix merge: OrderDetailsResponse is FE widget response for Order. OrderItemsResponse will have ProductSalesType
    # OrderDetailsResponse -> OrderItemsResponse -> ProductSalesType
    #
    OrderDetailsResponse:
      type: object
      description: Details of an order.
      properties:
        caasOrderId:
          type: string
          description: The id of the CaaS order (read only element).
        orderState:
          $ref: '#/components/schemas/OrderStateType'
        orderAmount:
          type: integer
          description: The gross price of the order in cent.
        creationDate:
          type: string
          format: "YYYY-MM-DD"
          description: The order date.
        shopOrderId:
          type: string
          description: The invoice number of the order (read only element).
        products:
          $ref: '#/components/schemas/OrderItemsResponse'
        email:
          allOf:
            - $ref: '#/components/schemas/TypeEmail'
            - description: The email id of the customer. The shops sends the fulfillment response to this email address.
        noInvoiceRequired:
          type: boolean
          description: The flag that indicates, that the customer requests not to get an invoice for the order. Any value other than 'true' won't be accepted by business processes.
        legal:
          type: object
          properties:
            termsOfTradeRequired:
              type: boolean
              description: For this order, the widget is encouraged to enforce the acceptance from the customer.
            termsOfTradeAccepted:
              type: boolean
              description: The acceptance flag of the terms of trade. Any value other than 'true' won't be accepted by business processes in the flag termsOfTradeRequired is 'true'.
            transportConditionsRequired:
              type: boolean
              description: For this order, the widget is encouraged to enforce the acceptance from the customer.
            transportConditionsAccepted:
              type: boolean
              description: Client's acceptance of the general transport conditions is given. Any value other than 'true' won't be accepted by business processes in the flag transportConditionsRequired is 'true'.
        payment:
          $ref: '#/components/schemas/PaymentInformationType'
        fulfillment:
          type: array
          description: Array with list of fulfillment items (=fulfilled products).
          items:
            $ref: '#/components/schemas/FulfillmentType'
        deviceInformation:
          $ref: '#/components/schemas/DeviceInformationType'
      required:
        - caasOrderId

    OrderDetailsJWE:
      type: object
      description: Encrypted details of an order.
      properties:
        clientOrderDataJWE:
          type: string
          description: The third party order data as JWE object (see ThirdPartyOrderUpdateRequest for more details about the JSON structure of the JWE object).
      required:
        - caasOrderDataJWE
    #
    # Bugfix merge: the two APIs have different OrderInitResponse
    # renaming the 'OrderInitResponse' from Widget to 'OrderInitResponseFe' :
    #
    OrderInitResponseFe:
      type: object
      description: Initialized CaaS order.
      properties:
        caasOrderId:
          type: string
          description: The id of the CaaS order.
      required:
        - caasOrderId

    # Renamed to OrderItemsResponse as both Widget.yaml and Backend.yaml are conflicting
    OrderItemsResponse:
      type: array
      description: Array with list of order items aka product configurations.
      items:
        $ref: '#/components/schemas/ProductSalesType'

    #
    # Bugfix merge: merged OrderStateType: "done" was added from the backend
    #
    OrderStateType:
      type: string
      description: >
        The state of an order (read only element).
          | Order State | Description |
          | --- | --- |
          | `open` | Order is created (mapped to internal shop order state "Erstellt") |

          | `accepted` | Order is accepted but payment is not verified (mapped to internal shop order states "Angenommen", "Zahlung ausstehend", "Geprüft" and "Teilausgeführt") |

          | `parked` | Manual approval is required before the order is fulfilled (mapped to internal shop order state "In Prüfung") |

          | `paid`        | Order payment is verified, fulfillment starts (mapped to internal shop order state "Autorisiert") |

          | `fulfilled`   | Order is fulfilled (mapped to internal shop order states "Sammelrechnung Offen" and "Ausgeführt") |

          | `failed`      | Order creation or payment is failed, the order can no longer be processed (mapped to internal shop order states "Abgelehnt", "Storniert", "Stornierung angenommen", "Stornierung abgelehnt", "Stornierung fehlgeschlagen" or "Technischer Fehler") |

          | `refund done` | A refund for the order is already created (mapped to internal shop order state "Rückerstattet") |

          | `unknown`    | error case, unknown state (mapped to internal shop order state "Unbekannter Status") |
        
          | `done`    | order is finalized (mapped to internal shop order states "Sammelrechnung Offen" and "Ausgeführt") |
      enum:
        - unknown
        - open
        - done
        - failed
        - accepted
        - parked
        - paid
        - fulfilled
        - refund done

    OrderValidationType:
      type: object
      description: Validation result of a CaaS order.
      properties:
        caasOrderId:
          type: string
          description: The id of the CaaS order (read only element).
        valid:
          type: boolean
          description: Returns whether the order is ready for finalization.
        messages:
          type: array
          description: List of validation messages.
          items:
            type: string
            description: Validation error id or message.

#    PaymentDetailsApplePay:
#      type: object
#      description: >
#        The payment information to initialize and finalize the Apple Pay payment process with Braintree.
#      properties:
#        initToken:
#          type: string
#          description: Braintree token for Apple Pay payment.
#        paymentCode:
#          type: string
#          description: Nounce for Apple Pay payment.
#        payerId:
#          type: string
#          description: The payer's id at Apple Pay.
#        payerEmail:
#          type: string
#          description: The payer's email id at Apple Pay.
#      required:
#        - paymentCode
#        - payerId
#        - payerEmail

#    PaymentDetailsBraintreeCreditCard:
#      type: object
#      description: >
#        The payment information to initialize and finalize the Credit Card payment process with Braintree.
#      properties:
#        initToken:
#          type: string
#          description: Braintree token for Credit Card payment.
#        paymentCode:
#          type: string
#          description: Nounce for Credit Card payment.
#        payerId:
#          type: string
#          description: The payer's id at Credit Card.
#        payerEmail:
#          type: string
#          description: The payer's email id at Credit Card.
#      required:
#        - paymentCode

#    PaymentDetailsGiropay:
#      type: object
#      description: >
#        No payment details are needed to initialize and finalize the Giropay payment process with EVOPayments.
#      properties:
#        initUrl:
#          type: string
#          description: URL to call the eFiliale server to initialize the Giropay payment. When the initUrl is called, eFiliale will create the needed request data for Giropay and redirect the user to the Giropay system.

#    PaymentDetailsGooglePay:
#      type: object
#      description: >
#        The payment information to initialize and finalize the Google Pay payment process with Braintree.
#      properties:
#        initToken:
#          type: string
#          description: Braintree token for Google Pay payment.
#        paymentCode:
#          type: string
#          description: Nounce for Google Pay payment.
#        payerId:
#          type: string
#          description: The payer's id at Google Pay.
#        payerEmail:
#          type: string
#          description: The payer's email id at Google Pay.
#      required:
#        - paymentCode
#        - payerId
#        - payerEmail

#    PaymentDetailsPaypal:
#      type: object
#      description: >
#        The payment information to initialize and finalize the PayPal payment process.
#      properties:
#        initToken:
#          type: string
#          description: PayPal token for PayPal payment.
#        paymentCode:
#          type: string
#          description: Nounce for PayPal payment.
#        payerId:
#          type: string
#          description: The payer's id at PayPal.
#        payerEmail:
#          type: string
#          description: The payer's email id at PayPal.
#      required:
#        - paymentCode
#        - payerId
#        - payerEmail

#    PaymentDetailsSDD:
#      type: object
#      description: >
#        The payment information for the SEPA Direct Debit (SDD) payment process.
#      properties:
#        iban:
#          type: string
#          description: The bank account number (IBAN). This data is given by the customer. Currently, only bank accounts of German banks are accepted.
#        bic:
#          type: string
#          description: The bank identifier (BIC). This data is given by the customer or determined via the SEAP REST endpoint.
#        accountHolder:
#          type:  object
#          description: Name and address of the bank account holder. This is needed to create a mandate.
#          properties:
#            name:
#              $ref: "#/components/schemas/TypeAddressName"
#            firstName:
#              $ref: "#/components/schemas/TypeAddressFirstName"
#            street:
#              $ref: "#/components/schemas/TypeAddressStreet"
#            houseNo:
#              $ref: "#/components/schemas/TypeAddressHouseNo"
#            zipCode:
#              $ref: "#/components/schemas/TypeAddressZipCode"
#            city:
#              $ref: "#/components/schemas/TypeAddressCity"
#            country:
#              $ref: "#/components/schemas/TypeAddressCountryDE"
#          required:
#            - name
#            - street
#            - houseNo
#            - zipCode
#            - city
#            - country
#        mandateId:
#          type: string
#          description: The mandate reference number. This element cannot be given via interface. It's created in backend, when the SEPA SDD is created.
#      required:
#        - iban
#        - owner

#    PaymentDetailsZVT:
#      type: object
#      description: >
#        The payment information for the external payment process ZVT.
#      properties:
#        podId:
#          type: string
#          description: The identifier of the Poststation machine (POD = point of delivery).
#        terminalId:
#          type: string
#          minLength: 6
#          maxLength: 6
#          pattern: "^\\d{6}$"
#          description: The identifier of the payment terminal (ZVT).
#        transactionId:
#          type: string
#          pattern: "^\\d{1,16}$"
#          description: The transaction identifier of payment terminal. This will be used later by payment provider PayOne for reconciliation with system FP2.
#        cardType:
#          type: string
#          description: >
#            Defines which card type was used.
#
#                Note that this is a case sensitive value
#          enum:
#            - Girocard
#            - Mastercard
#            - Visa
#            - Vpay
#            - Maestro
#        amount:
#          type: integer
#          description: The amount in cent.
#        timestamp:
#          type: string
#          description: The date and time when the payment was executed at ZVT. Timezone UST.
#          format: date-time
#        invoiceText:
#          type: string
#          description: >
#            ZVT related payment information to be printed in payment section on the invoice.
#
#                Note: The payment information usually is a multiline text. Per defintion, the invoiceText in this API must not contain any line breaks. They have to be replaced with "|||".
#          minLength: 0
#          maxLength: 4000
#        signature:
#          type: string
#          description: The signature of the above values to safeguard the payment details given. How the signature is calculated, won't be described in this API specification.
#        poststationInfo:
#          type: object
#          description: Information about the Poststation location and service.
#          properties:
#            streetHouseNo:
#              $ref: "#/components/schemas/TypeAddressStreetHouseNo"
#            zipCode:
#              $ref: "#/components/schemas/TypeAddressZipCode"
#            city:
#              $ref: "#/components/schemas/TypeAddressCity"
#            servicePhone:
#              type: string
#              minLength: 2
#              maxLength: 20
#              description: The Poststation service phone number.
#          required:
#            - streetHouseNo
#            - zipCode
#            - city
#            - servicePhone
#        traceNo:
#          type: string
#          minLength: 6
#          maxLength: 6
#          pattern: "^\\d{6}$"
#          description: A trace number for analysis activities.
#      required:
#        - podId
#        - terminalId
#        - transactionId
#        - cardType
#        - amount
#        - timestamp
#        - signature
#        - poststationInfo
#        - traceNo

#    PaymentOptionType:
#      type: object
#      description: Available payment option for the current device.
#      properties:
#        rank:
#          type: integer
#          description: Defines the sort order of the display of the available payments in frontend.
#        paymentType:
#          $ref: '#/components/schemas/PaymentType'
#        default:
#          type: boolean
#          description: Defines which payment type shall be used as default payment type.
#      required:
#        - rank
#        - paymentType
#        - default

    PaymentOptionsListResult:
      type: object
      description: Sorted list of payment types available for the current device.
      properties:
        paymentsList:
          type: array
          description: Array with list of product details.
          items:
            $ref: '#/components/schemas/PaymentOptionType'
      required:
        - paymentsList

#    PaymentInformationType:
#      type: object
#      description: >
#        The payment information to initialize and finalize the payment process with external payment provider.
#
#            Note: Currently the payment type PayPal is available only. This element is intended to be used for Apple Pay and Google Pay as well, but it's there is a risk for a change of this element to match the requirements for these payment types.
#      properties:
#        paymentType:
#          $ref: '#/components/schemas/PaymentType'
#        paymentDetails:
#          oneOf:
#            - $ref: '#/components/schemas/PaymentDetailsApplePay'
#            - $ref: '#/components/schemas/PaymentDetailsBraintreeCreditCard'
#            - $ref: '#/components/schemas/PaymentDetailsGooglePay'
#            - $ref: '#/components/schemas/PaymentDetailsGiropay'
#            - $ref: '#/components/schemas/PaymentDetailsPaypal'
#            - $ref: '#/components/schemas/PaymentDetailsSDD'
#            - $ref: '#/components/schemas/PaymentDetailsZVT'
#      required:
#        - paymentType

#    PaymentType:
#      type: string
#      description: >
#        The payment method.
#
#          | Method | Name | Description |
#          | ------ | ------------ | ----------- |
#          | `paypal`    |PayPal      |Integration in Widgets and mobile App via Javascript bridge. Payment provider Braintree. |
#          | `applepay`  | ApplePay  | Integration in Widgets via Javascript and in Mobile App using native SDK. Payment provider Braintree. |
#          | `googlepay` | GooglePay | Integration in Widgets via Javascript and in Mobile App using native SDK. Payment provider Braintree. |
#          | `cccardbt`  | CreditCard | Via payment provider Braintree. |
#          | `cccardevo` | CreditCard | Via payment provider EVOPayments. |
#          | `giropay`   | Giropay    | Via payment provider EVOPayments. |
#          | `sdd`       | SEPA Direct Debit | Va internal DP system FP2. |
#          | `zvt`       | External   | Payment terminal used in Poststation. |
#      enum:
#        - "paypal"
#        - "applepay"
#        - "googlepay"
#        - "ccardbt"
#        - "ccardevo"
#        - "giropay"
#        - "sdd"
#        - "zvt"

    ProductConfiguration:
      type: object
      description: The reference to the created order and the created product configuration.
      properties:
        configId:
          type: string
          description: The id of the product configuration.
        product:
          $ref: '#/components/schemas/ProductConfigurationDetails'
      required:
        - configId
        - product

    ProductConfigurationSetDetails:
      type: object
      description: Element with list of product configurations.
      properties:
        products:
          type: array
          description: Array with list of product configurations.
          items:
            $ref: '#/components/schemas/ProductConfigurationDetails'
      required:
        - products

    ProductConfigurationDetails:
      type: object
      description: Details of the product configuration request parameters.
      properties:
        product:
          $ref: '#/components/schemas/ProductSalesType'
        configuration:
          $ref: '#/components/schemas/ProductFulfillerInformationType'
      required:
        - product

    ProductConfigurationsSet:
      type: array
      description: Array with list of product configuration ids.
      items:
        type: string
        description: Product configuration id.

#    ProductDeliveryType:
#      type: string
#      description: >
#        The product delivery type.
#
#          | Type | Description |
#          | --- | --- |
#          | `pdf` | Only relevant for IM products, the delivery happens as a pdf file. |
#          | `mobile` |  Only relevant for IM products, the delivery happens as a text code. |
#          | `nsa` | Only relevant for redirection or storage products.  |
#          | `none` |  Relevant for all generic products, where no fulfillment happens in CaaS. |
#      enum:
#        - "pdf"
#        - "mobile"
#        - "nsa"
#        - "none"

    ProductDetailsListResult:
      type: object
      description: List of Product details.
      properties:
        products:
          type: array
          description: Array with list of product details.
          items:
            $ref: '#/components/schemas/ProductType'

#    ProductFulfillerInformationType:
#      type: object
#      description: >
#        The product fulfiller information details to allow fulfillment after payment.
#      properties:
#        productFulfillerType:
#          $ref: '#/components/schemas/ProductFulfillerType'
#        productFulfillerDetails:
#          type: array
#          description: List of product fulfiller information details.
#          items:
#            oneOf:
#              - $ref: '#/components/schemas/ProductFulfillerNone'
#              - $ref: '#/components/schemas/ProductFulfillerNSA'
#              - $ref: '#/components/schemas/ProductFulfillerIM'
#              - $ref: '#/components/schemas/ProductFulfillerPOP'
#      required:
#        - productFulfillerType
#        - productFulfillerDetails

#    ProductFulfillerIM:
#      type: object
#      description: >
#        Fulfiller information for IM products.
#
#            Please note, that this IM configuration is currently only for the usage of the channel OFB specified.
#      properties:
#        deliveryType:
#          type: string
#          description: Product delivery types which are supported for the product.
#          items:
#            $ref: '#/components/schemas/ProductDeliveryType'
#      required:
#        - deliveryType

#    ProductFulfillerNSA:
#      type: object
#      description: >
#        Fulfiller information for redirection (NSA) and storage (LSA) products.
#      properties:
#        reason:
#          $ref: '#/components/schemas/ProductFulfillerNSAReasonType'
#        startDate:
#          type: string
#          format: date
#          description: Start date of the NSA/LSA.
#          example: "2021.06.25"
#        endDate:
#          type: string
#          format: date
#          description: End date of the NSA/LSA - only for reason "abwesend".
#          example: "2021.08.01"
#        duration:
#          type: integer
#          description: Duration in month of the NSA/LSA.
#        persons:
#          type: array
#          description: Array with list persons of the NSA/LSA - including the orderer.
#          items:
#            $ref: '#/components/schemas/ProductFulfillerNSAReasonPerson'
#        address1:
#          $ref: '#/components/schemas/ProductFulfillerNSAAddress'
#        address2:
#          $ref: '#/components/schemas/ProductFulfillerNSAAddress'
#        email:
#          allOf:
#            - $ref: '#/components/schemas/TypeEmail'
#            - description: If filled, a reminder of the upcoming end of an NSA will be sent to the customer.
#        phone:
#          type: string
#          description: Contact details of the purchaser. Might be used for storage services.
#        addtlServiceDHL:
#          type: boolean
#          description: If set to true, the customer accepts the redirection of DHL parcels and packages at extra costs.
#        addtlServiceDialogpost:
#          type: boolean
#          description: If set to true, the customer accepts the redirection of large Dialogpost items at extra costs.
#      required:
#        - reason
#        - startDate
#        - duration
#        - persons
#        - address1
#        - address2

#    ProductFulfillerNSAAddress:
#      type: object
#      description: >
#        Address information for redirection (NSA) and storage (LSA) orders.
#      properties:
#        country:
#          $ref: "#/components/schemas/TypeAddressCountryName"
#        street:
#          $ref: "#/components/schemas/TypeAddressStreet"
#        houseNo:
#          $ref: "#/components/schemas/TypeAddressHouseNo"
#        zipCode:
#          $ref: "#/components/schemas/TypeAddressZipCode"
#        city:
#          $ref: "#/components/schemas/TypeAddressCity"
#        supplement:
#          $ref: "#/components/schemas/TypeAddressSupplement"
#        poBoxNumber:
#          $ref: "#/components/schemas/TypeAddressPOBoxNumber"
#        poBoxZipCode:
#          $ref: "#/components/schemas/TypeAddressPOBoxZipCode"
#        poBoxCity:
#          $ref: "#/components/schemas/TypeAddressPOBoxCity"
#      required:
#        - country
#        - street
#        - houseNo
#        - zipCode
#        - city

#    ProductFulfillerNSAReasonPerson:
#      type: object
#      description: >
#        Person information for redirection (NSA) and storage (LSA) orders.
#      properties:
#        name1:
#          type: string
#          description: >
#            Either the first name of a person or the company name.
#
#
#            A Company name is accepted for the order only.
#        name:
#          type: string
#          description: >
#            Either the last name of a person or the company name 2.
#
#
#            A Company name is accepted for the order only.
#        purchaser:
#          type: boolean
#          description: >
#            Set to true if this is the person who orders the NSA/LSA.
#
#
#            Only one person can be purchaser.
#        announcement:
#          type: boolean
#          description: Flag whether a moving announcement is wanted for this person.
#      required:
#        - name1
#        - name2
#        - purchaser
#        - announcement

#    ProductFulfillerNSAReasonType:
#      type: string
#      description: The redirection fulfiller reason type.
#      enum:
#        - "umzug"
#        - "abwesend"
#        - "tot"
#        - "sonstiges"

#    ProductFulfillerNone:
#      type: object
#      description: >
#        No product configuration for fulfillment as no fulfillment will be done in CaaS. The fulfillment is executed by the channel user himself.
#
#            But the request might already contain information about the fulfillment happend in an external system. This information will be copied to the FulfillmentTypeItems of the order.
#      properties:
#        fulfillmentId:
#          type: string
#          description: An identifier of the already fulfilled product. This can be the actual stamp id or label id of the product.
#        trackingId:
#          type: string
#          description: If the fulfilled product supports tracking, the tracking identifier can be given here.
#        fulfillmentResult:
#          type: string
#          description: A general result information of the fulfilled product.

#    ProductFulfillerPOP:
#      type: object
#      description: >
#        Fulfiller information for "DHL Online Frankierung" products.
#
#            Currently only a placeholder ...

#    ProductFulfillerType:
#      type: string
#      description: The fulfiller method.
#      enum:
#        - "none"
#        - "im"
#        - "pop"
#        - "nsa"

#    ProductSalesType:
#      type: object
#      description: Details of the sales related product information.
#      properties:
#        configId:
#          type: string
#          description: The unique identifier for this product configuration.
#        bundleReferenceConfigId:
#          type: string
#          description: Reference to an other existing product configuration, which is a master of a product bundle. Usually used for an additional service which shall be linked to the base sales product and printed together in invoice.
#        salesProduct:
#          $ref: '#/components/schemas/ProductSalesTypeSAP'
#        invoiceReferenceText:
#          type: string
#          description: A product related information to be printed on the invoice
#      required:
#        - configId
#        - salesProduct

#    ProductSalesTypeSAP:
#      type: object
#      description: Details of the product configuration, how the product or service shall be configured.
#      properties:
#        productId:
#          type: integer
#          description: The product identifier (PPL or EKP) of the product (depends on channel configuration).
#        quantity:
#          type: number
#          description: Number of products to be added with this configuration.
#        grossPrice:
#          type: number
#          description: The gross price of a single product unit in cents.
#      required:
#        - productId
#        - quantity

    ProductType:
      type: object
      description: Details of a single product.
      properties:
        productId:
          type: integer
          description: Product number of the product.
        skuId:
          type: string
          description: tbd
        productPrice:
          type: integer
          description: The product list gross price in cent - might by overwritten with usage specific prices.
        taxRate:
          type: integer
          description: The product tax rate.
        displayInfo:
          type: object
          description:  The information for the display of the product.
          properties:
            productName:
              type: string
              description: The product display name.
            productDescription:
              type: string
              description: The product description.
            productLongDescription:
              type: string
              description: >
                The long product description.
                
                    Note: This may contain HTML formatting elements.
            productImageReferenceType:
              $ref: '#/components/schemas/ImageReferenceType'
            productImageReferenceSmall:
              type: string
              description: The reference to the small category image.
            productImageReferenceLarge:
              type: string
              description: The reference to the large category image.
            productCategoryReference:
              type: array
              description: List is categories, where the product is listed.
              items:
                type: object
                properties:
                  categoryId:
                    type: string
                    description: The category identifier, where the product is listed.
                  displayOrder:
                    type: integer
                    description: >
                      Defines the order in which the products shall get displayed in it the associated category. In case it's missing or in case the same value is defined multiple times for the same category, the appearance within the JSON defines the order
          required:
            - productName
            - productDescription
            - productImageReferenceType
            - productImageUrlSmall
            - productCategoryReference
        alternative:
          type: string
          description: Which alternative product to be used by business rules.
        isService:
          type: boolean
          description: Explicitly identifies products which are additional. services
        type:
          type: string
          description: The identifier of the product type.
          enum:
            - im
            - of
            - nsa
        fulfillmentInfo:
          oneOf:
            - $ref: '#/components/schemas/ProductTypeFulfillmentInfoIM'
            - $ref: '#/components/schemas/ProductTypeFulfillmentInfoNSA'
            - $ref: '#/components/schemas/ProductTypeFulfillmentInfoOF'
        properties:
          type: array
          description: List of key-value-pairs with additional product information.
          items:
            type: object
            properties:
              key:
                type: string
                description: The identifier of the additional product information.
              value:
                type: string
                description: The value of the additional product information.
      required:
        - productId
        - productPrice
        - taxRate
        - displayInfo
        - isService
        - type

    ProductTypeFulfillmentInfoIM:
      type: object
      description: Fulfillment related information for product of type "im".
      properties:
        pplId:
          type: string
          description: General DP DHL product identifier.
        productDeliveryType:
          type: string
          description: Product delivery types which are supported for the product.
          items:
            $ref: '#/components/schemas/ProductDeliveryType'
      required:
        - pplId
        - productDeliveryType

    ProductTypeFulfillmentInfoNSA:
      type: object
      description: Fulfillment related information for product of type "nsa".

    ProductTypeFulfillmentInfoOF:
      type: object
      description: Fulfillment related information for product of type "of".

    ProductTypeLimitations:
      type: object
      description: Details of all product limitations.
      oneOf:
        - $ref: '#/components/schemas/ProductTypeLimitationsIM'
        - $ref: '#/components/schemas/ProductTypeLimitationsOF'

    ProductTypeLimitationsIM:
      type: object
      description: Details of all product limitations for the product type Internetmarke.
      properties:
        products:
          type: array
          description: The list of product limitations.
          items:
            type: object
            description: Details of all product limitations for the product type Internetmarke.
            properties:
              productId:
                type: integer
                description: The product identifier.
              pplId:
                type: string
                description: The product identifier for Internetmarke (=PPL).
              services:
                type: array
                description: The list of allowed addon combinations.
                items:
                  type: object
                  description: An allowed addon combination.
                  properties:
                    pplId:
                      type: string
                      description: The product identifier for Internetmarke (=PPL).
                    label:
                      type: string
                      description: The display name of the additional service.
                    groupName:
                      type: string
                      description: The grouping display name for the additional service.
                    isMotifAllowed:
                      type: boolean
                      description: Determines if a motif is compatible with this additional services.
                    isTraceable:
                      type: boolean
                      description:  Determines if the additional service is traceable.
                    ignoreTotal:
                      type: boolean
                      description: xxx
                    addonProductIds:
                      type: array
                      description: The product Ids of the additional service that must be ordered with the product.
                      items:
                        type: integer
                  required:
                    - pplId
                    - label
                    - isMotifAllowed
                    - isTraceable
                    - addonProductIds
              regions:
                type: array
                description: The list of allowed country regions of the product.
                items:
                  type: object
                  description: An allowed country region.
                  properties:
                    region:
                      type: string
                      description: The region identifier.
            required:
              - productId
              - pplId
              - services
              - regions
      required:
        - products

    ProductTypeLimitationsOF:
      type: object
      description: Details of all product limitations for the product type DHL Online Frankierung.
      properties:
        products:
          type: array
          description: The list of product limitations.
          items:
            $ref: '#/components/schemas/ProductTypeLimitationsOFProduct'
        services:
          type: array
          description: The list of product limitations.
          items:
            $ref: '#/components/schemas/ProductTypeLimitationsOFService'
        pickups:
          type: array
          description: The list of product limitations.
          items:
            $ref: '#/components/schemas/ProductTypeLimitationsOFPickup'
      required:
        - products
        - services

    ProductTypeLimitationsOFPickup:
      type: object
      description: Details of all pickup limitations for the product type DHL Online Frankierung.
      properties:
        productCodeOF:
          type: string
          description: The product code (mnemonic id) from DHL Online Franking.
        displayName:
          type: string
          description: The display name of the product.
        displayDescription:
          type: string
          description: The description of the product. The content may contain HTML.
        attributes:
          $ref: "#/components/schemas/ProductTypeLimitationsOFPickupAttribute"
        regionPrices:
          $ref: "#/components/schemas/ProductTypeLimitationsOFRegionPrices"
      required:
        - productCodeOF
        - attributes
        - regionPrices

    ProductTypeLimitationsOFPickupAttribute:
      type: object
      description: The attributes of a pickup of the product type DHL Online Frankierung.
      properties:
        maxCollectableItems:
          type: integer
          description: The maximum number of shipments that may be picked up per order.
        earliestPickupOffset:
          type: integer
          description: The number of days needed in advance of the pickup such that the pickup is valid to be bought. earliestPickupOffset=1 means that, at the earliest, the parcels can be picked up at the next day after the booking (valid days only - see nonWorkingWeekDays) earliestPickupOffset=0 means a pickup is possible at the same day (under compliance to the attribute pickupTimeLimit).
        pickupTimeLimit:
          type: string
          description: Time of day in format HH:MM. Constitutes the time of the day up to which the current day is valid for booking (not pickup). After the pickupTimeLimit, the next valid day will be considered for booking.
          example: "13:00"
        nonWorkingWeekDays:
          type: array
          description: A list of possible pickup weekdays represented as integer numbers starting from 1 for Sunday up to 7 for Saturday.
          items:
            type: number
        earliestSelectablePickupTime:
          type: string
          description: Present only for pickup types with dynamic user-specified pickup times. This denotes the earliest possible time at which a pickup may (or may not) be possible.
        latestSelectablePickupTime:
          type: string
          description: Present only for pickup types with dynamic user-specified pickup times. This denotes the latest possible time at which a pickup may (or may not) be possible.
        timeWindowBegin:
          type: string
          description: The fixed beginning of the pickup time window. Not present for pickup types with dynamic user-specified pickup times.
        timeWindowEnd:
          type: string
          description: The fixed end of the pickup time window. Not present for pickup types with dynamic user-specified pickup times.
        allowStandalone:
          type: boolean
          description: Defines if the pickup service is orderable as base product.

    ProductTypeLimitationsOFProduct:
      type: object
      description: Details of all product limitations for the product type DHL Online Frankierung.
      properties:
        productCodeOF:
          type: string
          description: The product code (mnemonic id) from DHL Online Franking.
        displayName:
          type: string
          description: The display name of the product.
        displayDescription:
          type: string
          description: The description of the product. The content may contain HTML.
        attributes:
          $ref: "#/components/schemas/ProductTypeLimitationsOFProductAttribute"
        regionPrices:
          $ref: "#/components/schemas/ProductTypeLimitationsOFRegionPrices"
        serviceConditions:
          description: Influence of services on the base product price (such as vat changes).
          type: array
          items:
            type: object
            description: Service condition of the product catalog ws. Models influence of a selected service on the baseProduct price.
            properties:
              services:
                type: array
                description: The service(s) - currently only one - that, when selected, cause the price change.
                items:
                  type: string
              regionPrices:
                $ref: "#/components/schemas/ProductTypeLimitationsOFRegionPrices"
            required:
              - services
              - regionPrices
        serviceExcludes:
          type: array
          description: List of all configured service exclusion rules.
          items:
            type: object
            description: Product service exclusion rules.
            properties:
              exclusionRule:
                type: array
                description: Comma-separated list of productIds with pairwise mutual exclusion.
                items:
                  type: integer
            required:
              - exclusionRule
        availableServices:
          type: array
          description: Service Ids that are configured to be available for this product.
          items:
            type: string
      required:
        - productCodeOF
        - attributes
        - regionPrices

    ProductTypeLimitationsOFProductAttribute:
      description: The attributes of a product of the product type DHL Online Frankierung.
      properties:
        maxDiameter:
          type: integer
          description: Value in centimeters, Maximum diameter for reel shipments.
        cp71limit:
          type: integer
          description: Limit on the value of goods whose exceedance triggers the requirement of a CP71 form.
        maxGurtmass:
          type: integer
          description: Maximum allowed girth in cm for the type of parcel.
        maxDepth:
          type: integer
          description: Maximum allowed depth in cm for the type of parcel.
        maxLength:
          type: integer
          description: Maximum allowed length in cm for the type of parcel.
        maxWidth:
          type: integer
          description: Maximum allowed width in cm for the type of parcel.
        maxWeight:
          type: integer
          description: Maximum allowed weight in cm for the type of parcel.
        minGurtmass:
          type: integer
          description: Minimum allowed girth in cm for the type of parcel.
        minDepth:
          type: integer
          description: Minimum allowed depth in cm for the type of parcel.
        minLength:
          type: integer
          description: Minimum allowed length in cm for the type of parcel.
        minWidth:
          type: integer
          description: Minimum allowed width in cm for the type of parcel.
        minWeight:
          type: integer
          description: Minimum allowed weight in cm for the type of parcel.
        minDiameter:
          type: integer
          description: Value in centimeters, Minimum diameter for reel shipments.
        tracking:
          type: boolean
          description: True if the product is traceable.
        liabilityLimit:
          type: integer
          description: Amount in EUR that is covered by the insurance.

    ProductTypeLimitationsOFService:
      type: object
      description: Details of all product limitations for the product type DHL Online Frankierung.
      properties:
        productCodeOF:
          type: string
          description: The product code (mnemonic id) from DHL Online Franking.
        displayName:
          type: string
          description: The display name of the product.
        displayDescription:
          type: string
          description: The description of the product. The content may contain HTML.
        attributes:
          $ref: "#/components/schemas/ProductTypeLimitationsOFServiceAttribute"
        regionPrices:
          $ref: "#/components/schemas/ProductTypeLimitationsOFRegionPrices"
      required:
        - productCodeOF
        - attributes
        - regionPrices

    ProductTypeLimitationsOFServiceAttribute:
      description: The attributes of a product of the product type DHL Online Frankierung.
      properties:
        serviceGroup:
          type: string
          description: "If the service belongs to a service group, this is the internal name of the service group. Service groups are formed when a series of similar services are to be displayed as a selection field f.e. drop-down list or radio boxes. For example: Insurance services with different insurance coverage."
        orderKey:
          type: integer
          description: Sort order key.
        tracking:
          type: boolean
          description: Added tracking through an service to an otherwise untrackable product.
        liabilityLimit:
          type: integer
          description: Amount in EUR that is covered by the Insurance.

    ProductTypeLimitationsOFRegionPrices:
      type: array
      description: The regions prices.
      items:
        type: object
        description: A price region, i.e., a set of countries and regions sharing an equal price for a certain product or service.
        properties:
          countries:
            type: array
            description: A list of alphabetic ISO 3166-alpha3 or region-ids which share equal prices for a particular product or service. Both are represented in one list as the set of all region-ids and the set of all country ISO3-codes are disjoint.
            items:
              type: string
          price:
            type: object
            description: The gross price in Euro.
            properties:
              amount:
                type: integer
                description: The monetary gross amount in cents of the product or product component.
              tax:
                description: The vat tax rate put on the product component.
                type: integer
            required:
              - amount
              - tax
          productId:
            type: string
            description: The accounting product identifier (EKP) of the product or product component.
          unavailable:
            type: boolean
            description: A boolean flag that, for regular prices, is omitted with default value false. If present and set to true, this means that for this region the respective product is unavailable. In that case the price will have.
        required:
          - countries
          - price
          - ekp

    ThirdPartyOrderUpdateRequest:
      type: object
      description: Decrypted details of a third party order update order request.
      properties:
        caasOrderId:
          $ref: "#/components/schemas/TypeCaasOrderId"
        totp:
          $ref: "#/components/schemas/TypeTOTP"
        clientCartId:
          $ref: "#/components/schemas/TypeClientCartId"
        clientCartVersionId:
          $ref: "#/components/schemas/TypeClientCartIdVersionId"
        orderItems:
          type: array
          description: List of order items.
          items:
            type: object
            description: On order item.
            properties:
              productId:
                type: string
                maxLength: 10
                description: The product identifier. This can be the EKP number or the PPL id. Which is to be used is defined in channel. configuration.
              productType:
                type: string
                description: The type of the product.
                enum:
                  - product
                  - coupon
              quantity:
                type: string
                description: The number of items.
              amount:
                type: string
                maxLength: 6
                description: The gross amount per single item.
              settlementFlag:
                type: boolean
                description: Defines whether the item is relevant for the settlement, default = true.
              invoiceReference:
                type: string
                maxLength: 50
                description: In case of coupons the information about the redeemed coupon to be printed on the invoice.
              printPosition:
                type: object
                description: Defines the position, where the item shall be printed on invoice and how items shall be grouped.
                properties:
                  groupPosition:
                    type: integer
                    minimum: 1
                    maximum: 99
                    description: The position of this item or item group on invoice.
                  groupItemPosition:
                    type: integer
                    minimum: 1
                    maximum: 99
                    description: The position of this item within the group on invoice.
                required:
                  - groupPosition
                  - groupItemPosition
              destinationCountry:
                type: string
                minLength: 3
                maxLength: 3
                description: The ISO Alpha3 code of the destination country.
            required:
              - productId
              - quantity
              - printPosition
              - destinationCountry
        paymentOption:
          type: string
          description: Defines, whether only secured payments shall be offered for the basket or not.
          enum:
            - all
            - secure
        transportConditionsRequired:
          type: boolean
          description: Defines, whether it is needed to enforce the acceptance of the transport conditions for the current order.
        paymentDetailsSDD:
          type: object
          description: The customer mandate address data to be used for SDD payment.
          properties:
            name:
              $ref: "#/components/schemas/TypeAddressName"
            firstName:
              $ref: "#/components/schemas/TypeAddressFirstName"
            street:
              $ref: "#/components/schemas/TypeAddressStreet"
            houseNo:
              $ref: "#/components/schemas/TypeAddressHouseNo"
            zipCode:
              $ref: "#/components/schemas/TypeAddressZipCode"
            city:
              $ref: "#/components/schemas/TypeAddressCity"
            country:
              $ref: "#/components/schemas/TypeAddressCountryDE"
          required:
            - name
            - street
            - zipCode
            - city
            - country
      required:
        - caasOrderId
        - clientCartId
        - clientCartVersionId
        - orderItems
        - paymentOption
        - transportConditionsRequired

#    TypeAddressCompanyName:
#      type: string
#      minLength: 2
#      maxLength: 150
#      description: The company name.

#    TypeAddressCountryDE:
#      type: string
#      minLength: 2
#      maxLength: 2
#      description: The german ISO 3166-2 country code.
#      enum:
#        - DE

#    TypeAddressCountryName:
#      type: string
#      minLength: 2
#      maxLength: 40
#      description: The name of the country.
#      enum:
#        - DE

#    TypeAddressCity:
#      type: string
#      minLength: 2
#      maxLength: 30
#      description: The city name.

#    TypeAddressFirstName:
#      type: string
#      minLength: 2
#      maxLength: 30
#      description: The first name.

#    TypeAddressLastName:
#      type: string
#      minLength: 2
#      maxLength: 30
#      description: The last name.

#    TypeAddressHouseNo:
#      type: string
#      minLength: 0
#      maxLength: 10
#      description: The house number.

#    TypeAddressName:
#      type: string
#      minLength: 2
#      maxLength: 30
#      description: The last name or company name.

#    TypeAddressPOBoxCity:
#      type: string
#      minLength: 2
#      maxLength: 30
#      description: The post office box city name.

#    TypeAddressPOBoxNumber:
#      type: string
#      minLength: 2
#      description: The post office box number.

#    TypeAddressPOBoxZipCode:
#      type: string
#      minLength: 5
#      maxLength: 5
#      description: The post office box zip code.

#    TypeAddressStreet:
#      type: string
#      minLength: 2
#      maxLength: 30
#      description: The street name.

#    TypeAddressStreetHouseNo:
#      type: string
#      minLength: 2
#      maxLength: 40
#      description: The street name and house number.

#    TypeAddressSupplement:
#      type: string
#      minLength: 2
#      maxLength: 50
#      description: The address supplement.

#    TypeAddressTitle:
#      type: string
#      minLength: 2
#      maxLength: 50
#      description: The address title.

#    TypeAddressZipCode:
#      type: string
#      minLength: 5
#      maxLength: 5
#      description: The zip code.

#    TypeCaasOrderId:
#      type: string
#      minLength: 10
#      maxLength: 100
#      description: The id of the CaaS order.

#    TypeClientCartId:
#      type: string
#      pattern: "^.{6,40}$"
#      minLength: 6
#      maxLength: 40
#      description:  The client's identifier of third party (e.g. OFI) for their shopping cart id.

#    TypeClientCartIdVersionId:
#      type: string
#      minLength: 1
#      maxLength: 250
#      description: Client's internal identifier of a specific version of the order items.

#    TypeEmail:
#      type: string
#      format: email
#      pattern: "\b[_A-Za-z0-9-\\+.!#$%&'*/=?\\\\^`{|}~]+@[A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})\b"
#      minLength: 1
#      maxLength: 70
#      description: Customer's email address.

#    TypeTermsOfTradeVersion:
#      type: string
#      minLength: 1
#      maxLength: 256
#      description: Version of the terms of trade accepted.

#    TypeTOTP:
#      type: string
#      minLength: 1
#      maxLength: 40
#      description: >
#        The time-based one-time password (TOTP) to allow the creation of a frontend session for the order.
#
#
#        Validity: 5 Minutes


  responses:
#
#    Caas-Backend-API
#
    '200':
      description: OK - Request has been processed successfully
    '201':
      description: Created - Request has been processed successfully and has resulted in one or more new resources being created.
    '400':
      description: Bad Request - The request could not be understood by the server due to malformed syntax or semantic errors.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found - The resource doesn't exists or is not available within the current session.
    '429':
      description: Too Many Requests - The caller has exceeded its request quota.
      content:
        text/plain:
          schema:
            type: string
    '500':
      description: Internal Server Error
      content:
        text/plain:
          schema:
            type: string
    '503':
      description: Service Unavailable - The backend application is in maintenance mode.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden - The resource is not active anymore within the current session.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '418':
      description: >
        Service Temporary Unavailable - The backend application is in maintenance mode
        
            Note: Typically, a HTTP 503 could be expected here. But Akamai doesn't allow application to use the HTTP 503 and 504 when using Akamai Load Balancers.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    default:
      description: Unexpected error
      content:
        text/plain:
          schema:
            type: string
#
#  CaaS-Widget-API
#
#    '200':
#      description: OK - Request has been processed successfully.
#    '201':
#      description: Created - Request has been processed successfully and has resulted in one or more new resources being created.
#    '400':
#      description: Bad Request - The request could not be understood by the server due to malformed syntax or semantic errors.
#      content:
#        application/problem+json:
#          schema:
#            $ref: '#/components/schemas/Error'
#    '401':
#      description: Authentication information is missing or invalid.
#      headers:
#        WWW_Authenticate:
#          schema:
#            type: string
#        application/problem+json:
#          schema:
#            $ref: '#/components/schemas/Error'
#    '404':
#      description: Not Found - The resource doesn't exists or is not available within the current session.
#    '429':
#      description: Too Many Requests - The caller has exceeded its request quota.
#      content:
#        text/plain:
#          schema:
#            type: string
#    '500':
#      description: Internal Server Error.
#      content:
#        text/plain:
#          schema:
#            type: string
#    '503':
#      description: Service Unavailable - The backend application is in maintenance mode.
#      content:
#        application/json:
#          schema:
#            $ref: '#/components/schemas/Error'
#    '403':
#      description: Forbidden - The resource is not active anymore within the current session.
#      content:
#        application/json:
#          schema:
#            $ref: '#/components/schemas/Error'
#    '418':
#      description: >
#        Service Temporary Unavailable - The backend application is in maintenance mode.
#
#            Note: Typically, a HTTP 503 could be expected here. But Akamai doesn't allow application to use the HTTP 503 and 504 when using Akamai Load Balancers.
#      content:
#        application/problem+json:
#          schema:
#            $ref: '#/components/schemas/Error'
#          examples:
#            MaintenanceMode:
#              $ref: '#/components/examples/MaintenanceMode'
#            TechnicalError:
#              $ref: '#/components/examples/TechnicalError'
#    default:
#      description: Unexpected error.
#      content:
#        text/plain:
#          schema:
#            type: string


  examples:
#
#    CaaS-Backend-API
#
    OrderInitWithItemsKnownCustomerRequest:
      summary: Order initialization, when the customer isknown.
      value:
        clientCartId: "42WYRSAW57GF"
        callbackUrlSuccess: "https://www.dhl.de/caas/success/42WYRSAW57GF"
        callbackUrlError: "https://www.dhl.de/caas/failure/42WYRSAW57GF"
        paymentOption: "secure"
        email: "x@ab.cd"
        billingAddress:
          companyName: "Deutsche Post, eFiliale"
          street: "Heinrich-Brüning-Str."
          houseNo: "5"
          zipCode: "53113"
          city: "Bonn"
          country: "DE"
        termsOfTradeAccepted: true

    OrderInitWithoutItemsKnownCustomerRequest:
      summary: Order initialization without items, when the customer is known.
      value:
        clientCartId: "42WYRSAW57GF"
        callbackUrlSuccess: "https://www.dhl.de/caas/success/42WYRSAW57GF"
        callbackUrlError: "https://www.dhl.de/caas/failure/42WYRSAW57GF"
        paymentOption: "all"
        email: "x@ab.cd"
        billingAddress:
          firstName: "Max"
          lastName: "Mustermann"
          street: "Heinrich-Brüning-Str."
          houseNo: "5"
          zipCode: "53113"
          city: "Bonn"
          country: "DE"
        termsOfTradeAccepted: false

    OrderInitWithoutItemsUnknownCustomerRequest:
      summary: Order initialization without items, when the customer isn't known.
      value:
        clientCartId: "42WYRSAW57GF"
        callbackUrlSuccess: "https://www.dhl.de/caas/success/42WYRSAW57GF"
        callbackUrlError: "https://www.dhl.de/caas/failure/42WYRSAW57GF"
        paymentOption: "all"

    OrderInitialized:
      summary: Order is initialized.
      value:
        caasOrderId: "1232d7ea-413f-11ea-b55g-2e528ce88123"
        clientCartId: "42WYRSAW57GF"
        totp: "25649856"
    
    OrderInvoiceUrl:
      summary: Requested type is "url". Order invoice response as download URL.
      value:
        url: "https://shop.deutschepost.de/.....pdf"
        urlTotp: "25649856"

    OrderInvoiceBase64:
      summary: Requested type is "base64". Order invoice embedded as base64 in JSON response.
      value:
        content: "TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNldGV0dXIgc2FkaXBzY2luZyBlbGl0ciwgc2VkIGRpYW0gbm9udW15IGVpcm1vZCB0ZW1wb3IgaW52aWR1bnQgdXQgbGFib3JlIGV0IGRvbG9yZSBtYWduYSBhbGlxdXlhbSBlcmF0LCBzZWQgZGlhbSB2b2x1cHR1YS4gQXQgdmVybyBlb3MgZXQgYWNjdXNhbSBldCBqdXN0byBkdW8gZG9sb3JlcyBldCBlYSByZWJ1bS4gU3RldCBjbGl0YSBrYXNkIGd1YmVyZ3Jlbiwgbm8gc2VhIHRha2ltYXRhIHNhbmN0dXMgZXN0IExvcmVtIGlwc3VtIGRvbG9yIHNpdCBhbWV0LiBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCwgY29uc2V0ZXR1ciBzYWRpcHNjaW5nIGVsaXRyLCBzZWQgZGlhbSBub251bXkgZWlybW9kIHRlbXBvciBpbnZpZHVudCB1dCBsYWJvcmUgZXQgZG9sb3JlIG1hZ25hIGFsaXF1eWFtIGVyYXQsIHNlZCBkaWFtIHZvbHVwdHVhLiBBdCB2ZXJvIGVvcyBldCBhY2N1c2FtIGV0IGp1c3RvIGR1byBkb2xvcmVzIGV0IGVhIHJlYnVtLiBTdGV0IGNsaXRhIGthc2QgZ3ViZXJncmVuLCBubyBzZWEgdGFraW1hdGEgc2FuY3R1cyBlc3QgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQu"

    OrderPaymentResponseApplePay:
      summary: Apple Pay order details.
      value:
        paymentState: "done"
        payment:
          paymentType: "applepay"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173083-b86b-050b-7f86-b698f6e56667"

    OrderPaymentResponseBraintreeCreditCard:
      summary: Credit card order details.
      value:
        paymentState: "done"
        payment:
          paymentType: "ccardbt"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173083-b86b-050b-7f86-b698f6e56667"

    OrderPaymentResponseGiropay:
      summary: Giropay order details.
      value:
        paymentState: "done"
        payment:
          paymentType: "giropay"
          paymentDetails:
            initUrl: "06173093-b86b-050f-7f86-b698g6e56167"

    OrderPaymentResponseGooglePay:
      summary: Google Pay order details.
      value:
        paymentState: "done"
        payment:
          paymentType: "googlepay"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173083-b86b-050b-7f86-b698f6e56667"

    OrderPaymentResponseOPP:
      summary: C2C Partner OPP order details.
      value:
        paymentState: "done"
        payment:
          paymentType: "opp"
          paymentDetails:
            paymentReference: "eK_eCen!HJ="

    OrderPaymentResponsePayPal:
      summary: PayPal order details.
      value:
        paymentState: "done"
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173083-b86b-050b-7f86-b698f6e56667"

    OrderPaymentResponseSDD:
      summary: SDD order details.
      value:
        paymentState: "done"
        payment:
          paymentType: "sdd"
          paymentDetails:
            iban: "DE02120300000000202051"
            bic: "BYLADEM1001"
            accountHolder:
              name: "Mustermann"
              firstName: "Erika"
              street: "Heidestr."
              houseNo: "17"
              zipCode: "51147"
              city: "Köln"
              country: "DE"

            mandateId: "L10013DE59R10E1R98VC00D2DX"

    OrderSettled:
      summary: Order is settled.
      value:
        caasOrderId: "1232d7ea-413f-11ea-b55g-2e528ce88123"
        clientCartId: "42WYRSAW57GF"

    OrderSettledPoststation:
      summary: Poststation order is settled.
      value:
        caasOrderId: "1232d7ea-413f-11ea-b55g-2e528ce88123"

    OrderSettleWithBusinessCustomerRequest:
      summary: Order creation for immediate settlement for business customer.
      value:
        clientCartId: "42WYRSAW57GF"
        email: "john@doe.com"
        billingAddress:
          type: "Business"
          companyName: "Deutsche Post, eFiliale"
          street: "Heinrich-Brüning-Str."
          houseNo: "5"
          zipCode: "53113"
          city: "Bonn"
          country: "DE"
        paymentInformation:
          paymentType: "opp"
          paymentDetails:
            paymentReference: "42WYRSAW57GF"
        termsOfTradeVersion: "EFI_AGB_2021-03-14"
        orderItems:
          - productId: "182900005"
            productType: "product"
            quantity: "1"
            amount: "599"
            printPositon:
              groupPosition: 2
              groupItemPosition: 1
          - productId: "182900005"
            productType: "coupon"
            quantity: "1"
            amount: "0"
            printPositon:
              groupPosition: 1
              groupItemPosition: 1

    OrderSettleWithPrivateCustomerRequest:
      summary: Order creation for immediate settlement for private customer.
      value:
        clientCartId: "42WYRSAW57GF"
        email: "john@doe.com"
        billingAddress:
          type: "Private"
          firstName: "Max"
          lastName: "Mustermann"
          street: "Heinrich-Brüning-Str."
          houseNo: "5"
          zipCode: "53113"
          city: "Bonn"
          country: "DE"
        paymentInformation:
          paymentType: "opp"
          paymentDetails:
            paymentReference: "42WYRSAW57GF"
        termsOfTradeVersion: "EFI_AGB_2021-03-14"
        orderItems:
          - productId: "182900005"
            productType: "product"
            quantity: "1"
            amount: "599"
            printPositon:
              groupPosition: 2
              groupItemPosition: 1
          - productId: "182900005"
            productType: "coupon"
            quantity: "1"
            amount: "0"
            printPositon:
              groupPosition: 1
              groupItemPosition: 1

    OrderSettleWithGroupedItemsRequest:
      summary: Order creation for immediate settlement with grouped order items.
      value:
        clientCartId: "42WYRSAW57GF"
        email: "john@doe.com"
        billingAddress:
          type: "Private"
          firstName: "Max"
          lastName: "Mustermann"
          supplement: ""
          street: "Heinrich-Brüning-Str."
          houseNo: "5"
          zipCode: "53113"
          city: "Bonn"
          country: "DE"
        paymentInformation:
          paymentType: "opp"
          paymentDetails:
            paymentReference: "42WYRSAW57GF"
        termsOfTradeVersion: "EFI_AGB_2021-03-14"
        orderItems:
          - productId: "182900005"
            productType: "product"
            quantity: "1"
            amount: "599"
            printPositon:
              groupPosition: 1
              groupItemPosition: 1
          - productId: "182900005"
            productType: "coupon"
            quantity: "1"
            amount: "0"
            printPositon:
              groupPosition: 1
              groupItemPosition: 2

    OrderSettlePoststationIM:
      summary: Single Internetmarke stamp
      value:
        paymentInformation:
          paymentType: "zvt"
          paymentDetails:
            podId: "4711"
            terminalId: "35131061"
            transactionId: "531130171635257834"
            cardType: "Mastercard"
            amount: 85
            timestamp: "2022-07-21T17:32:28Z"
            invoiceText: "- Kundenbeleg -|||Kartenzahlung|||MC CREDIT|||Betrag: EUR 0,85||Terminal-Nr: 35131061|||Trace-Nr: 000053|||Beleg: 16|||Karten-Nr: ###############7692|||Folge-Nr: 0001|||Kartendaten: Kontaktlos|||AID: 642338|||VU-Nr: 4846578216875|||EMV-AID: A0000000045687|||Zahlung erfolgt|||AS-Proc-Code 0 00 055 00|||Capt.Ref.= 0000|||AID59: SM0037|||Antwortcode = 00"
            signature: "VGhpcyBpcyBub3QgdGhlIHJlYWwgc2lnbmF0dXJlLiBJdCdzIGp1c3QgYW4gZXhhbXBsZSBvZiB0aGUgYmFzZTY0IGVuY29kaW5nIG9mIGEgc3RyaW4u"
        orderItems:
          - product:
              configId: "12300000001"
              salesProduct:
                productId: 102100001
                quantity: 1
                grossPrice: 85
            configuration:
              productFulfillerType: "none"
              productFulfillerDetails:
                - fulfillmentId: "A0123456789"

    OrderSettlePoststationIMAddress:
      summary: Three Internetmarke stamps with an invoice address
      value:
        billingAddress:
          type: "Business"
          companyName: "CaaS Checkout Services KGaA"
          supplement: ""
          street: "Heinrich-Brüning-Str."
          houseNo: "5"
          zipCode: "53113"
          city: "Bonn"
          country: "DE"
        paymentInformation:
          paymentType: "zvt"
          paymentDetails:
            podId: "4711"
            terminalId: "35131061"
            transactionId: "531130171635257834"
            cardType: "Mastercard"
            amount: 255
            timestamp: "2022-07-21T17:32:28Z"
            invoiceText: "- Kundenbeleg -|||Kartenzahlung|||MC CREDIT|||Betrag: EUR 0,85||Terminal-Nr: 35131061|||Trace-Nr: 000053|||Beleg: 16|||Karten-Nr: ###############7692|||Folge-Nr: 0001|||Kartendaten: Kontaktlos|||AID: 642338|||VU-Nr: 4846578216875|||EMV-AID: A0000000045687|||Zahlung erfolgt|||AS-Proc-Code 0 00 055 00|||Capt.Ref.= 0000|||AID59: SM0037|||Antwortcode = 00"
            signature: "VGhpcyBpcyBub3QgdGhlIHJlYWwgc2lnbmF0dXJlLiBJdCdzIGp1c3QgYW4gZXhhbXBsZSBvZiB0aGUgYmFzZTY0IGVuY29kaW5nIG9mIGEgc3RyaW4u"
        orderItems:
          - product:
              configId: "12300000001"
              salesProduct:
                productId: 102100001
                quantity: 3
                grossPrice: 255
            configuration:
              productFulfillerType: "none"
              productFulfillerDetails:
                - fulfillmentId: "A0123456781"
                - fulfillmentId: "A0223456782"
                - fulfillmentId: "A0323456783"

    OrderSettlePoststationDHLOFWithPickup:
      summary: DHL Online Frankierung with additional service Pickup
      value:
        paymentInformation:
          paymentType: "zvt"
          paymentDetails:
            podId: "4711"
            terminalId: "35131061"
            transactionId: "531130171635257834"
            cardType: "Mastercard"
            amount: 320
            timestamp: "2017-07-22T17:32:28Z"
            invoiceText: "- Kundenbeleg -|||Kartenzahlung|||MC CREDIT|||Betrag: EUR 3,20||Terminal-Nr: 35131061|||Trace-Nr: 000053|||Beleg: 16|||Karten-Nr: ###############7692|||Folge-Nr: 0001|||Kartendaten: Kontaktlos|||AID: 642338|||VU-Nr: 4846578216875|||EMV-AID: A0000000045687|||Zahlung erfolgt|||AS-Proc-Code 0 00 055 00|||Capt.Ref.= 0000|||AID59: SM0037|||Antwortcode = 00"
            signature: "VGhpcyBpcyBub3QgdGhlIHJlYWwgc2lnbmF0dXJlLiBJdCdzIGp1c3QgYW4gZXhhbXBsZSBvZiB0aGUgYmFzZTY0IGVuY29kaW5nIG9mIGEgc3RyaW4u"
        orderItems:
          - product:
              configId: "12300000001"
              salesProduct:
                productId: 102100001
                quantity: 1
                grossPrice: 85
            configuration:
              productFulfillerType: "none"
              productFulfillerDetails:
                - fulfillmentId: "RMYYG7SPX3VD"
                  trackingId: "94161022003008"
          - product:
              configId: "12300000002"
              bundleReferenceConfigId: "12300000001"
              salesProduct:
                productId: 1067
                quantity: 1
                grossPrice: 235
              invoiceReferenceText: "Abholung am 15.10.2022"
            configuration:
              productFulfillerType: "none"
              productFulfillerDetails: null

    OrderSettlePoststationNSA:
      summary: NSA
      value:
        paymentInformation:
          paymentType: "zvt"
          paymentDetails:
            podId: "4711"
            terminalId: "35131061"
            transactionId: "531130171635257834"
            cardType: "Mastercard"
            amount: 2390
            timestamp: "2022-07-22T17:32:28Z"
            invoiceText: "- Kundenbeleg -|||Kartenzahlung|||MC CREDIT|||Betrag: EUR 23,90||Terminal-Nr: 35131061|||Trace-Nr: 000053|||Beleg: 16|||Karten-Nr: ###############7692|||Folge-Nr: 0001|||Kartendaten: Kontaktlos|||AID: 642338|||VU-Nr: 4846578216875|||EMV-AID: A0000000045687|||Zahlung erfolgt|||AS-Proc-Code 0 00 055 00|||Capt.Ref.= 0000|||AID59: SM0037|||Antwortcode = 00"
            signature: "VGhpcyBpcyBub3QgdGhlIHJlYWwgc2lnbmF0dXJlLiBJdCdzIGp1c3QgYW4gZXhhbXBsZSBvZiB0aGUgYmFzZTY0IGVuY29kaW5nIG9mIGEgc3RyaW4u"
        orderItems:
          - product:
              configId: "12300000001"
              salesProduct:
                productId: 102100001
                quantity: 1
                grossPrice: 2390
            configuration:
              productFulfillerType: "nsa"
              productFulfillerDetails:
                - reason: "umzug"
                  startDate: "2022.06.25"
                  endDate: "2022.08.01"
                  duration: 3
                  persons:
                    - name1: "Max"
                      name: "Mustermann"
                      purchaser: true
                      authorized: true
                      announcement: false
                    - name1: "Ingrid"
                      name: "Musterfrau"
                      purchaser: false
                      authorized: true
                      announcement: false
                  address1:
                    country: "DE"
                    street: "Heinrich-Brüning-Str."
                    houseNo: "5"
                    zipCode: "53113"
                    city: "Bonn"
                  address2:
                    country: "DE"
                    street: "Charles-de-Gaulle-Str."
                    houseNo: "20"
                    zipCode: "53113"
                    city: "Bonn"
            fulfillmentId: "U6232877"

    OrderStateResponseAfterCreation:
      summary: Order state of an unpaid order whre the checkout isn't started, yet.
      value:
        caasOrderId: "1232d7ea-413f-11ea-b55g-2e528ce88123"
        clientCartId: "42WYRSAW57GF"
        clientCartVersionId: "9034hjfo834tew4fh09w"
        paymentState: "unknown"
        orderState: "unknown"

    OrderStateResponseAfterPayment:
      summary: Order state of an unpaid order whre the checkout isn't started, yet.
      value:
        caasOrderId: "1232d7ea-413f-11ea-b55g-2e528ce88123"
        clientCartId: "42WYRSAW57GF"
        clientCartVersionId: "9034hjfo834tew4fh09w"
        paymentState: "done"
        orderState: "done"

    OrderStateResponseAfterFinalization:
      summary: Order state of an unpaid order whre the checkout isn't started, yet.
      value:
        caasOrderId: "1232d7ea-413f-11ea-b55g-2e528ce88123"
        clientCartId: "42WYRSAW57GF"
        clientCartVersionId: "9034hjfo834tew4fh09w"
        paymentState: "done"
        orderState: "done"

    RefundCreatedResponse:
      summary: Refund order is created.
      value:
        caasOrderId: "274-ewf3f-11ea-b55g-2e528ce8904375"
        originReference:
          clientCartId: "1232d7ea-413f-11ea-b55g-2e528ce88123"
          caasOrderId: "42WYRSAW57GF"

    ProductValidationValidNSARequest:
      summary: Valid product configuration "NSA"
      value:
        product:
          configId: "12300000001"
          salesProduct:
            productId: 102100001
            quantity: 1
        configuration:
          productFulfillerType: "nsa"
          productFulfillerDetails:
            - reason: "umzug"
              startDate: "2022.06.25"
              endDate: "2022.08.01"
              duration: 3
              persons:
                - name1: "Max"
                  name: "Mustermann"
                  purchaser: true
                  authorized: true
                  announcement: false
                - name1: "Ingrid"
                  name: "Musterfrau"
                  purchaser: false
                  authorized: true
                  announcement: false
              address1:
                country: "DEU"
                street: "Heinrich-Brüning-Str."
                houseNo: "5"
                zipCode: "53113"
                city: "Bonn"
              address2:
                country: "DEU"
                street: "Charles-de-Gaulle-Str."
                houseNo: "20"
                zipCode: "53113"
                city: "Bonn"

    ProductValidationValidNSAResponse:
      summary: Valid product configuration "NSA" Response
      value:
        product:
          configId: "12300000001"
          salesProduct:
            productId: 102100001
            quantity: 1
        configuration:
          productFulfillerType: "nsa"
          productFulfillerDetails:
            - reason: "umzug"
              startDate: "2022.06.25"
              endDate: "2022.08.01"
              duration: 3
              persons:
                - name1: "Max"
                  name: "Mustermann"
                  purchaser: true
                  authorized: true
                  announcement: false
                - name1: "Ingrid"
                  name: "Musterfrau"
                  purchaser: false
                  authorized: true
                  announcement: false
              address1:
                country: "DEU"
                street: "Heinrich-Brüning-Str."
                houseNo: "5"
                zipCode: "53113"
                city: "Bonn"
              address2:
                country: "DEU"
                street: "Charles-de-Gaulle-Str."
                houseNo: "20"
                zipCode: "53113"
                city: "Bonn"

    MaintenanceMode:
      summary: Backend application in maintenance mode (or not available at all)
      value:
        code: "MaintenanceMode"
        detail: "Wegen Wartungsarbeiten steht die Anwendung bis 17:00 Uhr nicht zur Verfügung."

    TechnicalError:
      summary: Backend application with technical error.
      value:
        code: "TechnicalError"
        detail: "Aufgrund einer Störung steht die Anwendung derzeit nicht zur Verfügung. Versuchen Sie es bitte später noch einmal."
#
#   CaaS-Widget-API
#
    CartCheckoutNotInitialized:
      summary: Example of cart details where the checkout is not initialized yet
      value:
        cartId: "c71fd696-4124-11ea-b77f-2e728ce88125"
        configIds:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
        cartStatus:
        caasOrderId:

    CartCheckoutToOrder:
      summary: Example of cart details after the checkout is initialized
      value:
        cartId: "c71fd696-4124-11ea-b77f-2e728ce88125"
        configIds:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
        cartStatus: "checkout"
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"

    CartCheckoutToOrderMultipleProductConfigurations:
      summary: Example of cart details with multiple product configurations after the checkout is initialized
      value:
        cartId: "c71fd696-4124-11ea-b77f-2e728ce88125"
        configIds:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
          - configId: "3934fgtz-l38s-489s-c673-2s898ce88126"
        cartStatus: "checkout"
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"

    CartCheckoutProductConfigurationsSetRequestSingle:
      summary: Example of a single valid product configuration
      value:
        - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"

    CartCheckoutProductConfigurationsSetRequestMultiple:
      summary: Example of a valid product configuration set
      value:
        - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
        - configId: "3934fgtz-l38s-489s-c673-2s898ce88126"

    CartCheckoutToOrderInvalidCaasOrderIdError:
      summary: Example for an error response when the given caasOrderId canot be used
      value:
        code: "TechnicalError"
        detail: "Die übergebene CaasOrderId ist nicht verwendbar."

    CategoryDetails:
      summary: Example of a category
      value:
        categoryId: "eficascat1460007"
        categoryName: 'Standardbrief'
        categoryDescriptionShort: "bis 20g. %3Cbr%2F%3Emax 23%2C5x12%2C5x0%2C5cm"
        categoryDescriptionLong: 'Standardbrief'
        categoryImageReferenceType: "classname"
        categoryImageReferenceSmall: "ofb_standard_letter_small"
        categoryImageReferenceLarge: "ofb_standard_letter_large"
        displayOrder: 1
        categoryPrice: 80
        isVisible: true

    CategoryDetailsList:
      summary: Example of a complete category list
      value:
        categoryList:
          - categoryId: "eficascat1460007"
            categoryName: 'Standardbrief'
            categoryDescriptionShort: "bis 20g. %3Cbr%2F%3Emax 23%2C5x12%2C5x0%2C5cm"
            categoryDescriptionLong: 'Standardbrief'
            categoryImageReferenceType: "classname"
            categoryImageReferenceSmall: "ofb_standard_letter_small"
            categoryImageReferenceLarge: "ofb_standard_letter_large"
            displayOrder: 1
            categoryPrice: 80
            isVisible: true
            subCategoryList: []
          - categoryId: "catEinschreiben1234567"
            categoryName: 'Einschreiben'
            categoryDescriptionShort: "dummy"
            categoryImageReferenceType: "classname"
            categoryImageReferenceSmall: "ofb_service_einschreiben"
            categoryPrice: 0
            isVisible: false
          - categoryId: "eficascat1460008"
            categoryName: 'Kompaktbrief'
            categoryDescriptionShort: "bis 50g. %3Cbr%2F%3Emax 23%2C5x12%2C5x0%2C5cm"
            categoryDescriptionLong: 'Kompaktbrief'
            categoryImageReferenceType: url
            categoryImageReferenceSmall: 'https://images.shop.deutschepost.de%2FMEDIA%2FPROD_ProductCatalog%2Fefim760153_T_Internetmarke-Briefmarken-online-drucken_432x270.jpg'
            categoryImageReferenceLarge: 'https://images.shop.deutschepost.de%2FMEDIA%2FPROD_ProductCatalog%2Fefim760153_T_Internetmarke-Briefmarken-online-drucken_432x270.jpg'
            displayOrder: 2
            categoryPrice: 98
            isVisible: true
            subCategoryList: []
          - categoryId: "eficascat1470009"
            categoryName: 'Großbrief'
            categoryDescriptionShort: "bis 500g. %3Cbr%2F%3Emax 35%2C3x25x2cm"
            categoryDescriptionLong: 'Großbrief'
            categoryImageReferenceType: url
            categoryImageReferenceSmall: 'https://images.shop.deutschepost.de%2Fshop%2Finternetmarke%2FselectPostageIM.jsp'
            categoryImageReferenceLarge: 'https://images.shop.deutschepost.de%2Fshop%2Finternetmarke%2FselectPostageIM.jsp'
            displayOrder: 3
            categoryPrice: 155
            isVisible: true
            subCategoryList: []
          - categoryId: "eficascat1470010"
            categoryName: 'Postkarte'
            categoryDescriptionShort: "bis 1000g. %3Cbr%2F%3Emax 35%2C3x25x2cm"
            categoryDescriptionLong: 'Postkarte'
            categoryImageReferenceType: url
            categoryImageReferenceSmall: 'https://images.shop.deutschepost.de%2FMEDIA%2FPROD_ProductCatalog%2Fefim760153_T_Internetmarke-Briefmarken-online-drucken_432x270.jpg'
            categoryImageReferenceLarge: 'https://images.shop.deutschepost.de%2FMEDIA%2FPROD_ProductCatalog%2Fefim760153_T_Internetmarke-Briefmarken-online-drucken_432x270.jpg'
            displayOrder: 4
            categoryPrice: 60
            isVisible: true
            subCategoryList: []

    CategoryDetailsListMultipleLevels:
      summary: Example of a complete category list with subcategories
      value:
        categoryList:
          - categoryId: "dummy"
            categoryName: 'Services'
            categoryDescriptionShort: "Invisible master category with subgroups for service grouping"
            categoryImageReferenceType: "classname"
            categoryImageReferenceSmall: "services"
            categoryPrice: 0
            isVisible: true
            subCategoryList:
              - categoryId: "catEinschreiben1234567"
                categoryName: 'Einschreiben'
                categoryDescriptionShort: "dummy"
                categoryImageReferenceType: "classname"
                categoryImageReferenceSmall: "ofb_service_einschreiben"
                categoryPrice: 0
                isVisible: false
              - categoryId: "catOFVersicherung"
                categoryName: 'Höherversicherung'
                categoryDescriptionShort: "dummy"
                categoryImageReferenceType: "classname"
                categoryImageReferenceSmall: "ofi_service_versicherung"
                categoryPrice: 0
                isVisible: false
                subCategoryList: []

          - categoryId: "cat4711"
            categoryName: 'Standardbrief'
            categoryDescriptionShort: "bis 20g<br/>max. 23,5 x 12,5 x 0,5cm"
            categoryDescriptionLong: 'Long category description for the popup layer'
            categoryPrice: 80
            categoryImageReferenceType: "classname"
            categoryImageReferenceSmall: "ofb_standard_letter_small"
            categoryImageReferenceLarge: "ofb_standard_letter_large"
            displayOrder: 3
            isVisible: true
            subCategoryList: []
          - categoryId: "cat0815"
            categoryName: 'Kompaktbrief'
            categoryDescriptionShort: "bis 50g<br/>max. 23,5 x 12,5 x 1,0cm"
            categoryDescriptionLong: 'Long category description for the popup layer'
            categoryPrice: 80
            categoryImageReferenceType: "url"
            categoryImageReferenceSmall: "https://images.shop.deutschepost.de/MEDIA/PROD_ProductCatalog/efim1950018_Z_1_151104878_Briefmarke_U_Bahn_Station_Marienplatz_Muenchen_0-95-EUR_800x600.jpg?profile=thumb"
            categoryImageReferenceLarge: "https://images.shop.deutschepost.de/MEDIA/PROD_ProductCatalog/efim1950018_Z_1_151104878_Briefmarke_U_Bahn_Station_Marienplatz_Muenchen_0-95-EUR_800x600.jpg?profile=zoom"
            displayOrder: 4
            isVisible: true
            subCategories:
              - categoryId: "cat4711"
                categoryName: 'Standardbrief'
                categoryDescriptionShort: "bis 20g<br/>max. 23,5 x 12,5 x 0,5cm"
                categoryDescriptionLong: 'Long category description for the popup layer'
                categoryPrice: 80
                categoryImageReferenceType: "classname"
                categoryImageReferenceSmall: "ofb_standard_letter_small"
                categoryImageReferenceLarge: "ofb_standard_letter_large"
                displayOrder: 3
                isVisible: true
                subCategoryList: []
              - categoryId: "cat0815"
                categoryName: 'Kompaktbrief'
                categoryDescriptionShort: "bis 50g<br/>max. 23,5 x 12,5 x 1,0cm"
                categoryDescriptionLong: 'Long category description for the popup layer'
                categoryPrice: 80
                categoryImageReferenceType: "url"
                categoryImageReferenceSmall: "https://images.shop.deutschepost.de/MEDIA/PROD_ProductCatalog/efim1950018_Z_1_151104878_Briefmarke_U_Bahn_Station_Marienplatz_Muenchen_0-95-EUR_800x600.jpg?profile=thumb"
                categoryImageReferenceLarge: "https://images.shop.deutschepost.de/MEDIA/PROD_ProductCatalog/efim1950018_Z_1_151104878_Briefmarke_U_Bahn_Station_Marienplatz_Muenchen_0-95-EUR_800x600.jpg?profile=zoom"
                displayOrder: 4
                isVisible: true
                subCategoryList: []

    ContentTextElements:
      summary: Example of a complete content text elements list
      value:
        elements:
          - contentId: "ofb.progress@product.selection"
            contentText: "Produktauswahl"
          - contentId: "ofb.progress@order.selection"
            contentText: "Kauf"
          - contentId: "ofb.progress@success.selection"
            contentText: "Geschafft!"
          - contentId: "ofb.start@country.selection.title"
            contentText: "Versand nach:"
          - contentId: "ofb.start@country.selection.germany"
            contentText: "Deutschland"
          - contentId: "ofb.start@product.selection.button"
            contentText: "Wählen"
          - contentId: "ofb.FulfillmentPage@title"
            contentText: "Brief versenden"
          - contentId: "ofb.FulfillmentPage@header_button_text"
            contentText: "Fertig"
          - contentId: "ofb.ProgressBar@finished"
            contentText: "Geschafft!"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@portocode_header"
            contentText: "Hier ist Ihre Mobile Briefmarke:"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@info_1:HTML"
            contentText: "Schreiben Sie diesen Code oben rechts in der<br>Frankierzone auf Ihren Brief.<br/><strong>Bitte zweizeilig schreiben!</strong>"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@info_2:HTML"
            contentText: "Die Gültigkeit des Codes beträgt 14 Tage.<br>Die Auftragbestätigung erhalten Sie per E-Mail.<br/>Auftragsnummer {caasOrderId}"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@example_link_text"
            contentText: "Musterbeispiel anzeigen"
          - contentId: "ofb.FulfillmentPage@more_button_text"
            contentText: "Weitere Marken kaufen"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@modal_text:HTML"
            contentText: "<strong>Weitere Informationen zur Mobilen Briefmarke</strong>"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@modal_link_text"
            contentText: "Hier mehr erfahren"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@modal_link_href"
            contentText: "https://www.deutschepost.de/"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@product_usage_image_reference.Standardbrief:IMAGE"
            contentText: "/assets/img/fulfillment/animation-briefsaeule-brief-stift-xs.svg"
          - contentId: "ofb.FulfillmentPage.MobileFulfillment@modal_image_reference.Standardbrief:IMAGE"
            contentText: "/assets/img/fulfillment/schablone_postkarte.svg"
          - contentId: "ofb.success@fulfillment.message.header.mobile"
            contentText: "Hier ist Ihre Mobile Briefmarke"
          - contentId: "ofb.success@fulfillment.message.info.mobile"
            contentText: "Schreiben Sie diesen Coder oben rechts ind er Frankierzone auf Ihren Brief<br/><strong>Bitte zweizeilig schreiben!</strong>"
          - contentId: "ofb.success@fulfillment.message.legal.mobile"
            contentText: "Die Gültigkeit des Codes beträgt 14 Tage. Eine Auftragbestätigung haben wir Ihnen per E-Mail gesendet. Auftragsnummer {caasOrderId}"
          - contentId: "ofb.DeliverySelectionPage@section.email.title"
            contentText: "E-Mail-Adresse für Auftragsbestätigung*"
          - contentId: "ofb.DeliverySelectionPage@error.email_required"
            contentText: "Bitte geben Sie eine gültige E-Mail-Adresse ein."
          - contentId: "ofb.DeliverySelectionPage@section.email.input.placeholder"
            contentText: "E-Mail-Adresse eintragen"
          - contentId: "ofb.DeliverySelectionPage@save_email_address.label"
            contentText: "E-Mail Adresse speichern"
          - contentId: "ofb.FulfillmentPage.PdfFulfillment@download_header"
            contentText: "Hier ist Ihre Internetmarke:"
          - contentId: "ofb.FulfillmentPage.PdfFulfillment@download_button"
            contentText: "PDF anzeigen"
          - contentId: "ofb.FulfillmentPage.PdfFulfillment@info_1:HTML"
            contentText: "Bitte drucken Sie das PDF aus und kleben Sie den Ausdruck auf Ihren Brief.<br />Die Internetmarke haben wir Ihnen auch per E-Mail geschickt."
          - contentId: "ofb.FulfillmentPage.PdfFulfillment@info_2:HTML"
            contentText: "Die Gültigkeit des Codes beträgt 3 Jahre.<br />Auftragsnummer {shopOrderId}"
          - contentId: "ofb.FulfillmentPage.PdfFulfillment@product_usage_image_reference.Standardbrief:IMAGE"
            contentText: "/assets/img/fulfillment/animation-briefsaeule-brief-drucker-xs.svg"
          - contentId: "ofb.DeliverySelectionPage@accept_terms.label:HTML"
            contentText: "Ich habe die <a href=\"https://www.deutschepost.de/\" target=\"_blank\"><strong>AGB</strong></a> und das <a href=\"https://www.deutschepost.de/\" target=\"_blank\"><strong>Widerrufsrecht</strong></a> zur Kenntnis genommen.*"

    CountryListIM:
      summary: Example of a country list for Internetmarke
      value:
        countries:
          - id: "1"
            alpha3: "AFG"
            name: "Afghanistan"
          - id: "2"
            alpha3: "EGY"
            name: "Ägypten"
          - id: "3"
            alpha3: "ALA"
            name: "Åland-Inseln"
          - id: "24"
            alpha3: "BEL"
            name: "Belgien"
          - id: "48"
            alpha3: "DEU"
            name: "Deutschland"

    CountryListOF:
      summary: Example of a country list for DHL Online Franking
      value:
        countries:
          - id: "1"
            alpha3: "AFG"
            name: "Afghanistan"
            customsDeclarationFlag: true
            maxWeight: 31.5
            info: "Der Versand nach Afghanistan ist derzeit nicht möglich"
            addtlInfo: "null"
            addtlInfoLink: "null"
            forbiddenProducts:
              - "PAK05"
              - "PAK10"
              - "PAK20"
            language: "Englisch"
            provinces: []
          - id: "2"
            alpha3: "EGY"
            name: "Ägypten"
            customsDeclarationFlag: true
            maxWeight: 31.5
            info: "langer Text mit HTML"
            forbiddenProducts:
            language: "Englisch"
            provinces: []
          - id: "3"
            alpha3: "ALA"
            name: "Åland-Inseln"
            customsDeclarationFlag: true
            maxWeight: 20.0
            info: "langer Text mit HTML"
            addtlInfo: "null"
            addtlInfoLink: "null"
            language: "Englisch%2C%20Finnisch%2C%20Schwedisch%2C%20Landessprache"
            provinces:
          - id: "24"
            alpha3: "BEL"
            name: "Belgien"
            customsDeclarationFlag: false
            maxWeight: 31.5
            info: "langer Text mit HTML"
            addtlInfo: "null"
            addtlInfoLink: "null"
            language: "null"
            provinces:
          - id: "34"
            alpha3: "BRA"
            name: "Brasilien"
            customsDeclarationFlag: true
            maxWeight: 31.5
            info: "null"
            addtlInfo: "F%C3%BCr den Paketversand nach Brasilien muss bis auf Weiteres immer der Service 'Premium' gebucht werden"
            addtlInfoLink: "null"
            forbiddenProducts:
            mandatoryProducts:
              - "123456888"
            language: "Englisch%2C%20Portugiesisch"
          - id: "48"
            alpha3: "DEU"
            name: "Deutschland"
            customsDeclarationFlag: false
            maxWeight: 31.5
            info: "null"
            addtlInfo: "null"
            addtlInfoLink: "null"
            language: "null"
          - id: "98"
            alpha3: "YEM"
            name: "Jemen"
            customsDeclarationFlag: true
            maxWeight: 31.5
            addtlInfo: "Aufgrund der... Ableitungs- bzw. Zustellbeschr%C3%A4nkungen ist ein Versand derzeit nicht mC3%B6glich"
            addtlInfoLink: "null"
            forbiddenProducts:
              - "PAK05"
              - "PAK10"
              - "PAK20"
            language: "Englisch%2C%20Landessprache"
            provinces: []
          - id: "249"
            alpha3: "USA"
            name: "Vereinigte Staaten von Amerkie (USA)"
            customsDeclarationFlag: true
            maxWeight: 31.5
            info: "null"
            addtlInfo: "%3Cstrong%3EAktueller%20Hinweis%3A%3C%2Fstrong%3E%3Cbr%20%2F%3E%20In%20Abh%C3%A4ngigkeit%20von%20den%20zur%20Verf%C3%BCgung%20stehenden%20Transportkapazit%C3%A4ten%20behalten%20wir%20uns%20vor%2C%20P%C3%A4ckchen%20und%20Pakete%20ohne%20den%20Service%20%26quot%3BPremium%26quot%3B%20bis%20auf%20weiteres%20auch%20auf%20dem%20Seeweg%20in%20die%20USA%20zu%20bef%C3%B6rdern.%20Die%20Frankierung%20solcher%20Sendungen%20ist%20ausschlie%C3%9Flich%20%3Cstrong%3Eonline%3C%2Fstrong%3E%20m%C3%B6glich%20und%20wir%20weisen%20ausdr%C3%BCcklich%20darauf%20hin%2C%20dass%20unter%20Umst%C3%A4nden%20mit%20sehr%20langen%20%3Cstrong%3ELaufzeiten%20von%20bis%20zu%2060%20Tagen%3C%2Fstrong%3E%20gerechnet%20werden%20muss.%20F%C3%BCr%20Ziele%20im%20Westen%20der%20Vereinigten%20Staaten%20oder%20in%20abgelegenen%20Regionen%20kann%20die%20Laufzeit%20auch%20dar%C3%BCber%20liegen.%20%3Cbr%20%2F%3EF%C3%BCr%20einen%20schnelleren%20Warenversand%20steht%20unver%C3%A4ndert%20das%20DHL%20Paket%20International%20mit%20dem%20Service%20%26quot%3BPremium%26quot%3B%20zur%20Verf%C3%BCgung%2C%20bei%20dem%20der%20Transport%20in%20die%20USA%20per%20Luftfracht%20erfolgt.%3Cbr%20%2F%3EWeitere%20Infos%20erhalten%20Sie%20%3Ca%20href%3D%22https%3A%2F%2Fwww.dhl.de%2Fweltweit%2Fusa%22%20class%3D%22textlink%20textlink--inline%22%20title%3D%22Zur%20DHL%20L%C3%A4nderseite%22%20target%3D%22_blank%22%3Eauf%20der%20DHL%20L%C3%A4nderseite%3C%2Fa%3E."
            addtlInfoLink: "null"
            language: "Englisch"
            provinces:
              - alpha2: "AA"
                name: "AA - Military mail Americas"
              - alpha2: "AE"
                name: "AE - Military mail Europe"
              - alpha2: "AK"
                name: "AK - Alaska"
              - alpha2: "AL"
                name: "AL - Alabama"

    CountryRegionListOF:
      summary: Example of a country region list for DHL Online Franking.
      value:
        regions:
          - regionId: "CH"
            countries:
              - "CHE"
          - regionId: "DEU"
            countries:
              - "DEU"
          - regionId: "GB"
            countries:
              - "GBR"
              - "IMN"

    OrderCancellationFullRequest:
      summary: Example of request with all information
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        customerEmail: "x@ab.cd"
        cancellationReason: "Fehlbestellung"

    OrderCancellationMandatoryRequest:
      summary: Example of request with madatory information only
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        customerEmail: "x@ab.cd"

    OrderCancellationMissingDataFailure:
      summary: Example of request with missing mandatory data
      value:
        customerEmail: "x@ab.cd"

    OrderCancellationWrongOrderIdFailure:
      summary: Example of request with wrong mandatory order id
      value:
        caasOrderId: "320123456789"
        customerEmail: "x@ab.cd"

    OrderCancellationSuccess:
      summary: Example of success message, only the caasOrderID is returned.
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"

    OrderUpdateComplete:
      summary: Example to update an order with all possible details
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 3
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88126"
            salesProduct:
              productId: 238600007
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
          transportConditionsAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderUpdateIMBundle:
      summary: Example IM with additional service
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 3
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88130"
            bundleReferenceConfigId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 1013
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
          transportConditionsAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderUpdateValidationFailureMissingEmail:
      summary: Example of an order update with missing email
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"

    OrderUpdateValidationFailureInvoiceType:
      summary: Example of an order update with missing noInvoice flag
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        email: "x@ab.cd"
        noInvoiceRequired: false
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"

    OrderUpdateValidationFailureTermsOfTrade:
      summary: Example of an order update with missing terms of trade acceptance flag
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: false
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"

    OrderUpdateValidationFailureTermsOfTradeRequirement:
      summary: Example of an order update with  terms of trade required flag
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeRequired: false
        payment:

    OrderUpdateValidationFailureMissingPaymentType:
      summary: Example of an order update with missing payment type
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true

    OrderUpdateValidationFailureInvalidPaymentType:
      summary: Example of an order update with invalid payment type
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "portokasse"
          paymentDetails:
            initToken: "abc"

    OrderUpdateValidationFailureDifferentProductTypes:
      summary: Example of an order update with a not allowed mixture of delivery types
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        products:
          - productId: 1
            quantity: 1
            deliveryType: "pdf"
          - productId: 1
            quantity: 1
            deliveryType: "mobile"
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderUpdateValidationFailureclientPriceUpdate:
      summary: Example of an order update with not allowed setting of the gross price
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 1
              grossPrice: 1
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderUpdateValidationAddDeviceEmail:
      summary: Example of an order update with email only
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        email: "x@ab.cd"

    OrderUpdateValidationAddDeviceId:
      summary: Example of an order update with device information only
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderFinalizationFailedResponse:
      summary: Finalization failed. Payment not sucessfull, therefore a new caasOrderId is generated
      value:
        description: "Payment not sucessfull, a new caasOrderId is generated."

    OrderFinalizationMissingDataErrorDevice:
      summary: Missing device information
      value:
        code: "4711"
        detail: "The device information is missing"

    OrderFinalizationPaymentFinalizationError:
      summary: Payment finalization with payment provider failed
      value:
        code: "0815"
        detail: "PayPal rejected the payment with finalize call"

    OrderFinalizationPaymentChangeError:
      summary: Payment finalization rejected, because change of payment via finalize call is not possible
      value:
        code: "666"
        detail: "It's not possible to change"

    OrderFulfillmentGenericDone:
      summary: Order is closed. No fulfillment in eFiliale
      description: Example withgeneric product type.
      value:
        fulfillment:
          - fulfillmentType: "none"
            fulfillmentResults:

    OrderFulfillmentNotYetFinalized:
      summary: Order is not yet finalized, no result entries
      value:
        fulfillment:

    OrderFulfillmentSinglePdfDone:
      summary: Order is closed. A single PDF fulfillment result exists
      value:
        fulfillment:
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  - productId: 102100001
                    fulfillmentId: "A0123456789"
                fulfillmentResult: "https://internetmarke.deutschepost.de/PcfExtensionWeb/document?keyphase=1&data=ORwfSjJTHkQXt%2BGGfetu9x1CLXkkYzUB"

    OrderFulfillmentMultiplePdfDone:
      summary: Order is closed. Multiple PDF fulfillment results exists
      description: Example for 3 Internetmarke stamps on a single printset (=pdf).
      value:
        fulfillment:
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  - productId: 102100001
                    fulfillmentId: "A0123456789"
                    trackingId: "123456789"
                  - productId: 102100001
                  - productId: 102100001
                    fulfillmentId: "A0123456789"
                result: "https://internetmarke.deutschepost.de/PcfExtensionWeb/document?keyphase=1&data=ORwfSjJTHkQXt%2BGGfetu9x1CLXkkYzUB"

    OrderFulfillmentSingleMobileDone:
      summary: Order is closed. A single fulfillment result for Mobile Briefmarke exists
      value:
        fulfillment:
          - fulfillmentType: "mobile"
            fulfillmentResults:
              - productIds:
                  - productId: 102200001
                result: "#MOBILE12348947534"

    OrderFulfillmentMultipleMobileDone:
      summary: Order is closed. Multiple fulfillment results for Mobile Briefmarke exists
      description: Example for 3 mobile stamps.
      value:
        fulfillment:
          - fulfillmentType: "mobile"
            fulfillmentResults:
              - productIds:
                  - productId: 102200001
                result: "#MOBILE12348947531"
              - productIds:
                  - productId: 102200001
                result: "#MOBILE12348947532"
              - productIds:
                  - productId: 102200001
                result: "#MOBILE12348947533"

    OrderFulfillmentNSADone:
      summary: Order is closed. NSA order is accepted for AZLN
      description: Example with NSA order.
      value:
        fulfillment:
          - fulfillmentType: "nsa"
            fulfillmentResults:
              - productIds:
                  - productId: 0123456789
                result: "U6232877"

    OrderFulfillmentMultipleProductSetsMixedDone:
      summary: Order is closed. Multiple fulfillment results for products sets for Mobile Briefmarke and Internetmarke stamps (PDF) exists
      description: Example for mixed basket response.
      value:
        fulfillment:
          - fulfillmentType: "mobile"
            fulfillmentResults:
              - productIds:
                  - productId: 102200001
                result: "#MOBILE12348947531"
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  - productId: 102100001
                    fulfillmentId: "A0123456789"
                    trackingId: "123456789"
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  - productId: 102100001
                  - productId: 102100001
                    fulfillmentId: "A0123456789"
                result: "https://internetmarke.deutschepost.de/PcfExtensionWeb/document?keyphase=1&data=ORwfSjJTHkQXt%2BGGfetu9x1CLXkkYzUB"
          - fulfillmentType: "mobile"
            fulfillmentResults:
              - productIds:
                  - productId: 102300001
                result: "#MOBILE12348947532"
              - productIds:
                  - productId: 102300001
                result: "#MOBILE12348947533"
              - productIds:
                  - productId: 102300001
                result: "#MOBILE12348947534"

    OrderInitializedResponse:
      summary: Order is initialized
      description:  The generated Caas order Id.
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"

    OrderInStateCreated:
      summary: Order that just got created. No update on the order happpened yet
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "open"
        orderAmount: 800
        creationDate: "2020-01-21"
        shopOrderId:
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 10
              grossPrice: 800
        email:
        noInvoiceRequired:
        legal:
          termsOfTradeAccepted:
        payment:
        fulfillment:
        deviceInformation:

    OrderInStateCreatedWithoutProducts:
      summary: Order that just got initialized. No products added. No update on the order happpened yet
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "open"
        orderAmount: 800
        creationDate: "2020-01-21"
        shopOrderId:
        products:
        email:
        noInvoiceRequired:
        legal:
          termsOfTradeRequired: true
          termsOfTradeAccepted:
        payment:
        fulfillment:
        deviceInformation:

    OrderInStateOpenPayPal:
      summary: PayPal Order is created but not payed yet. All relevant order details already exists
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "open"
        orderAmount: 240
        creationDate: "2020-01-21"
        shopOrderId:
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 3
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeRequired: true
          termsOfTradeAccepted: true
          transportConditionsRequired: true
          transportConditionsAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
        fulfillment:
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderInStateOpenSDD:
      summary: SDD Order is created but not payed yet. All relevant order details already exists
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "open"
        orderAmount: 240
        creationDate: "2020-01-21"
        shopOrderId:
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 3
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 182900005
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: false
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "sdd"
          paymentDetails:
            iban: "DE02120300000000202051"
            bic: "BYLADEM1001"
            accountHolder:
              name: "Mustermann"
              firstName: "Max"
              street: "Mustertstr."
              houseNo: "17"
              zipCode: "12345"
              city: "Musterstadt"
              country: "DE"
            mandateId: ""
        fulfillment:

    OrderInStateAcceptedSDD:
      summary: SDD Order is accepted, so payment data including mandateId is complete
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "payed"
        orderAmount: 240
        creationDate: "2020-01-21"
        shopOrderId:
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 3
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 182900005
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: false
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "sdd"
          paymentDetails:
            iban: "DE02120300000000202051"
            bic: "BYLADEM1001"
            accountHolder:
              name: "Mustermann"
              firstName: "Max"
              street: "Mustertstr."
              houseNo: "17"
              zipCode: "12345"
              city: "Musterstadt"
              country: "DE"
            mandateId: "L10013DE59R10E1R98VC00D2DX"
        fulfillment:

    OrderInStatePayedGooglePay:
      summary: Order that just got payed and finalized, but the fulfillment response is not yet there
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "payed"
        orderAmount: 80
        creationDate: "2020-01-21"
        shopOrderId: "3201234567"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 1
              grossPrice: 80
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "googlepay"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173093-b86b-050f-7f86-b698g6e56167"
            payerId:
            payerEmail:
        fulfillment:
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderInStateFulfilledPdf:
      summary: Order is closed. Payment PayPal. The PDF fulfillment result exists
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "payed"
        orderAmount: 80
        creationDate: "2020-01-21"
        shopOrderId: "3201234567"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173093-b86b-050f-7f86-b698g6e56167"
            payerId: "02w39pfaoku3480fzowelsu"
            payerEmail: "john@doe.com"
        fulfillment:
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  productId: 102100001
                  fulfillmentId: "A0123456789"
                  trackingId: "123456789"
                result: "https://internetmarke.deutschepost.de/PcfExtensionWeb/document?keyphase=1&data=ORwfSjJTHkQXt%2BGGfetu9x1CLXkkYzUB"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderInStateFulfilledPdfWithSDD:
      summary: Order is closed. Payment SDD. The PDF fulfillment result exists
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "payed"
        orderAmount: 80
        creationDate: "2020-01-21"
        shopOrderId: "3201234567"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "sdd"
          paymentDetails:
            iban: "DE02120300000000202051"
            bic: "BYLADEM1001"
            mandateId: "L10013DE59R10E1R98VC00D2DX"
        fulfillment:
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  productId: 102100001
                  fulfillmentId: "A0123456789"
                  trackingId: "123456789"
                result: "https://internetmarke.deutschepost.de/PcfExtensionWeb/document?keyphase=1&data=ORwfSjJTHkQXt%2BGGfetu9x1CLXkkYzUB"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderInStateFulfilledPdfWithZVT:
      summary: Order is closed. Payment ZVT. The PDF fulfillment result exists
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "payed"
        orderAmount: 80
        creationDate: "2020-01-21"
        shopOrderId: "3201234567"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: false
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "zvt"
          paymentDetails:
            podId: "65432999"
            terminalId: "35131061"
            transactionId: "531130171635257834"
            cardType: "Mastercard"
            amount: 80
            timestamp: "2017-07-21T17:32:28Z"
            invoiceText: "- Kundenbeleg -|||Kartenzahlung|||MC CREDIT|||Betrag: EUR 0,80||Terminal-Nr: 35131061|||Trace-Nr: 000053|||Beleg: 16|||Karten-Nr: ###############7692|||Folge-Nr: 0001|||Kartendaten: Kontaktlos|||AID: 642338|||VU-Nr: 4846578216875|||EMV-AID: A0000000045687|||Zahlung erfolgt|||AS-Proc-Code 0 00 055 00|||Capt.Ref.= 0000|||AID59: SM0037|||Antwortcode = 00"
            signature: "VGhpcyBpcyBub3QgdGhlIHJlYWwgc2lnbmF0dXJlLiBJdCdzIGp1c3QgYW4gZXhhbXBsZSBvZiB0aGUgYmFzZTY0IGVuY29kaW5nIG9mIGEgc3RyaW4u"
        fulfillment:
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  productId: 102100001
                  fulfillmentId: "A0123456789"
                  trackingId: "123456789"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderInStateFulfilledPdfAndMobile:
      summary: Order is closed. A product set of mobile and PDF fulfillment result exists
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "payed"
        orderAmount: 80
        creationDate: "2020-01-21"
        shopOrderId: "3201234567"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102100001
              quantity: 1
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102200001
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173093-b86b-050f-7f86-b698g6e56167"
            payerId: "02w39pfaoku3480fzowelsu"
            payerEmail: "john@doe.com"
        fulfillment:
          - fulfillmentType: "pdf"
            fulfillmentResults:
              - productIds:
                  productId: 102100001
                  fulfillmentId: "A0123456789"
                  trackingId: "123456789"
                result: "https://internetmarke.deutschepost.de/PcfExtensionWeb/document?keyphase=1&data=ORwfSjJTHkQXt%2BGGfetu9x1CLXkkYzUB"
          - fulfillmentType: "mobile"
            fulfillmentResults:
              - productIds:
                  productId: 102200001
                result: "#MOBILE12348947534"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderInStateFulfilledMobile:
      summary: Order is closed. The "Digitale Briefmarke" fulfillment result exists
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        orderState: "payed"
        orderAmount: 80
        creationDate: "2020-01-21"
        shopOrderId: "3201234567"
        products:
          - configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
            salesProduct:
              productId: 102200001
              quantity: 1
        email: "x@ab.cd"
        noInvoiceRequired: true
        legal:
          termsOfTradeAccepted: true
        payment:
          paymentType: "paypal"
          paymentDetails:
            initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
            paymentCode: "06173093-b86b-050f-7f86-b698g6e56167"
            payerId: "02w39pfaoku3480fzowelsu"
            payerEmail: "john@doe.com"
        fulfillment:
          - fulfillmentType: "mobile"
            fulfillmentResults:
              - productIds:
                  productId: 102200001
                result: "#MOBILE12348947534"
        deviceInformation:
          osType: "android"
          osVersion: "0815"
          deviceId: "a1b2c3d4e5"

    OrderNotActiveInSession:
      summary: Order not active in current session
      value:
        code: "OrderNotActiveInSession"
        detail: "Order not active in current session hence could not process the request"

    OrderPaymentDoneInformation:
      summary: Example to update an order with payment information from PayPal after payment
      value:
        paymentType: "paypal"
        paymentDetails:
          paymentCode: "06173093-b86b-050f-7f86-b698g6e56167"
          payerId: "02w39pfaoku3480fzowelsu"
          payerEmail: "john@doe.com"

    OrderPaymentDoneSDD:
      summary: Example to update an order with minimal payment information for SDD
      value:
        paymentType: "sdd"
        paymentDetails:
          iban: "DE02120300000000202051"
          bic: "BYLADEM1001"

    OrderPaymentDoneZVT:
      summary: Example to update an order with payment information for ZVT
      value:
        paymentType: "zvt"
        paymentDetails:
          podId: "4711"
          terminalId: "35131061"
          transactionId: "531130171635257834"
          cardType: "Mastercard"
          amount: 80
          timestamp: "2017-07-21T17:32:28Z"
          invoiceText: "- Kundenbeleg -|||Kartenzahlung|||MC CREDIT|||Betrag: EUR 0,80||Terminal-Nr: 35131061|||Trace-Nr: 000053|||Beleg: 16|||Karten-Nr: ###############7692|||Folge-Nr: 0001|||Kartendaten: Kontaktlos|||AID: 642338|||VU-Nr: 4846578216875|||EMV-AID: A0000000045687|||Zahlung erfolgt|||AS-Proc-Code 0 00 055 00|||Capt.Ref.= 0000|||AID59: SM0037|||Antwortcode = 00"
          signature: "VGhpcyBpcyBub3QgdGhlIHJlYWwgc2lnbmF0dXJlLiBJdCdzIGp1c3QgYW4gZXhhbXBsZSBvZiB0aGUgYmFzZTY0IGVuY29kaW5nIG9mIGEgc3RyaW4u"

    OrderPaymentFullSDD:
      summary: Example to update an order with full payment information for SDD
      value:
        paymentType: "sdd"
        paymentDetails:
          iban: "DE02120300000000202051"
          bic: "BYLADEM1001"
          accountHolder:
            name: "Mustermann"
            firstName: "Max"
            street: "Mustertstr."
            houseNo: "17"
            zipCode: "12345"
            city: "Musterstadt"
            country: "DE"

    OrderPaymentGiropayInformation:
      summary: Example to update an order with payment initialization information for Giropay
      value:
        paymentType: "giropay"
        paymentDetails:
          initUrl: "06173093-b86b-050f-7f86-b698g6e56167"

    OrderPaymentInitializedWithPSP:
      summary: Payment that just got initialized with PSP
      value:
        paymentType: "paypal"
        paymentDetails:
          initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
          paymentCode: null
          payerId: null
          payerEmail: null

    OrderPaymentFailureBeauseTokenSet:
      summary: Failes because it is not possile to set the init token from widget
      value:
        paymentType: "paypal"
        paymentDetails:
          initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
          paymentCode: "06173093-b86b-050f-7f86-b698g6e56167"
          payerId: "02w39pfaoku3480fzowelsu"
          payerEmail: "john@doe.com"

    OrderPaymentFailureBeauseTokenSet2:
      summary: Failes as well because it is not possile to set the init token from widget at all
      value:
        paymentType: "paypal"
        paymentDetails:
          initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
          paymentCode: null
          payerId: null
          payerEmail: null

    OrderPaymentFailureBeauseTokenSetResponse:
      summary: Failes because it is not possile to set the init token from widget
      value:
        code: "XXX"
        detail: "It's not possible to update the payment init token"

    OrderPaymentFailureBecauseMandateReferenceGiven:
      summary: Failes because mandateId is given in request
      value:
        paymentType: "sdd"
        paymentDetails:
          iban: "DE02120300000000202051"
          bic: "BYLADEM1001"
          mandateId: "L10013DE59R10E1R98VC00D2DX"

    OrderPaymentFailureSDDNoAccountHolderData:
      summary: Failed because account holder information is insufficient for SDD mandate creation
      value:
        paymentType: "sdd"
        paymentDetails:
          iban: "DE02120300000000202051"
          bic: "BYLADEM1001"
          accountHolder:
            name: "Mustermann"
            firstName: "Max"
            street:
            houseNo: "17"
            zipCode: "12345"
            city: "Musterstadt"
            country: "DE"
          mandateId:

    OrderPaymentFinalizedWithPayPal:
      summary: PayPal Payment that is executed
      value:
        paymentType: "paypal"
        paymentDetails:
          initToken: "sandbox_tvgn8533_fs4wwmjpcv33kyd7"
          paymentCode: "06173083-b86b-050b-7f86-b698f6e56667"
          payerId: "09w39pfjoku3489fzoweisu"
          payerEmail: "john@doe.com"

    OrderPaymentSDDStored:
      summary: SDD Payment is stored
      value:
        paymentType: "sdd"
        paymentDetails:
          iban: "DE02120300000000202051"
          bic: "BYLADEM1001"
          accountHolder:
            name: "Mustermann"
            firstName: "Max"
            street: "Mustertstr."
            houseNo: "17"
            zipCode: "12345"
            city: "Musterstadt"
            country: "DE"

    OrderPaymentsSingle:
      summary: Only one payment is available
      value:
        paymentsList:
          - rank: 8
            paymentType: "paypal"
            default: true

    OrderPaymentsMultiple:
      summary: A list of payment options
      value:
        paymentsList:
          - rank: 8
            paymentType: "paypal"
            default: false
          - rank: 1
            paymentType: "applepay"
            default: true

    OrderPaymentsMultipleWithCollision:
      summary: A list of payment options with ambiguously defined values. In such a case, the appearance in the result list defines the order and the first default payment is te be choosen
      value:
        paymentsList:
          - rank: 1
            paymentType: "googlepay"
            default: true
          - rank: 8
            paymentType: "paypal"
            default: false
          - rank: 1
            paymentType: "applepay"
            default: true

    OrderWithoutProductInformation:
      summary: Order does not have product information
      value:
        code: "OrderWithoutProdcutInfo"
        detail: "Order does not have product information"

    OrderValidationSuccess:
      summary: Order is ready for finalization.
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        valid: true

    OrderValidationFailurePayment:
      summary: Order has no payment information.
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        valid: false
        messages:
          - "PAYMENT_DETAILS_MISSING"

    OrderValidationFailureMultiple:
      summary: Order has no payment information and terms of trade are not accepted.
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        valid: false
        messages:
          - "PAYMENT_DETAILS_MISSING"
          - "TERMS_OF_TRADE_MISSING"

    OrderValidationFailureInconsistent:
      summary: Order has insonsitent information.
      value:
        caasOrderId: "e2fa323f-af4a-4ac1-b8a4-4287dbe494d0"
        valid: false
        messages:
          - "Sales product information are not identical to product configuration"

    PaymentsOneSingle:
      summary: Only one payment is available
      value:
        paymentsList:
          - rank: 8
            paymentType: "paypal"
            default: true

    PaymentsAndroidOnly:
      summary: A list of payment options for android devices
      value:
        paymentsList:
          - rank: 1
            paymentType: "googlepay"
            default: true
          - rank: 8
            paymentType: "paypal"
            default: false

    PaymentsiOSOnly:
      summary: A list of payment options for iOS devices
      value:
        paymentsList:
          - rank: 8
            paymentType: "paypal"
            default: false
          - rank: 1
            paymentType: "applepay"
            default: true

    PaymentsMultiple:
      summary: A list of payment options
      value:
        paymentsList:
          - rank: 8
            paymentType: "paypal"
            default: false
          - rank: 1
            paymentType: "applepay"
            default: true

    PaymentsMultipleWithCollision:
      summary: A list of payment options with ambiguously defined values. In such a case, the appearance in the result list defines the order and the first default payment is te be choosen
      value:
        paymentsList:
          - rank: 1
            paymentType: "googlepay"
            default: true
          - rank: 8
            paymentType: "paypal"
            default: false
          - rank: 1
            paymentType: "applepay"
            default: true

    ProductConfigurationInValid:
      summary: Example of an invalid valid product configuration (no product id, no quantity, invalid delivery type)
      value:
        product:
          productId:
          quantity:
        configuration:
          productFulfillerType: "im"
          productFulfillerDetails:
            - deliveryType: "mail"

    ProductConfigurationOrderAlreadyFinalized:
      summary: Order is already finalized, updates aren't possible anymore
      value:
        code: "XXX"
        detail: "It's not possible to update the product configuration as the order is already in advanced state."

    ProductConfigurationInValidResponse:
      summary: Failed because invalid valid product configuration (no product id, no quantity, invalid delivery type) was used
      value:
        code: "XXX"
        detail: "The given product configuration is invalid."

    ProductConfigurationValidIM:
      summary: Example of a valid IM product configuration
      value:
        product:
          configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
          bundleReferenceConfigId: ""
          salesProduct:
            productId: 102100001
            quantity: 3
        configuration:
          productFulfillerType: "im"
          productFulfillerDetails:
            - deliveryType: "pdf"
            - deliveryType: "pdf"
            - deliveryType: "pdf"

    ProductConfigurationValidNSA:
      summary: Example of a valid NSA product configuration
      value:
        product:
          configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
          bundleReferenceConfigId: ""
          salesProduct:
            productId: 271100001
            quantity: 1
          invoiceReferenceText: ""
        configuration:
          productFulfillerType: "nsa"
          productFulfillerDetails:
            - reason: "umzug"
              startDate: "2021.06.25"
              endDate: "2021.08.01"
              duration: 3
              persons:
                - name1: Max
                  name: Mustermann
                  purchaser: true
                  authorized: true
                  announcement: false
                - name1: Ingrid
                  name: Musterfrau
                  purchaser: false
                  authorized: true
                  announcement: false
              address1:
                country: "DE"
                street: "Heinrich-Brüning-Str."
                houseNo: "5"
                zipCode: "53113"
                city: "Bonn"
              address2:
                country: "DE"
                street: "Charles-de-Gaulle-Str."
                houseNo: "20"
                zipCode: "53113"
                city: "Bonn"

    ProductConfigurationValidResponseIM:
      summary: Example of a valid IM product configuration response
      value:
        product:
          configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
          bundleReferenceConfigId: ""
          salesProduct:
            productId: 102100001
            quantity: 3
        configuration:
          productFulfillerType: "im"
          productFulfillerDetails:
            - deliveryType: "pdf"
            - deliveryType: "pdf"
            - deliveryType: "pdf"

    ProductConfigurationSetValid:
      summary: Example of a set of valid product configurations
      value:
        products:
          - product:
              configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
              salesProduct:
                productId: 102100001
                quantity: 1
            configuration:
              productFulfillerType: "im"
              productFulfillerDetails:
                - deliveryType: "pdf"
          - product:
              configId: "2922d7ea-411f-11ea-b77f-2e728ce88126"
              salesProduct:
                productId: 666
                quantity: 6
            configuration:
              productFulfillerType: "im"
              productFulfillerDetails:
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"

    ProductConfigurationSetIMBundle:
      summary: Example of a set of IM with additional service
      value:
        products:
          - product:
              configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
              salesProduct:
                productId: 102100001
                quantity: 3
            configuration:
              productFulfillerType: "im"
              productFulfillerDetails:
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
          - product:
              configId: "2922d7ea-411f-11ea-b77f-2e728ce88130"
              bundleReferenceConfigId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
              salesProduct:
                productId: 1013
                quantity: 3
            configuration:
              productFulfillerType: "im"
              productFulfillerDetails:
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"

    ProductConfigurationValidPST:
      summary: Example of a valid Poststation product bundle of a DHL parcel and a pickup
      value:
        products:
          - product:
              configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
              salesProduct:
                productId: 137400058
                quantity: 1
            configuration:
              productFulfillerType: "none"
              productFulfillerDetails:
                - fulfillmentId: "RMYYG7SPX3VD"
                  trackingId: "94161022003008"
                  fulfillmentResult:
          - product:
              configId: "3022d7ea-411f-11ea-b77f-2e728ce88130"
              bundleReferenceConfigId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
              salesProduct:
                productId: 2632
                quantity: 1
              invoiceReferenceText: "Abholung am 15.10.2022"
            configuration:
              productFulfillerType: "none"
              productFulfillerDetails:

    ProductConfigurationSetFailureBundleWithDifferentQuantities:
      summary: Example of a set of IM with additional service which fails because of different quantities
      value:
        products:
          - product:
              configId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
              salesProduct:
                productId: 102100001
                quantity: 10
            configuration:
              productFulfillerType: "im"
              productFulfillerDetails:
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
                - deliveryType: "pdf"
          - product:
              configId: "2922d7ea-411f-11ea-b77f-2e728ce88130"
              bundleReferenceConfigId: "2922d7ea-411f-11ea-b77f-2e728ce88125"
              salesProduct:
                productId: 1013
                quantity: 1
            configuration:
              productFulfillerType: "im"
              productFulfillerDetails:
                - deliveryType: "pdf"

    ProductDetail:
      summary: Example of a product detail info
      value:
        skuId: ""
        productPrice: 80
        taxRate: 0
        displayInfo:
          productName: 'Standardbrief'
          productDescription: ""
          productImageReferenceType: "url"
          productImageReferenceSmall: 'https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118'
          productImageReferenceLarge: 'https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118'
          productCategoryReference:
            - categoryId: "eficascat1460007"
              displayOrder: 7
            - categoryId: "homepage"
              displayOrder: 1
        alternative:
        isService: false
        type: "im"
        fulfillmentInfo:
          pplId: "1"
          productDeliveryType: "pdf"
        properties:
          - key: "weight1"
            value: "bis 20 g"
          - key: "weight2"
            value: "(bis ca. 3 Standardseiten DIN A4 (80 g/m2))"
          - key: "usage"
            value: "Versand innerhalb Deutschlands"
          - key: "dimension1"
            value: "Mindestma&szlig;: 14 x 9 cm (L x B)"
          - key: "dimension2"
            value: "H&ouml;chstma&szlig;: 23,5 x 12,5 x 0,5 cm (L x B x H)"
          - key: "note1"
            value: "Hinweis"
          - key: "note2"
            value: "Nur Rechteckform möglich"
          - key: "tooltip"
            value: "POPProductVO.POPProductData.POPProdDescVO.productProperty"
          - key: "hintNo"
            value: "hint[].shortText"

    ProductDetailsList:
      summary: Example of a complete product list
      value:
        products:
          - productId: 102100001
            skuId: ""
            productPrice: 80
            taxRate: 0
            displayInfo:
              productName: "Standardbrief"
              productDescription: ""
              productImageReferenceType: "url"
              productImageReferenceSmall: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productImageReferenceLarge: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productCategoryReference:
                - categoryId: "eficascat1460007"
                  displayOrder: 7
                - categoryId: "homepage"
                  displayOrder: 1
            alternative:
            isService: false
            type: "im"
            fulfillmentInfo:
              pplId: "1"
              productDeliveryType: "pdf"
            properties:
              - key: "weight1"
                value: "bis 20 g"
              - key: "weight2"
                value: "(bis ca. 3 Standardseiten DIN A4 (80 g/m2))"
              - key: "usage"
                value: "Versand innerhalb Deutschlands"
              - key: "dimension1"
                value: "Mindestma&szlig;: 14 x 9 cm (L x B)"
              - key: "dimension2"
                value: "H&ouml;chstma&szlig;: 23,5 x 12,5 x 0,5 cm (L x B x H)"
              - key: "note1"
                value: "Hinweis"
              - key: "note2"
                value: "Nur Rechteckform möglich"
              - key: "tooltip"
                value: "POPProductVO.POPProductData.POPProdDescVO.productProperty"
              - key: "hintNo"
                value: "hint[].shortText"
          - productId: 102100009
            skuId: ""
            productPrice: 80
            taxRate: 0
            displayInfo:
              productName: "Standardbrief"
              productDescription: ""
              productImageReferenceType: "classname"
              productImageReferenceSmall: "ofb_standard_letter_small"
              productImageReferenceLarge: "ofb_standard_letter_large"
              productCategoryReference:
                - categoryId: "eficascat1460007"
                  displayOrder: 15
            fulfillmentInfo:
              pplId: "1"
              productDeliveryType: "mobile"
            properties:
              - key: "weight1"
                value: "bis 20 g"
              - key: "weight2"
                value: "(bis ca. 3 Standardseiten DIN A4 (80 g/m2))"
              - key: "usage"
                value: "Versand innerhalb Deutschlands"
              - key: "dimension1"
                value: "Mindestma&szlig;: 14 x 9 cm (L x B)"
              - key: "dimension2"
                value: "H&ouml;chstma&szlig;: 23,5 x 12,5 x 0,5 cm (L x B x H)"
              - key: "note1"
                value: "Hinweis"
              - key: "note2"
                value: "Nur Rechteckform möglich"
              - key: "tooltip"
                value: ""
              - key: "hintNo"
                value: ""
          - productId: 1013
            skuId: ""
            productPrice: 250
            taxRate: 0
            displayInfo:
              productName: "Einschreiben Standard"
              productDescription: "Einschreiben Standard"
              productImageReferenceType: "url"
              productImageReferenceLarge: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productCategoryReference:
                - categoryId: "catEinschreiben1234567"
                  displayOrder: 1
            alternative:
            isService: true
            type: "im"
            fulfillmentInfo:
              pplId: "1007"
              productDeliveryType: "im"
            properties:
          - productId: 1013
            skuId: ""
            productPrice: 250
            taxRate: 0
            displayInfo:
              productName: "Einschreiben Standard"
              productDescription: "Einschreiben Standard"
              productImageReferenceType: "url"
              productImageReferenceLarge: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productCategoryReference:
                - categoryId: "catEinschreiben1234567"
                  displayOrder: 1
            alternative:
            isService: true
            type: "im"
            fulfillmentInfo:
              pplId: "1007"
              productDeliveryType: "none"
            properties:
          - productId: 1014
            skuId: ""
            productPrice: 220
            taxRate: 0
            displayInfo:
              productName: "Einschreiben Eigenhändig"
              productDescription: "Einschreiben Eigenhändig"
              productImageReferenceType: "url"
              productImageReferenceLarge: 'https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118'
              productCategoryReference:
                - categoryId: "catEinschreiben1234567"
                  displayOrder: 1
            alternative:
            isService: true
            type: "im"
            fulfillmentInfo:
              pplId: "1007"
              productDeliveryType: "none"
          - productId: 1067
            skuId: ""
            productPrice: 220
            taxRate: 0
            displayInfo:
              productName: "Einschreiben Einwurf"
              productDescription: "Einschreiben Einwurf"
              productImageReferenceType: "url"
              productImageReferenceLarge: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productCategoryReference:
                - categoryId: "catEinschreiben1234567"
                  displayOrder: 1
            alternative:
            isService: true
            type: "im"
            fulfillmentInfo:
              pplId: "1007"
              productDeliveryType: "none"
          - productId: 102300001
            productPrice: 155
            taxRate: 0
            displayInfo:
              productName: "Großbrief"
              productDescription: ""
              productImageReferenceType: "url"
              productImageReferenceSmall: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productImageReferenceLarge: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productCategoryReference:
                - categoryId: "4"
                  displayOrder: 2
            alternative:
            isService: false
            type: "im"
            fulfillmentInfo:
              pplId: "0815"
              productDeliveryType: "pdf"
          - productId: 102200001
            productPrice: 95
            taxRate: 0
            displayInfo:
              productName: "Kompaktbrief"
              productDescription: ""
              productImageReferenceType: "url"
              productImageReferenceSmall: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productImageReferenceLarge: "https://shop.deutschepost.de/shop/art/blob.jsp?Item=efim1790118"
              productCategoryReference:
                - categoryId: "666"
                  displayOrder: 1
            isService: false
            type: "im"
            fulfillmentInfo:
              pplId: "4712"
              productDeliveryType: "pdf"
          - productId: 182900005
            productPrice: 599
            taxRate: 0
            displayInfo:
              productName: "Paket Nat. bis 5 kg"
              productDescription: ""
              productImageReferenceType: "classname"
              productImageReferenceSmall: "paket-5-kg"
              productCategoryReference:
                - categoryId: "poststation10004"
                  displayOrder: 42
            alternative: "182900007     // this is the alternative product with a different tax rate"
            isService: false
            type: "of"
            fulfillmentInfo:
            properties:
              - key: "weight1"
                value: "5 kg"
              - key: "usage"
                value: "Versand innerhalb Deutschlands"
              - key: "dimension1"
                value: "H&ouml;chstma&szlig;: 120 x 60 x 60 cm"
              - key: "dimension2"
                value: "Max. Gurtma&szlig;: (= L&auml;nge + 2 x Breite + 2 x H&ouml;he) 300 cm"
          - productId: 182900007
            productPrice: 713
            taxRate: 19
            displayInfo:
              productName: "Paket Nat. bis 5 kg"
              productDescription: ""
              productImageReferenceType: "classname"
              productImageReferenceSmall: "paket-5-kg"
              productCategoryReference:  "      // no entry, means it shall not be displayed by default. Display depends on the product it is replacing"
            alternative: "null      // no alternative means, it's a replacement product"
            isService: false
            type: "of"
            fulfillmentInfo:
            properties:
              - key: "weight1"
                value: "5 kg"
              - key: "usage"
                value: "Versand innerhalb Deutschlands"
              - key: "dimension1"
                value: "H&ouml;chstma&szlig;: 120 x 60 x 60 cm"
              - key: "dimension2"
                value: "Max. Gurtma&szlig;: (= L&auml;nge + 2 x Breite + 2 x H&ouml;he) 300 cm"
          - productId: 123456701
            productPrice: 600
            taxRate: 0
            displayInfo:
              productName: "Transportversicherung bis 2.500 EUR"
              productDescription:
              productImageReferenceType:
              productImageReferenceSmall:
              productCategoryReference: null
            alternative": ""
            isService: true
            type: "of"
            fulfillmentInfo:
            properties:
          - productId: 123456702
            productPrice: 1800
            taxRate: 0
            displayInfo:
              productName: "Transportversicherung bis 25.000 EUR"
              productDescription: "Schützen Sie Pakete mit wertvollen Inhalten durch eine zusätzliche Transportversicherung bis zu 2.500 EUR bzw. 25.000 EUR!<br/>Bitte beachten Sie bei Paketen mit dem Service Transportversicherung, dass das Paket gut und sicher verpackt und verschlossen ist (entsprechend den AGB), da ansonsten kein Versicherungsschutz besteht die Sendungen nicht zur Einlieferung in der Packstation, der Paketbox, im Paketbutler und im Paketkasten zugelassen sind die Verpackung möglichst keine Rückschlüsse auf einen erhöhten Wert beim Inhalt zulassen sollte bestimmte Güter nur bis zu einem Betrag von 500 EUR zugelassen sind und daher nicht versichert werden können (Mehr Informationen zu den zulässigen Gütern finden Sie hier) <br/>Hinweis: Bitte dokumentieren Sie für einen möglichen Versicherungsfall den Inhalt und Wert der Sendung mit einem geeigneten Nachweis (z.B. Rechnung, Quittung, Foto)."
              productImageReferenceType: ""
              productImageReferenceSmall: ""
              productCategoryReference: null
            alternative: ""
            type: "of"
            fulfillmentInfo:
            properties:
          - productId: 123456888
            skuid: ""
            productPrice: 2200
            taxRate: 19
            displayInfo:
              productName: "Premium"
              productDescription: "Mit dem Service Premium wird Ihr Paket immer auf dem schnellstmöglichen Weg transportiert und bevorzugt behandelt."
              productImageReferenceType: ""
              productImageReferenceSmall: ""
              productCategoryReference: null
            alternative: ""
            isService: true
            type: "of"
            fulfillmentInfo:
            properties:

    ProductServiceDetail:
      summary: Example of an additonal service detail info
      value:
        productId: 123456888
        skuid: ""
        productPrice: 2200
        taxRate: 19
        displayInfo:
          productName: "Premium"
          productDescription: "Mit dem Service Premium wird Ihr Paket immer auf dem schnellstmöglichen Weg transportiert und bevorzugt behandelt."
          productImageReferenceType: ""
          productImageReferenceSmall: ""
          productCategoryReference: null
        alternative: ""
        isService: true
        type: "of"
        fulfillmentInfo:
        properties:

    ServiceIbanValidateIbanOnlyRequest:
      summary: Example with only IBAN given, so BIC get's calculated
      value:
        iban:  "DE02120300000000202051"

    ServiceIbanValidateCompleteRequest:
      summary: Example with IBAN and BIC
      value:
        iban:  "DE02120300000000202051"
        bic: "BYLADEM1001"

    ServiceIbanValidateAccountAndBankCodeRequest:
      summary: Example for transformation of old bank information used before SEPA into IBAN/BIC
      value:
        transformFormat:
          accountNumber:  "1015871393"
          bankCode: "20050550"

    ServiceIbanValidateCompleteResponse:
      summary: Valid IBAN and BIC, BIC might got calculated
      value:
        iban:  "DE02120300000000202051"
        bic: "BYLADEM1001"
        status: true

    ServiceIbanValidateTransformationFailedResponse:
      summary: Failed transformation, no return data other than status
      value:
        iban:  ""
        bic: ""
        status: false

    ServiceIbanValidateFailedResponse:
      summary: Failed validation, the invalid data gets returned
      value:
        iban:  "DE123456"
        bic: "dummy"
        status: false

    ProductTypeLimitationsIM:
      summary: Example of a product limitation list for Internetmarke
      value:
        products:
          - productId: 102100001
            pplId: "1"
            services:
              - pplId: "1"
                label: "Ohne Zusatzleistungen"
                groupName: ""
                isMotifAllowed: true
                isTraceable: false
                ignoreTotal: false
                addonProductIds:
              - pplId: "1002"
                label: "Einwurf"
                groupName: "Einschreiben"
                isMotifAllowed: false
                isTraceable: true
                ignoreTotal: false
                addonProductIds:
                  - 1067
              - pplId: "1007"
                label: "Standard"
                groupName: "Einschreiben"
                isMotifAllowed: false
                isTraceable: true
                ignoreTotal: false
                addonProductIds:
                  - 1013
              - pplId: "1009"
                label: "Eigenhändig"
                groupName: "Einschreiben"
                isMotifAllowed: false
                isTraceable: true
                ignoreTotal: false
                addonProductIds:
                  - 1013
                  - 1014

    ProductTypeLimitationsOF:
      summary: Example of a product limitation list for DHL Online Frankierung
      value:
        products:
          - productCodeOF: "PAK10"
            attributes:
              maxGurtmass: 300,
              maxDepth: 60,
              maxLength: 120,
              maxWidth: 60,
              maxWeight: 10000,
              minDepth: 1,
              minLength: 15,
              minWidth: 11,
              tracking: true,
              liabilityLimit: 500
            regionPrices:
              - countries:
                  - "RW6"
                price:
                  amount: 5199,
                  tax: 0
                productId: "123456700"
              - countries:
                  - "DEU"
                price:
                  amount: 849,
                  tax: 0
                productId: "123456701"
              - countries:
                  - "RW3"
                  - "RW4"
                price:
                  amount: 3799,
                  tax: 0
                productId: "123456702"
              - countries:
                  - "RW8"
                price:
                  amount: 6199,
                  tax: 0
                productId: "123456704"
              - countries:
                  - "EU"
                price:
                  amount: 2099,
                  tax: 0
                productId: "123456705"
              - countries:
                  - "CH"
                  - "GB"
                price:
                  amount: 3499,
                  tax: 0
                productId: "123456706"
              - countries:
                  - "RW5"
                price:
                  amount: 5399,
                  tax: 0
                productId: "123456707"
              - countries:
                  - "RW7"
                price:
                  amount: 5899,
                  tax: 0
                productId: "123456708"
            serviceConditions:
              - services:
                  - "NNAHME"
                regionPrices:
                  - countries:
                      - "DEU"
                    price:
                      amount: 1010,
                      tax: 19
                    productId: "123456709"
              - services:
                  - "SPERR10"
                regionPrices:
                  - countries:
                      - "AUT"
                      - "BEL"
                      - "BGR"
                      - "CYP"
                      - "CZE"
                      - "DNK"
                      - "EST"
                      - "FIN"
                      - "FRA"
                      - "GRC"
                      - "HRV"
                      - "HUN"
                      - "IRL"
                      - "ITA"
                      - "LTU"
                      - "LUX"
                      - "LVA"
                      - "MLT"
                      - "NLD"
                      - "POL"
                      - "PRT"
                      - "ROU"
                      - "SVK"
                      - "SVN"
                      - "SWE"
                    price:
                      amount: 2498
                      tax: 19
                    productId: "123456710"
                  - countries:
                      - "DEU"
                    price:
                      amount: 1010,
                      tax: 19
                    productId: "123456711"
            serviceExcludes:
              - exclusionRule:
                  - "VERSI"
                  - "VERSI25000"
              - exclusionRule:
                  - "SPERR10"
                  - "WTAG"
              - exclusionRule:
                  - "NNAHME"
                  - "NNAHMEINT"
              - exclusionRule:
                  - "GRUENEU"
                  - "GRUENRW"
              - exclusionRule:
                  - "HVERSI1000"
                  - "HVERSI2000"
              - exclusionRule:
                  - "HVERSI1000"
                  - "HVERSI3000"
              - exclusionRule:
                  - "HVERSI1000"
                  - "HVERSI4000"
              - exclusionRule:
                  - "HVERSI1000"
                  - "HVERSI5000"
              - exclusionRule:
                  - "HVERSI2000"
                  - "HVERSI3000"
              - exclusionRule:
                  - "HVERSI2000"
                  - "HVERSI4000"
              - exclusionRule:
                  - "HVERSI2000"
                  - "HVERSI5000"
              - exclusionRule:
                  - "HVERSI3000"
                  - "HVERSI4000"
              - exclusionRule:
                  - "HVERSI3000"
                  - "HVERSI5000"
              - exclusionRule:
                  - "HVERSI4000"
                  - "HVERSI5000"
            availableServices:
              - "ASP"
              - "GRUENEU"
              - "GRUENRW"
              - "HVERSI1000"
              - "HVERSI2000"
              - "HVERSI3000"
              - "HVERSI4000"
              - "HVERSI5000"
              - "NNAHME"
              - "PREM10"
              - "SPERR10"
              - "VERSI"
              - "VERSI25000"
              - "WTAG"
        services:
          - productId: 0815
            productCodeOF: "SPERR10"
            attributes:
              orderKey: 70
            regionPrices:
              - countries:
                  - "AUT"
                  - "BEL"
                  - "BGR"
                  - "CYP"
                  - "CZE"
                  - "DNK"
                  - "EST"
                  - "FIN"
                  - "FRA"
                  - "GRC"
                  - "HRV"
                  - "HUN"
                  - "IRL"
                  - "ITA"
                  - "LTU"
                  - "LUX"
                  - "LVA"
                  - "MLT"
                  - "NLD"
                  - "POL"
                  - "PRT"
                  - "ROU"
                  - "SVK"
                  - "SVN"
                  - "SWE"
                price:
                  amount: 2975
                  tax: 19
                productId: "123456712"
              - countries:
                  - "DEU"
                price:
                  amount: 2678
                  tax: 0
                productId: "123456713"
          - productId: 0816
            productCodeOF: "VERSI"
            attributes:
              orderKey: 70
            regionPrices:
              - countries:
                  - "DEU"
                price:
                  amount: 600
                  tax: 0
                productId: "123456701"
          - productId: 0817
            productCodeOF: "VERSI25000"
            attributes:
              orderKey: 70
            regionPrices:
              - countries:
                  - "DEU"
                price:
                  amount: 1800
                  tax: 0
                productId: "123456702"
          - productId: 0123
            productCodeOF: "PREM10"
            attributes:
              orderKey: 70
            regionPrices:
              - countries:
                  - "DEU"
                price:
                  amount: 2200
                  tax: 19
                productId: "123456888"

#    MaintenanceMode:
#      summary: Backend application in maintenance mode (or not available at all)
#      value:
#        code: "MaintenanceMode"
#        detail: "Wegen Wartungsarbeiten steht die Anwendung bis 17:00 Uhr nicht zur Verfügung."
#
#    TechnicalError:
#      summary: Backend application with technical error
#      value:
#        code: "TechnicalError"
#        detail: "Aufgrund einer Störung steht die Anwendung derzeit nicht zur Verfügung. Versuchen Sie es bitte später noch einmal."

    InterfaceTechnicalError:
      summary: Backend application Internetmarke  responds technical error
      value:
        code: "TechnicalError"
        detail: "The PPL is invalid! Reason: The PPL with the version: 28 is currently not active for the provider., Order total is '4850' EuroCent and that is different from the given total."